--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v85 = v2(v0(v30, 16));
			if v19 then
				local v115 = v5(v85, v19);
				v19 = nil;
				return v115;
			else
				return v85;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v86 = 0 - 0;
			local v87;
			while true do
				if (v86 == (0 - (1065 - (68 + 997)))) then
					v87 = (v31 / ((3 - 1) ^ (v32 - ((1272 - (226 + 1044)) - 1)))) % ((621 - (555 + 64)) ^ (((v33 - (932 - ((3731 - 2874) + 74))) - (v32 - (569 - (367 + 201)))) + (928 - (214 + 713))));
					return v87 - (v87 % (1 + (117 - (32 + 85))));
				end
			end
		else
			local v88 = (1 + 1) ^ (v32 - (878 - ((401 - 119) + 595)));
			return (((v31 % (v88 + v88)) >= v88) and (1638 - (1523 + 114))) or (0 + 0);
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + 1 + 1);
		v18 = v18 + (959 - (892 + 65));
		return (v36 * 256) + v35;
	end
	local function v23()
		local v37, v38, v39, v40 = v1(v16, v18, v18 + (7 - (9 - 5)));
		v18 = v18 + (7 - 3);
		return (v40 * (16777566 - (87 + 263))) + (v39 * (121138 - 55602)) + (v38 * (188 + 68)) + v37;
	end
	local function v24()
		local v41 = v23();
		local v42 = v23();
		local v43 = 1 + 0;
		local v44 = (v20(v42, 3 - 2, 972 - (802 + 150)) * ((5 - (21 - (10 + 8))) ^ 32)) + v41;
		local v45 = v20(v42, 37 - 16, 23 + 8);
		local v46 = ((v20(v42, (3958 - 2929) - (915 + (524 - (416 + 26)))) == (2 - 1)) and -(1 + (0 - 0))) or (1 - 0);
		if (v45 == (1187 - (1069 + 118))) then
			if (v44 == 0) then
				return v46 * ((0 + 0) - 0);
			else
				v45 = (1 - 0) - 0;
				v43 = 0;
			end
		elseif (v45 == (356 + 1691)) then
			return ((v44 == (0 - 0)) and (v46 * (((439 - (145 + 293)) + 0) / (791 - (368 + 423))))) or (v46 * NaN);
		end
		return v8(v46, v45 - (1453 - (44 + 386))) * (v43 + (v44 / (2 ^ (163 - 111))));
	end
	local function v25(v47)
		local v48;
		if not v47 then
			v47 = v23();
			if (v47 == (1486 - (998 + 488))) then
				return "";
			end
		end
		v48 = v3(v16, v18, (v18 + v47) - (1 + 0));
		v18 = v18 + v47;
		local v49 = {};
		for v66 = 1 + 0, #v48 do
			v49[v66] = v2(v1(v3(v48, v66, v66)));
		end
		return v6(v49);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v50 = (function()
			return function(v89, v90, v91, v92, v93, v94, v95, v96)
				local v89 = (function()
					return 0;
				end)();
				local v90 = (function()
					return;
				end)();
				local v91 = (function()
					return;
				end)();
				while true do
					if (v89 ~= #"!") then
					else
						if (v90 == #" ") then
							v91 = (function()
								return v92() ~= (0 - 0);
							end)();
						elseif (v90 == 2) then
							v91 = (function()
								return v93();
							end)();
						elseif (v90 ~= #"asd") then
						else
							v91 = (function()
								return v94();
							end)();
						end
						v95[v96] = (function()
							return v91;
						end)();
						break;
					end
					if (v89 == (0 - 0)) then
						local v121 = (function()
							return 1206 - (696 + 510);
						end)();
						while true do
							if (v121 ~= 1) then
							else
								v89 = (function()
									return #"!";
								end)();
								break;
							end
							if (v121 ~= 0) then
							else
								v90 = (function()
									return v92();
								end)();
								v91 = (function()
									return nil;
								end)();
								v121 = (function()
									return 1 - 0;
								end)();
							end
						end
					end
				end
				return v89, v90, v91, v92, v93, v94, v95, v96;
			end;
		end)();
		local v51 = (function()
			return function(v97, v98, v99, v100, v101, v102, v103, v104, v105)
				local v106 = (function()
					return 1262 - (1091 + 171);
				end)();
				local v97 = (function()
					return;
				end)();
				local v98 = (function()
					return;
				end)();
				while true do
					if (v106 == 0) then
						local v122 = (function()
							return 0 + 0;
						end)();
						local v123 = (function()
							return;
						end)();
						while true do
							if ((0 - 0) ~= v122) then
							else
								v123 = (function()
									return 0 - 0;
								end)();
								while true do
									if (v123 ~= 0) then
									else
										local v126 = (function()
											return 374 - (123 + 251);
										end)();
										while true do
											if (v126 == (0 - 0)) then
												v97 = (function()
													return 698 - (208 + 490);
												end)();
												v98 = (function()
													return nil;
												end)();
												v126 = (function()
													return 1;
												end)();
											end
											if ((1 + 0) == v126) then
												v123 = (function()
													return 1;
												end)();
												break;
											end
										end
									end
									if (v123 ~= (1 + 0)) then
									else
										v106 = (function()
											return 837 - (660 + 176);
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v106 ~= 1) then
					else
						local v124 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v124 == 0) then
								while true do
									if (v97 == 0) then
										v98 = (function()
											return v99();
										end)();
										if (v100(v98, #">", #":") ~= (202 - (14 + 188))) then
										else
											local v127 = (function()
												return 675 - (534 + 141);
											end)();
											local v128 = (function()
												return;
											end)();
											local v129 = (function()
												return;
											end)();
											local v130 = (function()
												return;
											end)();
											while true do
												if (3 == v127) then
													if (v100(v129, #"91(", #"91(") == #",") then
														v130[#"0313"] = (function()
															return v103[v130[#"xnxx"]];
														end)();
													end
													v104[v105] = (function()
														return v130;
													end)();
													break;
												end
												if (v127 ~= 1) then
												else
													local v132 = (function()
														return 0;
													end)();
													while true do
														if (v132 == 0) then
															v130 = (function()
																return {v101(),v101(),nil,nil};
															end)();
															if (v128 == (0 + 0)) then
																local v5186 = (function()
																	return 0 + 0;
																end)();
																while true do
																	if (v5186 == 0) then
																		v130[#"xxx"] = (function()
																			return v101();
																		end)();
																		v130[#"asd1"] = (function()
																			return v101();
																		end)();
																		break;
																	end
																end
															elseif (v128 == #"<") then
																v130[#"asd"] = (function()
																	return v102();
																end)();
															elseif (v128 == 2) then
																v130[#"-19"] = (function()
																	return v102() - ((3 - 1) ^ 16);
																end)();
															elseif (v128 == #"19(") then
																local v9747 = (function()
																	return 0;
																end)();
																local v9748 = (function()
																	return;
																end)();
																while true do
																	if (v9747 ~= (0 - 0)) then
																	else
																		v9748 = (function()
																			return 0 - 0;
																		end)();
																		while true do
																			if (v9748 ~= (0 + 0)) then
																			else
																				v130[#"91("] = (function()
																					return v102() - ((2 + 0) ^ 16);
																				end)();
																				v130[#".dev"] = (function()
																					return v101();
																				end)();
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v132 = (function()
																return 1;
															end)();
														end
														if (v132 ~= 1) then
														else
															v127 = (function()
																return 398 - (115 + 281);
															end)();
															break;
														end
													end
												end
												if (v127 == 2) then
													if (v100(v129, #"{", #"~") == #",") then
														v130[4 - 2] = (function()
															return v103[v130[2]];
														end)();
													end
													if (v100(v129, 2 + 0, 4 - 2) == #"|") then
														v130[#"91("] = (function()
															return v103[v130[#"gha"]];
														end)();
													end
													v127 = (function()
														return 10 - 7;
													end)();
												end
												if (v127 ~= (867 - (550 + 317))) then
												else
													local v133 = (function()
														return 0;
													end)();
													local v134 = (function()
														return;
													end)();
													while true do
														if (v133 == (0 - 0)) then
															v134 = (function()
																return 0 - 0;
															end)();
															while true do
																if (1 ~= v134) then
																else
																	v127 = (function()
																		return 1;
																	end)();
																	break;
																end
																if (v134 ~= (0 - 0)) then
																else
																	v128 = (function()
																		return v100(v98, 2, #"91(");
																	end)();
																	v129 = (function()
																		return v100(v98, #"0313", 291 - (134 + 151));
																	end)();
																	v134 = (function()
																		return 1;
																	end)();
																end
															end
															break;
														end
													end
												end
											end
										end
										break;
									end
								end
								return v97, v98, v99, v100, v101, v102, v103, v104, v105;
							end
						end
					end
				end
			end;
		end)();
		local v52 = (function()
			return function(v107, v108, v109)
				local v110 = (function()
					return 0;
				end)();
				local v111 = (function()
					return;
				end)();
				while true do
					if (v110 ~= (1665 - (970 + 695))) then
					else
						v111 = (function()
							return 0;
						end)();
						while true do
							if (v111 == 0) then
								v107[v108 - #"\\"] = (function()
									return v109();
								end)();
								return v107, v108, v109;
							end
						end
						break;
					end
				end
			end;
		end)();
		local v53 = (function()
			return {};
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {v53,v54,nil,v55};
		end)();
		local v57 = (function()
			return v23();
		end)();
		local v58 = (function()
			return {};
		end)();
		for v68 = #"}", v57 do
			FlatIdent_24A02, Type, Cons, v21, v24, v25, v58, v68 = (function()
				return v50(FlatIdent_24A02, Type, Cons, v21, v24, v25, v58, v68);
			end)();
		end
		v56[#"asd"] = (function()
			return v21();
		end)();
		for v69 = #".", v23() do
			FlatIdent_89ECE, Descriptor, v21, v20, v22, v23, v58, v53, v69 = (function()
				return v51(FlatIdent_89ECE, Descriptor, v21, v20, v22, v23, v58, v53, v69);
			end)();
		end
		for v70 = #"~", v23() do
			v54, v70, v28 = (function()
				return v52(v54, v70, v28);
			end)();
		end
		return v56;
	end
	local function v29(v60, v61, v62)
		local v63 = v60[1 - (792 - (159 + 633))];
		local v64 = v60[2];
		local v65 = v60[1993 - (582 + 1408)];
		return function(...)
			local v71 = v63;
			local v72 = v64;
			local v73 = v65;
			local v74 = v27;
			local v75 = 3 - 2;
			local v76 = -(1 - 0);
			local v77 = {};
			local v78 = {...};
			local v79 = v12("#", ...) - 1;
			local v80 = {};
			local v81 = {};
			for v112 = 1824 - (1195 + 629), v79 do
				if (v112 >= v73) then
					v77[v112 - v73] = v78[v112 + 1];
				else
					v81[v112] = v78[v112 + (1 - (0 + 0))];
				end
			end
			local v82 = (v79 - v73) + 1;
			local v83;
			local v84;
			while true do
				v83 = v71[v75];
				v84 = v83[1];
				if (v84 <= (444 - (187 + (255 - 201)))) then
					if (v84 <= (881 - (162 + 618))) then
						if ((v84 <= 50) or (1082 == 4202)) then
							if ((v84 <= 24) or (423 >= 2490)) then
								if (v84 <= (8 + 3)) then
									if (v84 <= (4 + 1)) then
										if (v84 <= 2) then
											if (v84 <= (0 - 0)) then
												do
													return;
												end
											elseif (v84 == (1 - 0)) then
												local v1498;
												v81[v83[1 + 1]] = v81[v83[1639 - (1373 + 263)]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[1003 - ((1470 - 1019) + 549)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1 + 1]] = v81[v83[4 - 1]];
												v75 = v75 + (1 - (0 + 0));
												v83 = v71[v75];
												v1498 = v83[(248 + 1138) - (746 + 638)];
												v81[v1498] = v81[v1498](v13(v81, v1498 + 1 + 0, v83[4 - 1]));
												v75 = v75 + (342 - (218 + 123));
												v83 = v71[v75];
												v81[v83[1583 - (1535 + (75 - 29))]] = v81[v83[3 + 0]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												if v81[v83[562 - (306 + 254)]] then
													v75 = v75 + 1;
												else
													v75 = v83[1 + 2];
												end
											else
												local v1509 = 0;
												local v1510;
												local v1511;
												while true do
													if (v1509 == 5) then
														v81[v83[3 - 1]] = v81[v83[1470 - (899 + 568)]][v83[3 + 0 + (1185 - (27 + 1157))]];
														v75 = v75 + (2 - 1);
														v83 = v71[v75];
														v81[v83[605 - (268 + 335)]] = v62[v83[3]];
														v75 = v75 + 1;
														v83 = v71[v75];
														v1509 = 296 - (60 + 230);
													end
													if (v1509 == (574 - (426 + 146))) then
														v1510 = v81[v83[1 + 2]];
														v81[v1511 + (1457 - (282 + 1174))] = v1510;
														v81[v1511] = v1510[v83[815 - (569 + 242)]];
														v75 = v75 + ((1 + 1) - 1);
														v83 = v71[v75];
														v81[v83[2]] = v83[1 + 2];
														v1509 = 3;
													end
													if ((1037 - (706 + 318)) == v1509) then
														v83 = v71[v75];
														v81[v83[1253 - (721 + 530)]][v83[1274 - (945 + (457 - 131))]] = v81[v83[(20 - 11) - 5]];
														v75 = v75 + 1;
														v83 = v71[v75];
														v1511 = v83[2 + 0];
														v81[v1511] = v81[v1511](v13(v81, v1511 + (701 - (271 + 429)), v83[3]));
														v1509 = 10 + 3 + 1;
													end
													if (v1509 == 0) then
														v1510 = nil;
														v1511 = nil;
														v1511 = v83[1502 - (1408 + 92)];
														v1510 = v81[v83[1089 - (461 + 405 + 220)]];
														v81[v1511 + (1289 - (993 + 295))] = v1510;
														v81[v1511] = v1510[v83[4]];
														v1509 = 1;
													end
													if ((1 + 6) == v1509) then
														v81[v83[1173 - (418 + 753)]] = v81[v83[3]][v83[2 + 2]];
														v75 = v75 + 1;
														v83 = v71[v75];
														v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[2 + 2]];
														v75 = v75 + (530 - (406 + 123));
														v83 = v71[v75];
														v1509 = 1777 - (1749 + 20);
													end
													if (v1509 == (3 + 6)) then
														v81[v83[1324 - (1249 + 73)]] = v81[v83[8 - 5]][v83[2 + 2]];
														v75 = v75 + (1146 - (466 + 679));
														v83 = v71[v75];
														v81[v83[2]] = v62[v83[6 - 3]];
														v75 = v75 + ((9 - 7) - 1);
														v83 = v71[v75];
														v1509 = 1910 - (106 + 1794);
													end
													if ((v1509 == (2 + 2)) or (1647 >= 4102)) then
														v81[v83[1 + 1]] = v81[v83[8 - 5]][v83[10 - 6]];
														v75 = v75 + (115 - (4 + 110));
														v83 = v71[v75];
														v81[v83[586 - (57 + 527)]] = v81[v83[(4023 - 2593) - (41 + 1386)]][v83[107 - (17 + 86)]];
														v75 = v75 + 1 + 0;
														v83 = v71[v75];
														v1509 = 11 - 6;
													end
													if (((2 - 1) == v1509) or (4131 < 7)) then
														v75 = v75 + (167 - (122 + 44));
														v83 = v71[v75];
														v81[v83[2]] = v62[v83[3]];
														v75 = v75 + (1 - 0);
														v83 = v71[v75];
														v1511 = v83[6 - (738 - (11 + 723))];
														v1509 = 2;
													end
													if (v1509 == (14 + 2)) then
														v75 = v83[3];
														break;
													end
													if (v1509 == (1 + 5)) then
														v81[v83[3 - 1]] = {};
														v75 = v75 + (66 - (30 + 35));
														v83 = v71[v75];
														v81[v83[2]] = v62[v83[3 + 0]];
														v75 = v75 + (1258 - (1043 + 214));
														v83 = v71[v75];
														v1509 = 26 - 19;
													end
													if (v1509 == (1227 - (323 + 889))) then
														v75 = v75 + (2 - 1);
														v83 = v71[v75];
														v1511 = v83[2];
														v81[v1511](v81[v1511 + (581 - (361 + 219))]);
														v75 = v75 + 1;
														v83 = v71[v75];
														v1509 = 336 - (53 + 267);
													end
													if ((3 == v1509) or (4888 == 125)) then
														v75 = v75 + 1;
														v83 = v71[v75];
														v1511 = v83[1 + 1];
														v81[v1511] = v81[v1511](v13(v81, v1511 + (414 - (15 + 271 + 127)), v83[3]));
														v75 = v75 + (983 - (18 + 964));
														v83 = v71[v75];
														v1509 = 14 - 10;
													end
													if (v1509 == 12) then
														v1511 = v83[2 + 0];
														v81[v1511] = v81[v1511](v13(v81, v1511 + (2 - 1), v83[2 + 1]));
														v75 = v75 + (851 - (20 + 830));
														v83 = v71[v75];
														v81[v83[2 + (0 - 0)]] = v81[v83[3]] * v81[v83[130 - (116 + 10)]];
														v75 = v75 + 1 + 0;
														v1509 = 751 - (439 + 103 + 196);
													end
													if ((1406 <= 1823) and (v1509 == 11)) then
														v81[v83[3 - 1]] = v83[1 + 2];
														v75 = v75 + 1 + 0;
														v83 = v71[v75];
														v81[v83[2 - 0]] = v83[2 + 1];
														v75 = v75 + (2 - 1);
														v83 = v71[v75];
														v1509 = 30 - (14 + 4);
													end
													if (v1509 == (1561 - (1126 + 425))) then
														v81[v83[2]] = v81[v83[408 - (118 + 287)]][v83[15 - (36 - 25)]];
														v75 = v75 + (1122 - (118 + 1003));
														v83 = v71[v75];
														v81[v83[5 - 3]] = v83[380 - (142 + 235)];
														v75 = v75 + (4 - 3);
														v83 = v71[v75];
														v1509 = 3 + (759 - (542 + 209));
													end
													if (v1509 == 14) then
														v75 = v75 + (978 - ((1937 - 1384) + 424));
														v83 = v71[v75];
														v1511 = v83[3 - 1];
														v1510 = v81[v83[3 + 0]];
														v81[v1511 + 1 + 0] = v1510;
														v81[v1511] = v1510[v83[3 + 1]];
														v1509 = 7 + 8;
													end
													if (v1509 == (5 + 3)) then
														v81[v83[4 - 2]] = v81[v83[3]][v83[11 - 7]];
														v75 = v75 + (2 - (1 - 0));
														v83 = v71[v75];
														v81[v83[1 + 1]] = v81[v83[3]][v83[19 - 15]];
														v75 = v75 + (754 - (239 + (1577 - 1063)));
														v83 = v71[v75];
														v1509 = 9;
													end
												end
											end
										elseif (v84 <= (2 + 1)) then
											local v138 = 1329 - (201 + 596 + 532);
											local v139;
											local v140;
											while true do
												if ((v138 == 4) or (1133 == 4949)) then
													v139 = v81[v83[3 + (1637 - (44 + 1593))]];
													v81[v140 + 1] = v139;
													v81[v140] = v139[v83[2 + 2]];
													v75 = v75 + (2 - 1);
													v138 = 1207 - (373 + 829);
												end
												if ((2559 > 1016) and (7 == v138)) then
													v81[v83[733 - (476 + 255)]] = v81[v83[3]];
													v75 = v75 + ((1067 + 64) - (369 + 761));
													v83 = v71[v75];
													if v81[v83[2 + 0]] then
														v75 = v75 + 1;
													else
														v75 = v83[5 - 2];
													end
													break;
												end
												if ((v138 == ((0 + 0) - 0)) or (3361 > 4231)) then
													v139 = nil;
													v140 = nil;
													v140 = v83[240 - (64 + 174)];
													v139 = v81[v83[2 + 1]];
													v138 = 1;
												end
												if (v138 == (1 + 2)) then
													v81[v140] = v81[v140](v13(v81, v140 + (1 - (205 - (14 + 191))), v83[339 - (144 + 192)]));
													v75 = v75 + (217 - (28 + 14 + 174));
													v83 = v71[v75];
													v140 = v83[2];
													v138 = 4;
												end
												if ((v138 == (5 + 1)) or (2303 > 2906)) then
													v140 = v83[2];
													v81[v140] = v81[v140](v13(v81, v140 + 1 + 0, v83[2 + 1]));
													v75 = v75 + (1505 - (363 + 1141));
													v83 = v71[v75];
													v138 = 1587 - (1183 + 397);
												end
												if (v138 == (2 - 1)) then
													v81[v140 + 1 + 0] = v139;
													v81[v140] = v139[v83[4]];
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v138 = (3320 - 1343) - (1913 + 62);
												end
												if ((2809 >= 1926) and (v138 == (2 + 0))) then
													v81[v83[2]] = v83[7 - 4];
													v75 = v75 + 1;
													v83 = v71[v75];
													v140 = v83[1935 - (565 + 1368)];
													v138 = 11 - 8;
												end
												if (5 == v138) then
													v83 = v71[v75];
													v81[v83[2]] = v83[1664 - (1477 + 184)];
													v75 = v75 + (1 - 0);
													v83 = v71[v75];
													v138 = 6 + 0;
												end
											end
										elseif (v84 > 4) then
											local v1512 = 856 - (564 + 292);
											local v1513;
											local v1514;
											while true do
												if (v1512 == (2 - (0 + 0))) then
													v81[v83[(13 - 8) - 3]] = v83[307 - (244 + 60)] ~= (0 + 0);
													v75 = v75 + ((158 + 319) - (5 + 36 + (910 - 475)));
													v83 = v71[v75];
													v1512 = 3;
												end
												if (v1512 == (1001 - (938 + (1038 - (738 + 237))))) then
													v1513 = nil;
													v1514 = nil;
													v1514 = v83[2 + 0];
													v1512 = 1126 - (936 + 189);
												end
												if (v1512 == 1) then
													v81[v1514](v13(v81, v1514 + 1 + 0, v83[(28 + 1588) - (1565 + 48)]));
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v1512 = 2 + 0;
												end
												if ((7 - 1) == v1512) then
													v81[v83[2]] = v83[1141 - (782 + (1197 - 841))];
													break;
												end
												if (v1512 == (270 - (176 + 91))) then
													v62[v83[7 - 4]] = v81[v83[2 - 0]];
													v75 = v75 + 1;
													v83 = v71[v75];
													v1512 = 4;
												end
												if ((1097 - (585 + 390 + 117)) == v1512) then
													v81[v1514] = v1513[v83[1879 - (157 + 1718)]];
													v75 = v75 + (1 - 0) + (1553 - (392 + 1161));
													v83 = v71[v75];
													v1512 = 14 - 8;
												end
												if (v1512 == 4) then
													v1514 = v83[6 - 4];
													v1513 = v81[v83[10 - 7]];
													v81[v1514 + 1] = v1513;
													v1512 = 1023 - ((2288 - (987 + 604)) + 321);
												end
											end
										else
											local v1515;
											local v1516;
											v1516 = v83[2];
											v1515 = v81[v83[7 - (3 + 1)]];
											v81[v1516 + (1 - 0)] = v1515;
											v81[v1516] = v1515[v83[8 - 4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[3 - 1]] = v83[3];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1516 = v83[5 - 3];
											do
												return v81[v1516](v13(v81, v1516 + (1228 - (48 + 274 + 905)), v83[3]));
											end
											v75 = v75 + ((1786 - (320 + 854)) - (602 + 9));
											v83 = v71[v75];
											v1516 = v83[1191 - (449 + 740)];
											do
												return v13(v81, v1516, v76);
											end
											v75 = v75 + (788 - (72 + 715));
											v83 = v71[v75];
											do
												return;
											end
										end
									elseif (v84 <= (880 - (826 + 46))) then
										if (v84 <= (953 - (245 + 702))) then
											local v141;
											local v142;
											local v143;
											v81[v83[6 - 4]] = v62[v83[(2 - 1) + 2]];
											v75 = v75 + (1899 - (260 + (2967 - (656 + 673))));
											v83 = v71[v75];
											v143 = v83[2];
											v142 = v81[v83[(2120 - (812 + 865)) - (382 + 58)]];
											v81[v143 + (3 - 2)] = v142;
											v81[v143] = v142[v83[4 + 0]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2]] = v83[1208 - (902 + 303)];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[4 - 2]] = v62[v83[(1 - 0) + 2]];
											v75 = v75 + (1691 - (1121 + 569));
											v83 = v71[v75];
											v81[v83[216 - (22 + 192)]] = v81[v83[686 - ((1904 - (720 + 701)) + 200)]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1465 - (1404 + (188 - 129))]] = v81[v83[(7 + 1) - 5]][v83[4 - (0 - 0)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[767 - (468 + 297)]] = v81[v83[565 - (334 + 228)]][v83[13 - 9]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[5 - 2]][v83[2 + 2]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[(990 - (751 + 1)) - (141 + 95)]] = v81[v83[3 + 0]][v83[4]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[4 - 2]] = v83[1 + 2];
											v75 = v75 + ((1929 - (410 + 1517)) - 1);
											v83 = v71[v75];
											v142 = v83[3 + 0 + 0];
											v141 = v81[v142];
											for v1474 = v142 + 1, v83[3 + 1] do
												v141 = v141 .. v81[v1474];
											end
											v81[v83[2 - 0]] = v141;
											v75 = v75 + 1 + (795 - (406 + 389));
											v83 = v71[v75];
											v81[v83[165 - (92 + 71)]] = v83[3];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v143 = v83[2 - 0];
											v81[v143](v13(v81, v143 + (766 - (574 + 191)), v83[(6 - 3) + 0]));
											v75 = v75 + (2 - (631 - (547 + 83)));
											v83 = v71[v75];
											do
												return;
											end
										elseif ((4872 > 1402) and (v84 > (4 + 3))) then
											local v1527 = 849 - (254 + 595);
											local v1528;
											local v1529;
											while true do
												if (v1527 == 6) then
													v81[v1529](v13(v81, v1529 + 1, v83[129 - (55 + (251 - 180))]));
													v75 = v75 + 1;
													v83 = v71[v75];
													do
														return;
													end
													break;
												end
												if ((v1527 == (2 - 0)) or (3306 > 4932)) then
													v81[v1529] = v1528[v83[1794 - (573 + 1217)]];
													v75 = v75 + 1;
													v83 = v71[v75];
													v81[v83[5 - 3]] = v83[1 + 2];
													v1527 = 3;
												end
												if (v1527 == (1 - 0)) then
													v83 = v71[v75];
													v1529 = v83[2 + 0];
													v1528 = v81[v83[3]];
													v81[v1529 + (940 - (714 + 225))] = v1528;
													v1527 = 5 - (1 + 2);
												end
												if ((3247 >= 1043) and (v1527 == (6 - 1))) then
													v81[v83[1 + 1]] = v83[3 - 0];
													v75 = v75 + 1;
													v83 = v71[v75];
													v1529 = v83[808 - (118 + 688)];
													v1527 = 6;
												end
												if (v1527 == (48 - (25 + 23))) then
													v1528 = nil;
													v1529 = nil;
													v81[v83[1 + 1]] = v62[v83[1889 - (927 + 959)]];
													v75 = v75 + (3 - 2);
													v1527 = 1;
												end
												if (v1527 == (736 - (16 + 716))) then
													v83 = v71[v75];
													v81[v83[2]] = v81[v83[5 - 2]][v83[101 - (11 + (866 - (78 + 702)))]];
													v75 = v75 + (3 - 2);
													v83 = v71[v75];
													v1527 = 12 - 7;
												end
												if (v1527 == (288 - (175 + 62 + 48))) then
													v75 = v75 + (2 - (4 - 3));
													v83 = v71[v75];
													v81[v83[2]] = v62[v83[3]];
													v75 = v75 + 1;
													v1527 = 19 - 15;
												end
											end
										else
											local v1530 = 0;
											local v1531;
											while true do
												if ((v1530 == (1800 - (503 + 1293))) or (3610 <= 1339)) then
													v81[v83[(546 - (499 + 42)) - 3]] = v81[v83[3 + 0]][v83[4]];
													v75 = v75 + (1062 - (810 + 251));
													v83 = v71[v75];
													v81[v83[(2 - 0) + 0]] = v81[v83[1 + 2]][v83[4 + 0]];
													v1530 = 5;
												end
												if (v1530 == (535 - (43 + 490))) then
													v75 = v75 + (734 - (711 + 22));
													v83 = v71[v75];
													v81[v83[7 - 5]] = v81[v83[862 - (240 + 619)]][v81[v83[1 + 3]]];
													v75 = v75 + (1 - 0);
													v1530 = 1 + 2;
												end
												if ((2412 == 2412) and (v1530 == (1747 - (1344 + 400)))) then
													v83 = v71[v75];
													v81[v83[(46 + 361) - (255 + 150)]] = v81[v83[3 + 0]][v83[3 + 1]];
													v75 = v75 + (4 - 3);
													v83 = v71[v75];
													v1530 = 12 - 8;
												end
												if (v1530 == 0) then
													v1531 = nil;
													v81[v83[1741 - (404 + 1335)]] = v62[v83[409 - (183 + 223)]];
													v75 = v75 + (1 - 0);
													v83 = v71[v75];
													v1530 = 1;
												end
												if (v1530 == (4 + 1)) then
													v75 = v75 + 1 + 0 + 0;
													v83 = v71[v75];
													v1531 = v83[2];
													v81[v1531](v81[v1531 + (338 - (10 + 327))]);
													v1530 = 5 + 1;
												end
												if (v1530 == (344 - (118 + 220))) then
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v75 = v83[452 - (108 + (947 - 606))];
													break;
												end
												if ((1 + 0) == v1530) then
													v81[v83[8 - 6]] = v81[v83[1496 - ((2042 - 1331) + 782)]][v83[(5 + 2) - 3]];
													v75 = v75 + (470 - (270 + 199));
													v83 = v71[v75];
													v81[v83[1 + 1]] = v81[v83[3]][v83[1823 - (580 + 1239)]];
													v1530 = 2;
												end
											end
										end
									elseif (v84 <= (26 - 17)) then
										local v172;
										local v173;
										local v174;
										v81[v83[2 + (563 - (168 + 395))]] = v62[v83[1 + (1972 - (939 + 1031))]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v174 = v83[4 - 2];
										v173 = v81[v83[3]];
										v81[v174 + 1 + 0] = v173;
										v81[v174] = v173[v83[1171 - ((1393 - (50 + 698)) + 522)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1792 - (1010 + 780)]] = v83[3 + 0];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[(953 + 885) - (1045 + 791)]] = v62[v83[7 - 4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[507 - (351 + 154)]] = v81[v83[1577 - (1281 + 293)]][v83[270 - (28 + 238)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1561 - (1381 + 178)]] = v81[v83[(4 - 1) + 0]][v83[4 + 0]];
										v75 = v75 + 1 + 0 + 0;
										v83 = v71[v75];
										v81[v83[6 - 4]] = v81[v83[2 + (175 - (76 + 98))]][v83[474 - (381 + 89)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[4 - 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v173 = v83[1159 - (1074 + 82)];
										v172 = v81[v173];
										for v1475 = v173 + (1 - 0), v83[4] do
											v172 = v172 .. v81[v1475];
										end
										v81[v83[1786 - (214 + 1570)]] = v172;
										v75 = v75 + (1456 - (990 + 465));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[2 + 1];
										v75 = v75 + 1 + (233 - (221 + 12));
										v83 = v71[v75];
										v174 = v83[7 - 5];
										v81[v174](v13(v81, v174 + ((3145 - 1418) - (1668 + 58)), v83[629 - (512 + 114)]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										do
											return;
										end
									elseif (v84 == 10) then
										local v1532 = 0 - 0;
										local v1533;
										local v1534;
										while true do
											if (v1532 == (10 - 7)) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[3 + 0];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1532 = 13 - 9;
											end
											if (v1532 == (1995 - (109 + 1885))) then
												v81[v83[1471 - (1269 + 200)]] = v81[v83[3]][v83[7 - 3]];
												v75 = v75 + (816 - (98 + 717));
												v83 = v71[v75];
												v81[v83[828 - (802 + 24)]] = v81[v83[5 - 2]][v83[4]];
												v75 = v75 + (1 - 0);
												v1532 = 1 + 1;
											end
											if (v1532 == (0 + 0)) then
												v1533 = nil;
												v1534 = nil;
												v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[4]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v1532 = 1;
											end
											if (v1532 == 5) then
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1532 = 5 + 1;
											end
											if (v1532 == (3 + 1)) then
												v1534 = v83[1 + 1];
												v81[v1534] = v81[v1534](v13(v81, v1534 + (1434 - (797 + 636)), v83[3]));
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[9 - 7]][v83[1622 - (1427 + 192)]] = v83[2 + 2];
												v1532 = 11 - 6;
											end
											if (v1532 == (7 + 0)) then
												v83 = v71[v75];
												v1534 = v83[1 + 1];
												v81[v1534] = v81[v1534](v81[v1534 + (327 - (192 + 134))]);
												v75 = v75 + 1;
												v83 = v71[v75];
												v1532 = 1284 - (316 + 960);
											end
											if ((4206 == 4206) and (v1532 == 8)) then
												v62[v83[2 + 1]] = v81[v83[2 + 0]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[7 - 5]] = v83[554 - (83 + 468)];
												v75 = v75 + (1807 - (1202 + 604));
												v1532 = 41 - 32;
											end
											if (v1532 == 9) then
												v83 = v71[v75];
												v75 = v83[4 - 1];
												break;
											end
											if (v1532 == (5 - 3)) then
												v83 = v71[v75];
												v1534 = v83[2];
												v1533 = v81[v83[328 - (45 + 280)]];
												v81[v1534 + 1 + 0] = v1533;
												v81[v1534] = v1533[v83[4 + 0]];
												v1532 = 2 + 1;
											end
											if (v1532 == 6) then
												v1534 = v83[2 + 0];
												v1533 = v81[v83[1 + 2]];
												v81[v1534 + (1 - 0)] = v1533;
												v81[v1534] = v1533[v83[1915 - (340 + 1571)]];
												v75 = v75 + 1 + 0;
												v1532 = 1779 - (1733 + 39);
											end
										end
									else
										local v1535 = 0 - 0;
										while true do
											if (v1535 == (1034 - (125 + 909))) then
												v81[v83[1950 - (1096 + 852)]] = v81[v83[2 + 1]][v83[5 - 1]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[515 - (409 + 103)]][v83[240 - (46 + 190)]];
												v1535 = 96 - (51 + 44);
											end
											if ((1 + 1) == v1535) then
												v83 = v71[v75];
												v81[v83[1319 - (1114 + 203)]] = v62[v83[3]];
												v75 = v75 + (727 - (228 + 498));
												v83 = v71[v75];
												v1535 = 3;
											end
											if (v1535 == 6) then
												v81[v83[1 + 1]] = v81[v83[3]][v83[3 + 1]];
												v75 = v75 + (664 - (174 + 489));
												v83 = v71[v75];
												v81[v83[5 - 3]] = v62[v83[1908 - (830 + 1075)]];
												break;
											end
											if (v1535 == (525 - (303 + 221))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1271 - (231 + 1038)]] = v81[v83[3 + 0]][v83[1166 - (171 + 991)]];
												v75 = v75 + (4 - 3);
												v1535 = 5 - 3;
											end
											if (v1535 == (12 - 7)) then
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v1535 = 17 - 11;
											end
											if (v1535 == (5 - 1)) then
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[1250 - (111 + 1137)]] = v62[v83[161 - (91 + 67)]];
												v75 = v75 + (2 - 1);
												v1535 = 5;
											end
											if (v1535 == (1 + 2)) then
												v81[v83[525 - (423 + 100)]] = v81[v83[1 + 2]][v83[10 - 6]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v62[v83[774 - (326 + 445)]];
												v1535 = 4;
											end
										end
									end
								elseif (v84 <= (74 - 57)) then
									if ((v84 <= (31 - 17)) or (1511 == 2808)) then
										if (v84 <= 12) then
											local v203 = 0 - 0;
											local v204;
											while true do
												if ((2968 > 2421) and (v203 == 0)) then
													v204 = nil;
													v204 = v83[713 - (530 + 181)];
													v81[v204](v81[v204 + (882 - (614 + 267))]);
													v75 = v75 + 1;
													v203 = 33 - (19 + 13);
												end
												if (((4 - 1) == v203) or (3077 < 2370)) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v81[v83[4 - 2]] = v81[v83[8 - 5]][v83[4]];
													v75 = v75 + 1 + 0;
													v203 = 6 - 2;
												end
												if (v203 == (13 - 6)) then
													v83 = v71[v75];
													v81[v83[2]] = v81[v83[1815 - (1293 + 519)]][v83[7 - 3]];
													break;
												end
												if (v203 == (2 - 1)) then
													v83 = v71[v75];
													v81[v83[3 - 1]] = v62[v83[12 - 9]];
													v75 = v75 + (2 - 1);
													v83 = v71[v75];
													v203 = 2 + 0;
												end
												if ((v203 == 2) or (1767 <= 848)) then
													v81[v83[1 + 1]] = v81[v83[3]][v83[9 - 5]];
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[2]] = v81[v83[3]][v83[2 + 2]];
													v203 = 2 + 1;
												end
												if ((v203 == (1100 - (709 + 387))) or (1263 >= 3411)) then
													v83 = v71[v75];
													v81[v83[1860 - (673 + 1185)]] = v81[v83[8 - 5]][v83[4]];
													v75 = v75 + (3 - 2);
													v83 = v71[v75];
													v203 = 8 - 3;
												end
												if (v203 == (5 + 1)) then
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[4]];
													v75 = v75 + (1 - 0);
													v203 = 13 - 6;
												end
												if (v203 == (1885 - (446 + 1434))) then
													v81[v83[1285 - (1040 + 243)]] = v62[v83[8 - 5]];
													v75 = v75 + (1848 - (559 + 1288));
													v83 = v71[v75];
													v81[v83[1933 - (609 + 1322)]] = v81[v83[457 - (13 + 441)]][v83[4]];
													v203 = 22 - 16;
												end
											end
										elseif (v84 == (33 - 20)) then
											local v1536;
											v81[v83[9 - 7]] = v81[v83[1 + 2]][v83[4]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[2 + 1];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2]] = v83[2 + 1];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[3 - 1]] = v83[2 + 1];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1536 = v83[2 + 0];
											v81[v1536] = v81[v1536](v13(v81, v1536 + 1 + 0, v83[3 + 0]));
											v75 = v75 + (434 - (153 + 280));
											v83 = v71[v75];
											v81[v83[2]][v83[8 - 5]] = v81[v83[4 + 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]][v83[3]] = v83[3 + 1];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]][v83[4 - 1]] = v81[v83[3 + 1]];
											v75 = v75 + (668 - (89 + 578));
											v83 = v71[v75];
											v81[v83[2]] = v83[3 + 0];
										else
											local v1553;
											local v1554;
											v1554 = v83[3 - 1];
											v1553 = v81[v83[3]];
											v81[v1554 + (1050 - (572 + 477))] = v1553;
											v81[v1554] = v1553[v83[1 + 3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[89 - (84 + 2)];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1554 = v83[2 - 0];
											v81[v1554] = v81[v1554](v13(v81, v1554 + 1 + 0, v83[845 - (497 + 345)]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[1336 - (605 + 728)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[3 - 1]] = v62[v83[3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1554 = v83[7 - 5];
											v1553 = v81[v83[3 + 0]];
											v81[v1554 + (2 - 1)] = v1553;
											v81[v1554] = v1553[v83[4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[491 - (457 + 32)]] = v83[2 + 1];
											v75 = v75 + (1403 - (832 + 570));
											v83 = v71[v75];
											v1554 = v83[2];
											v81[v1554] = v81[v1554](v13(v81, v1554 + 1, v83[3 + 0]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[10 - 7]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[799 - (588 + 208)]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[1803 - (884 + 916)];
										end
									elseif ((v84 <= (31 - 16)) or (4718 == 651)) then
										local v205;
										local v206;
										v206 = v83[2 + 0];
										v81[v206] = v81[v206](v13(v81, v206 + (654 - (232 + 421)), v83[1892 - (1569 + 320)]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v62[v83[3]] = v81[v83[1 + 1]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[607 - (316 + 289)]] = v62[v83[7 - 4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1455 - (666 + 787)]] = v81[v83[428 - (360 + 65)]][v83[4 + 0]];
										v75 = v75 + (255 - (79 + 175));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v83[3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[8 - 5];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v206 = v83[901 - (503 + 396)];
										v81[v206] = v81[v206](v13(v81, v206 + 1, v83[3]));
										v75 = v75 + (182 - (92 + 89));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[5 - 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[11 - 8]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[3 + 0]][v83[2 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v206 = v83[5 - 3];
										v205 = v81[v83[1 + 2]];
										v81[v206 + 1] = v205;
										v81[v206] = v205[v83[4]];
									elseif ((v84 > 16) or (2778 < 1796)) then
										v81[v83[2 - 0]] = v81[v83[3]] * v81[v83[4]];
									else
										local v1580 = 1244 - (485 + 759);
										local v1581;
										while true do
											if ((4713 > 1852) and (2 == v1580)) then
												v81[v1581] = v81[v1581](v81[v1581 + (2 - 1)]);
												v75 = v75 + (1190 - (442 + 747));
												v83 = v71[v75];
												v61[v83[1138 - (832 + 303)]] = v81[v83[948 - (88 + 858)]];
												v1580 = 1 + 2;
											end
											if (v1580 == (5 + 1)) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[791 - (766 + 23)]] = v83[3];
												v75 = v75 + (4 - 3);
												v1580 = 9 - 2;
											end
											if (v1580 == (18 - 11)) then
												v83 = v71[v75];
												v81[v83[6 - 4]] = v83[3];
												break;
											end
											if ((2815 >= 2489) and (v1580 == (1078 - (1036 + 37)))) then
												v81[v83[2]] = v81[v83[3 + 0]] - v81[v83[7 - 3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[1482 - (641 + 839)]] = v81[v83[916 - (910 + 3)]][v83[9 - 5]];
												v1580 = 1690 - (1466 + 218);
											end
											if (v1580 == 3) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v61[v83[1151 - (556 + 592)]];
												v75 = v75 + 1 + 0;
												v1580 = 812 - (329 + 479);
											end
											if (v1580 == (855 - (174 + 680))) then
												v81[v83[2]] = v83[10 - 7];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v1581 = v83[2 + 0];
												v1580 = 741 - (396 + 343);
											end
											if ((1 + 3) == v1580) then
												v83 = v71[v75];
												v81[v83[1479 - (29 + 1448)]] = v61[v83[1392 - (135 + 1254)]];
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v1580 = 23 - 18;
											end
											if (v1580 == (0 + 0)) then
												v1581 = nil;
												v81[v83[1529 - (389 + 1138)]] = v81[v83[3]][v83[4]];
												v75 = v75 + (575 - (102 + 472));
												v83 = v71[v75];
												v1580 = 1 + 0;
											end
										end
									end
								elseif (v84 <= 20) then
									if ((v84 <= 18) or (2291 >= 2351)) then
										local v230 = 0 + 0;
										local v231;
										while true do
											if (v230 == (0 + 0)) then
												v231 = v83[1547 - (320 + 1225)];
												v81[v231] = v81[v231](v81[v231 + (1 - 0)]);
												break;
											end
										end
									elseif (v84 > (12 + 7)) then
										local v1582;
										v81[v83[2]] = v81[v83[3]][v83[4]];
										v75 = v75 + (1465 - (157 + 1307));
										v83 = v71[v75];
										v81[v83[1861 - (821 + 1038)]] = v62[v83[3]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[4 - 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1582 = v83[4 - 2];
										v81[v1582] = v81[v1582]();
										v75 = v75 + (1027 - (834 + 192));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[1 + 3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1582 = v83[2];
										v81[v1582] = v81[v1582](v81[v1582 + 1]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[4 - 1]] * v81[v83[308 - (300 + 4)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1582 = v83[5 - 3];
										v81[v1582](v13(v81, v1582 + (363 - (112 + 250)), v83[2 + 1]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v75 = v83[2 + 1];
									else
										v62[v83[2 + 1]] = v81[v83[2 + 0]];
									end
								elseif (v84 <= (11 + 11)) then
									if (v84 == (16 + 5)) then
										if (v81[v83[1416 - (1001 + 413)]] == v83[8 - 4]) then
											v75 = v75 + (883 - (244 + 638));
										else
											v75 = v83[696 - (627 + 66)];
										end
									else
										local v1598 = v83[2];
										local v1599 = v83[11 - 7];
										local v1600 = v1598 + (604 - (512 + 90));
										local v1601 = {v81[v1598](v81[v1598 + 1], v81[v1600])};
										for v5241 = 718 - (373 + 344), v1599 do
											v81[v1600 + v5241] = v1601[v5241];
										end
										local v1602 = v1601[1 + 0];
										if v1602 then
											v81[v1600] = v1602;
											v75 = v83[3];
										else
											v75 = v75 + 1;
										end
									end
								elseif ((v84 == (7 + 16)) or (1496 < 1278)) then
									local v1603 = 0 - 0;
									local v1604;
									while true do
										if (v1603 == (4 - 1)) then
											v75 = v75 + (1100 - (35 + 1064));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[6 - 3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1238 - (298 + 938)]] = v81[v83[1262 - (233 + 1026)]][v83[4]];
											v1603 = 1670 - (636 + 1030);
										end
										if (v1603 == (3 + 2)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1604 = v83[1 + 1];
											v81[v1604] = v81[v1604](v13(v81, v1604 + 1, v83[1 + 2]));
											v75 = v75 + (222 - (55 + 166));
											v83 = v71[v75];
											v1603 = 6;
										end
										if (4 == v1603) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[11 - 8]];
											v75 = v75 + (298 - (36 + 261));
											v83 = v71[v75];
											v81[v83[3 - 1]] = v81[v83[1371 - (34 + 1334)]];
											v1603 = 2 + 3;
										end
										if (v1603 == 2) then
											v83 = v71[v75];
											v1604 = v83[2 + 0];
											v81[v1604] = v81[v1604](v13(v81, v1604 + 1, v83[1286 - (1035 + 248)]));
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[23 - (20 + 1)]] = v81[v83[2 + 1]];
											v1603 = 322 - (134 + 185);
										end
										if (v1603 == (1140 - (549 + 584))) then
											v75 = v83[3];
											break;
										end
										if (v1603 == (691 - (314 + 371))) then
											v81[v83[6 - 4]] = v81[v83[971 - (478 + 490)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1174 - (786 + 386)]] = v83[9 - 6];
											v75 = v75 + (1380 - (1055 + 324));
											v83 = v71[v75];
											v1603 = 1347 - (1093 + 247);
										end
										if ((155 < 4599) and (v1603 == (1 + 0))) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[11 - 8]][v83[13 - 9]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[2 + 1]][v83[15 - 11]];
											v75 = v75 + (3 - 2);
											v1603 = 2;
										end
										if (v1603 == (0 + 0)) then
											v1604 = nil;
											v81[v83[4 - 2]] = v81[v83[691 - (364 + 324)]][v83[10 - 6]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[1 + 2]][v83[16 - 12]];
											v75 = v75 + (1 - 0);
											v1603 = 2 - 1;
										end
									end
								else
									local v1605 = 1268 - (1249 + 19);
									local v1606;
									local v1607;
									while true do
										if ((v1605 == (4 + 0)) or (1603 <= 585)) then
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[1088 - (686 + 400)]] = v83[3 + 0];
											break;
										end
										if (v1605 == (230 - (73 + 156))) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[814 - (721 + 90)] ~= (0 + 0);
											v75 = v75 + (3 - 2);
											v1605 = 472 - (224 + 246);
										end
										if (v1605 == (2 - 0)) then
											v83 = v71[v75];
											v62[v83[5 - 2]] = v81[v83[1 + 1]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1605 = 3 + 0;
										end
										if (v1605 == 3) then
											v1607 = v83[3 - 1];
											v1606 = v81[v83[9 - 6]];
											v81[v1607 + (514 - (203 + 310))] = v1606;
											v81[v1607] = v1606[v83[1997 - (1238 + 755)]];
											v1605 = 1 + 3;
										end
										if ((2332 == 2332) and (v1605 == (1534 - (709 + 825)))) then
											v1606 = nil;
											v1607 = nil;
											v1607 = v83[3 - 1];
											v81[v1607](v13(v81, v1607 + (1 - 0), v83[867 - (196 + 668)]));
											v1605 = 1;
										end
									end
								end
							elseif (v84 <= (145 - 108)) then
								if ((v84 <= (62 - 32)) or (2061 > 3381)) then
									if (v84 <= 27) then
										if (v84 <= (858 - (171 + 662))) then
											local v232;
											local v233, v234;
											local v235;
											local v236;
											v81[v83[95 - (4 + 89)]] = v62[v83[3]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v236 = v83[6 - 4];
											v235 = v81[v83[2 + 1]];
											v81[v236 + 1] = v235;
											v81[v236] = v235[v83[17 - 13]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1488 - (35 + 1451)]] = v83[1456 - (28 + 1425)];
											v75 = v75 + (1994 - (941 + 1052));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v83[1517 - (822 + 692)];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[300 - (45 + 252)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[437 - (114 + 319)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[3]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v236 = v83[2];
											v235 = v81[v83[2 + 1]];
											v81[v236 + (1 - 0)] = v235;
											v81[v236] = v235[v83[8 - 4]];
											v75 = v75 + (1964 - (556 + 1407));
											v83 = v71[v75];
											v236 = v83[1208 - (741 + 465)];
											v233, v234 = v74(v81[v236](v81[v236 + (466 - (170 + 295))]));
											v76 = (v234 + v236) - (1 + 0);
											v232 = 0;
											for v1476 = v236, v76 do
												local v1477 = 0 + 0;
												while true do
													if ((v1477 == 0) or (1002 > 2577)) then
														v232 = v232 + 1;
														v81[v1476] = v233[v232];
														break;
													end
												end
											end
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v236 = v83[2 + 0];
											v81[v236] = v81[v236](v13(v81, v236 + 1 + 0, v76));
										elseif ((575 >= 454) and (v84 > 26)) then
											local v1608 = 0;
											local v1609;
											local v1610;
											while true do
												if ((1 + 0) == v1608) then
													v75 = v75 + (1231 - (957 + 273));
													v83 = v71[v75];
													v81[v83[1 + 1]] = v83[2 + 1];
													v75 = v75 + (3 - 2);
													v1608 = 2;
												end
												if ((10 - 6) == v1608) then
													v75 = v75 + (2 - 1);
													v83 = v71[v75];
													v81[v83[9 - 7]] = v83[1783 - (389 + 1391)];
													break;
												end
												if ((4386 >= 4268) and ((2 + 1) == v1608)) then
													v1610 = v83[1 + 1];
													v1609 = v81[v83[6 - 3]];
													v81[v1610 + (952 - (783 + 168))] = v1609;
													v81[v1610] = v1609[v83[13 - 9]];
													v1608 = 4 + 0;
												end
												if ((927 == 927) and (v1608 == (313 - (309 + 2)))) then
													v83 = v71[v75];
													v62[v83[9 - 6]] = v81[v83[1214 - (1090 + 122)]];
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v1608 = 9 - 6;
												end
												if ((0 + 0) == v1608) then
													v1609 = nil;
													v1610 = nil;
													v1610 = v83[2];
													v81[v1610](v13(v81, v1610 + 1, v83[1121 - (628 + 490)]));
													v1608 = 1 + 0;
												end
											end
										else
											local v1611 = 0 - 0;
											local v1612;
											local v1613;
											local v1614;
											local v1615;
											while true do
												if ((483 == 483) and (v1611 == (13 - 10))) then
													v83 = v71[v75];
													v81[v83[2]] = v62[v83[3]];
													v75 = v75 + (775 - (431 + 343));
													v1611 = 7 - 3;
												end
												if ((v1611 == (11 - 7)) or (1766 >= 4218)) then
													v83 = v71[v75];
													v1615 = v83[2];
													v1612, v1614 = v74(v81[v1615](v81[v1615 + 1 + 0]));
													v1611 = 1 + 4;
												end
												if (v1611 == (1702 - (556 + 1139))) then
													v1612 = {v81[v1615](v13(v81, v1615 + (16 - (6 + 9)), v76))};
													v1613 = 0 + 0;
													for v9663 = v1615, v83[3 + 1] do
														v1613 = v1613 + (170 - (28 + 141));
														v81[v9663] = v1612[v1613];
													end
													v1611 = 4 + 4;
												end
												if (v1611 == 2) then
													v83 = v71[v75];
													v81[v83[2 - 0]] = v61[v83[3 + 0]];
													v75 = v75 + 1;
													v1611 = 3;
												end
												if ((v1611 == (1325 - (486 + 831))) or (3093 <= 2248)) then
													v75 = v75 + (2 - 1);
													v83 = v71[v75];
													v75 = v83[3];
													break;
												end
												if (v1611 == 0) then
													v1612 = nil;
													v1613 = nil;
													v1612, v1614 = nil;
													v1611 = 3 - 2;
												end
												if ((1 + 4) == v1611) then
													v76 = (v1614 + v1615) - 1;
													v1613 = 0 - 0;
													for v9666 = v1615, v76 do
														local v9667 = 1263 - (668 + 595);
														while true do
															if ((0 + 0) == v9667) then
																v1613 = v1613 + 1;
																v81[v9666] = v1612[v1613];
																break;
															end
														end
													end
													v1611 = 6;
												end
												if ((2507 > 968) and (v1611 == 6)) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v1615 = v83[1 + 1];
													v1611 = 19 - 12;
												end
												if (v1611 == 1) then
													v1615 = nil;
													v81[v83[2]] = v62[v83[293 - (23 + 267)]];
													v75 = v75 + (1945 - (1129 + 815));
													v1611 = 389 - (371 + 16);
												end
											end
										end
									elseif (v84 <= 28) then
										local v258 = 1750 - (1326 + 424);
										local v259;
										while true do
											if (v258 == 0) then
												v259 = nil;
												v259 = v83[3 - 1];
												v81[v259](v13(v81, v259 + (3 - 2), v83[121 - (88 + 30)]));
												v75 = v75 + (772 - (720 + 51));
												v258 = 1;
											end
											if ((v258 == 2) or (3972 == 2558)) then
												v62[v83[6 - 3]] = v81[v83[1778 - (421 + 1355)]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[1086 - (286 + 797)]];
												v258 = 10 - 7;
											end
											if (v258 == (11 - 4)) then
												v83 = v71[v75];
												v81[v83[441 - (397 + 42)]] = v62[v83[1 + 2]];
												break;
											end
											if ((521 <= 2419) and (v258 == (804 - (24 + 776)))) then
												v83 = v71[v75];
												v81[v83[2 - 0]] = v81[v83[788 - (222 + 563)]][v83[4]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v258 = 4 + 1;
											end
											if ((3729 >= 2951) and (v258 == (195 - (23 + 167)))) then
												v81[v83[2]] = v62[v83[1801 - (690 + 1108)]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[851 - (40 + 808)]][v83[1 + 3]];
												v258 = 6;
											end
											if ((4773 > 3808) and (v258 == 1)) then
												v83 = v71[v75];
												v81[v83[7 - 5]] = v83[3 + 0] ~= (0 + 0);
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v258 = 2;
											end
											if (v258 == (577 - (47 + 524))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[3]][v83[10 - 6]];
												v75 = v75 + 1;
												v258 = 7;
											end
											if (v258 == (4 - 1)) then
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[1729 - (1165 + 561)]][v83[1 + 3]];
												v75 = v75 + (3 - 2);
												v258 = 2 + 2;
											end
										end
									elseif ((1128 < 1293) and (v84 > (508 - (341 + 138)))) then
										local v1616;
										local v1617;
										v81[v83[1 + 1]] = v62[v83[5 - 2]];
										v75 = v75 + (327 - (89 + 237));
										v83 = v71[v75];
										v1617 = v83[6 - 4];
										v1616 = v81[v83[3]];
										v81[v1617 + (1 - 0)] = v1616;
										v81[v1617] = v1616[v83[885 - (581 + 300)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1222 - (855 + 365)]] = v83[6 - 3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1237 - (1030 + 205)]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[290 - (156 + 130)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[3]][v83[7 - 3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1617 = v83[71 - (10 + 59)];
										v81[v1617](v13(v81, v1617 + 1 + 0, v83[3]));
										v75 = v75 + 1;
										v83 = v71[v75];
										do
											return;
										end
									else
										local v1637 = 0 - 0;
										local v1638;
										local v1639;
										while true do
											if ((1164 - (671 + 492)) == v1637) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[1218 - (369 + 846)]][v83[2 + 2]];
												v1637 = 2 + 0;
											end
											if (v1637 == (1948 - (1036 + 909))) then
												v1638 = v81[v83[3 + 0]];
												v81[v1639 + (1 - 0)] = v1638;
												v81[v1639] = v1638[v83[4]];
												v1637 = 207 - (11 + 192);
											end
											if (v1637 == (5 + 3)) then
												v81[v83[177 - (135 + 40)]] = v83[6 - 3];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1637 = 6 + 3;
											end
											if (v1637 == (10 - 5)) then
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v1639 = v83[178 - (50 + 126)];
												v1637 = 16 - 10;
											end
											if ((2 + 5) == v1637) then
												v81[v83[2]] = v81[v83[1416 - (1233 + 180)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1637 = 977 - (522 + 447);
											end
											if (v1637 == (1425 - (107 + 1314))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v83[3];
												v1637 = 5;
											end
											if (v1637 == (0 - 0)) then
												v1638 = nil;
												v1639 = nil;
												v81[v83[1 + 1]] = v81[v83[3]][v83[7 - 3]];
												v1637 = 3 - 2;
											end
											if (v1637 == (1916 - (716 + 1194))) then
												v81[v1639] = v81[v1639](v13(v81, v1639 + 1 + 0, v83[1 + 2]));
												v75 = v75 + (504 - (74 + 429));
												v83 = v71[v75];
												v1637 = 13 - 6;
											end
											if ((v1637 == 2) or (1531 == 3024)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v1639 = v83[1 + 1];
												v1637 = 6 - 3;
											end
											if (v1637 == (7 + 2)) then
												v75 = v83[8 - 5];
												break;
											end
										end
									end
								elseif (v84 <= 33) then
									if (v84 <= (76 - 45)) then
										local v260 = 433 - (279 + 154);
										while true do
											if (v260 == (782 - (454 + 324))) then
												v81[v83[2 + 0]] = v81[v83[20 - (12 + 5)]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v260 = 3 + 2;
											end
											if ((580 <= 2942) and (v260 == 8)) then
												v81[v83[4 - 2]] = v62[v83[2 + 1]];
												v75 = v75 + (1094 - (277 + 816));
												v83 = v71[v75];
												v260 = 38 - 29;
											end
											if ((1246 > 732) and (v260 == (1186 - (1058 + 125)))) then
												v81[v83[1 + 1]] = v81[v83[978 - (815 + 160)]][v83[17 - 13]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v260 = 1 + 3;
											end
											if (6 == v260) then
												v81[v83[5 - 3]] = v81[v83[1901 - (41 + 1857)]][v83[1897 - (1222 + 671)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v260 = 18 - 11;
											end
											if ((4364 >= 3215) and (v260 == (12 - 3))) then
												v81[v83[1184 - (229 + 953)]] = v81[v83[1777 - (1111 + 663)]][v83[1583 - (874 + 705)]];
												break;
											end
											if ((2784 < 2949) and (v260 == (1 + 4))) then
												v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[1 + 3]];
												v75 = v75 + (680 - (642 + 37));
												v83 = v71[v75];
												v260 = 2 + 4;
											end
											if (v260 == (0 + 0)) then
												v81[v83[4 - 2]] = v81[v83[457 - (233 + 221)]] * v81[v83[8 - 4]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v260 = 1542 - (718 + 823);
											end
											if ((2 + 0) == v260) then
												v81[v83[2]] = v62[v83[808 - (266 + 539)]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v260 = 1228 - (636 + 589);
											end
											if ((2 - 1) == v260) then
												v81[v83[2]][v83[5 - 2]] = v81[v83[4 + 0]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v260 = 1 + 1;
											end
											if ((4436 >= 3272) and (v260 == (1022 - (657 + 358)))) then
												v81[v83[4 - 2]] = v81[v83[6 - 3]][v83[1191 - (1151 + 36)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v260 = 8 + 0;
											end
										end
									elseif (v84 > (9 + 23)) then
										local v1640;
										local v1641;
										v81[v83[5 - 3]] = v62[v83[1835 - (1552 + 280)]];
										v75 = v75 + (835 - (64 + 770));
										v83 = v71[v75];
										v1641 = v83[2 + 0];
										v1640 = v81[v83[3]];
										v81[v1641 + 1] = v1640;
										v81[v1641] = v1640[v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[1246 - (157 + 1086)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[13 - 10];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2 - 0]] = v62[v83[822 - (599 + 220)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1933 - (1813 + 118)]] = v62[v83[3 + 0]];
										v75 = v75 + (1218 - (841 + 376));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1641 = v83[2];
										v1640 = v81[v83[8 - 5]];
										v81[v1641 + 1] = v1640;
										v81[v1641] = v1640[v83[863 - (464 + 395)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1641 = v83[5 - 3];
										v81[v1641] = v81[v1641](v81[v1641 + 1]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = #v81[v83[3]];
									else
										local v1664 = 837 - (467 + 370);
										local v1665;
										local v1666;
										while true do
											if (v1664 == (5 - 2)) then
												v83 = v71[v75];
												v81[v83[2 + 0]][v83[10 - 7]] = v81[v83[4]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[6 - 3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[522 - (150 + 370)]] = v81[v83[1285 - (74 + 1208)]][v83[9 - 5]];
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v1664 = 3 + 1;
											end
											if (v1664 == (395 - (14 + 376))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v1666 = v83[2];
												v81[v1666] = v81[v1666](v13(v81, v1666 + (1 - 0), v83[3]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]][v83[3 + 0]] = v81[v83[11 - 7]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[80 - (23 + 55)]] = v62[v83[6 - 3]];
												v1664 = 5 + 1;
											end
											if (9 == v1664) then
												v81[v83[2]] = v81[v83[3 + 0]][v83[5 - 1]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[903 - (652 + 249)]][v83[3]] = v81[v83[10 - 6]];
												v75 = v75 + (1869 - (708 + 1160));
												v83 = v71[v75];
												v81[v83[2]][v83[8 - 5]] = v83[6 - 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[29 - (10 + 17)]] = v62[v83[1 + 2]];
												v1664 = 1742 - (1400 + 332);
											end
											if ((518 <= 4584) and (v1664 == (7 - 3))) then
												v81[v83[1910 - (242 + 1666)]] = v83[2 + 1];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[3];
												v75 = v75 + (941 - (850 + 90));
												v83 = v71[v75];
												v81[v83[3 - 1]] = v83[1393 - (360 + 1030)];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[5 - 3]] = v83[3];
												v1664 = 6 - 1;
											end
											if (v1664 == (1668 - (909 + 752))) then
												v83 = v71[v75];
												v81[v83[1225 - (109 + 1114)]] = v83[5 - 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[245 - (6 + 236)];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1666 = v83[2];
												v81[v1666] = v81[v1666](v13(v81, v1666 + 1 + 0, v83[3]));
												v75 = v75 + 1 + 0;
												v1664 = 18 - 10;
											end
											if (v1664 == (3 - 1)) then
												v83 = v71[v75];
												v81[v83[1135 - (1076 + 57)]] = v83[1 + 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[691 - (579 + 110)]] = v83[1 + 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1666 = v83[2];
												v81[v1666] = v81[v1666](v13(v81, v1666 + 1, v83[3 + 0]));
												v75 = v75 + 1;
												v1664 = 2 + 1;
											end
											if (v1664 == (415 - (174 + 233))) then
												v83 = v71[v75];
												v81[v83[5 - 3]][v83[3]] = v81[v83[6 - 2]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[1177 - (663 + 511)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[12 - 8]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1664 = 20 - 11;
											end
											if ((26 - 15) == v1664) then
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[5 - 2];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1666 = v83[1 + 1];
												v81[v1666] = v81[v1666](v13(v81, v1666 + (723 - (478 + 244)), v83[3]));
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]][v83[520 - (440 + 77)]] = v81[v83[4]];
												v75 = v75 + 1 + 0;
												v1664 = 43 - 31;
											end
											if ((v1664 == (1557 - (655 + 901))) or (4539 <= 4225)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[3 + 0]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[11 - 8]][v83[4]];
												v75 = v75 + (1446 - (695 + 750));
												v83 = v71[v75];
												v81[v83[2]] = v83[9 - 6];
												v75 = v75 + (1 - 0);
												v1664 = 7 - 5;
											end
											if (v1664 == (364 - (285 + 66))) then
												v81[v83[4 - 2]] = v81[v83[1313 - (682 + 628)]][v83[1 + 3]];
												v75 = v75 + (300 - (176 + 123));
												v83 = v71[v75];
												v1666 = v83[1 + 1];
												v1665 = v81[v83[3]];
												v81[v1666 + 1] = v1665;
												v81[v1666] = v1665[v83[3 + 1]];
												break;
											end
											if (v1664 == (269 - (239 + 30))) then
												v1665 = nil;
												v1666 = nil;
												v1666 = v83[1 + 1];
												v81[v1666](v13(v81, v1666 + 1 + 0, v83[4 - 1]));
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[317 - (306 + 9)]][v83[3]] = v83[13 - 9];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]][v83[2 + 1]] = v81[v83[2 + 2]];
												v1664 = 2 - 1;
											end
											if ((2725 >= 2577) and (v1664 == (1387 - (1140 + 235)))) then
												v83 = v71[v75];
												v81[v83[2 + 0]][v83[3 + 0]] = v83[2 + 2];
												v75 = v75 + (53 - (33 + 19));
												v83 = v71[v75];
												v81[v83[2]] = v83[2 + 1] ~= (0 - 0);
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v62[v83[5 - 2]] = v81[v83[2]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1664 = 702 - (586 + 103);
											end
											if ((2563 >= 1571) and ((1 + 5) == v1664)) then
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1490 - (1309 + 179)]] = v81[v83[5 - 2]][v83[2 + 2]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[5 - 2];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[2]] = v83[3];
												v75 = v75 + (610 - (295 + 314));
												v1664 = 16 - 9;
											end
											if ((1929 <= 4888) and (v1664 == (1972 - (1300 + 662)))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[6 - 4]] = v81[v83[1758 - (1178 + 577)]][v83[3 + 1]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1407 - (851 + 554)]] = v83[3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[5 - 3]] = v83[6 - 3];
												v75 = v75 + 1;
												v1664 = 313 - (115 + 187);
											end
										end
									end
								elseif (v84 <= (27 + 8)) then
									if (v84 == (33 + 1)) then
										local v1667;
										local v1668;
										local v1669;
										v1669 = v83[7 - 5];
										v1668 = v81[v83[1164 - (160 + 1001)]];
										v81[v1669 + 1 + 0] = v1668;
										v81[v1669] = v1668[v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[361 - (237 + 121)];
										v75 = v75 + (898 - (525 + 372));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[9 - 6];
										v75 = v75 + (143 - (96 + 46));
										v83 = v71[v75];
										v81[v83[779 - (643 + 134)]] = v62[v83[2 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[11 - 8]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[5 - 2]][v83[4]];
										v75 = v75 + (720 - (316 + 403));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[8 - 5]][v81[v83[2 + 2]]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[9 - 7]] = v81[v83[3]][v83[7 - 3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[11 - 7]];
										v75 = v75 + (18 - (12 + 5));
										v83 = v71[v75];
										v81[v83[7 - 5]] = v83[3];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1668 = v83[6 - 3];
										v1667 = v81[v1668];
										for v5297 = v1668 + (2 - 1), v83[1 + 3] do
											v1667 = v1667 .. v81[v5297];
										end
										v81[v83[2]] = v1667;
										v75 = v75 + (1974 - (1656 + 317));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[3 + 0];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1669 = v83[9 - 7];
										v81[v1669](v13(v81, v1669 + (355 - (5 + 349)), v83[14 - 11]));
										v75 = v75 + (1272 - (266 + 1005));
										v83 = v71[v75];
										v75 = v83[3];
									else
										local v1697;
										v81[v83[2 + 0]] = v81[v83[10 - 7]][v83[4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1698 - (561 + 1135)]] = v81[v83[3 - 0]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[1069 - (507 + 559)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[6 - 4]] = v81[v83[391 - (212 + 176)]][v83[4]];
										v75 = v75 + (906 - (250 + 655));
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[5 - 2]][v83[5 - 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1697 = v83[1958 - (1869 + 87)];
										v81[v1697](v13(v81, v1697 + (3 - 2), v83[1904 - (484 + 1417)]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										do
											return v81[v83[2 - 0]];
										end
										v75 = v75 + (774 - (48 + 725));
										v83 = v71[v75];
										v75 = v83[4 - 1];
									end
								elseif ((v84 == (96 - 60)) or (3493 < 3444)) then
									local v1711;
									local v1712;
									v1712 = v83[2];
									v1711 = v81[v83[2 + 1]];
									v81[v1712 + (2 - 1)] = v1711;
									v81[v1712] = v1711[v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[855 - (152 + 701)]] = v83[1314 - (430 + 881)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1712 = v83[897 - (557 + 338)];
									v81[v1712] = v81[v1712](v13(v81, v1712 + 1, v83[1 + 2]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[6 - 4]] = v81[v83[7 - 4]][v83[8 - 4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1712 = v83[2];
									v1711 = v81[v83[804 - (499 + 302)]];
									v81[v1712 + (867 - (39 + 827))] = v1711;
									v81[v1712] = v1711[v83[10 - 6]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v1712 = v83[7 - 5];
									v81[v1712](v81[v1712 + (1 - 0)]);
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = {};
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[3]] = v83[5 - 1];
									v75 = v75 + (105 - (103 + 1));
									v83 = v71[v75];
									v81[v83[556 - (475 + 79)]] = v81[v83[6 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[1 + 2];
								else
									local v1734;
									local v1735;
									v62[v83[3]] = v81[v83[2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1505 - (1395 + 108)]] = v62[v83[8 - 5]];
									v75 = v75 + (1205 - (7 + 1197));
									v83 = v71[v75];
									v1735 = v83[1 + 1];
									v1734 = v81[v83[3]];
									v81[v1735 + 1 + 0] = v1734;
									v81[v1735] = v1734[v83[323 - (27 + 292)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[12 - 9];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v1735 = v83[3 - 1];
									v81[v1735] = v81[v1735](v13(v81, v1735 + (140 - (43 + 96)), v83[3]));
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v1735 = v83[3 - 1];
									v1734 = v81[v83[3 + 0]];
									v81[v1735 + 1 + 0] = v1734;
									v81[v1735] = v1734[v83[7 - 3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v1735 = v83[2];
									v81[v1735] = v81[v1735](v13(v81, v1735 + 1 + 0, v83[1 + 2]));
									v75 = v75 + (1752 - (1414 + 337));
									v83 = v71[v75];
									if (v81[v83[1942 - (1642 + 298)]] or (3181 < 1615)) then
										v75 = v75 + (2 - 1);
									else
										v75 = v83[3];
									end
								end
							elseif (v84 <= (123 - 80)) then
								if (v84 <= (118 - 78)) then
									if ((v84 <= (13 + 25)) or (3748 <= 819)) then
										local v261 = 0 + 0;
										local v262;
										local v263;
										while true do
											if ((1226 < 1408) and (v261 == (977 - (357 + 615)))) then
												v81[v83[2]] = v62[v83[3 + 0]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v261 = 6 + 0;
											end
											if (v261 == (8 - 4)) then
												v62[v83[3]] = v81[v83[2]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v261 = 1 + 4;
											end
											if ((v261 == (4 + 2)) or (4549 < 3989)) then
												v263 = v83[1303 - (384 + 917)];
												v262 = v81[v83[700 - (128 + 569)]];
												v81[v263 + (1544 - (1407 + 136))] = v262;
												v261 = 1894 - (687 + 1200);
											end
											if ((v261 == 8) or (354 > 3930)) then
												v263 = v83[1712 - (556 + 1154)];
												v81[v263](v81[v263 + (3 - 2)]);
												v75 = v75 + (96 - (9 + 86));
												v261 = 430 - (275 + 146);
											end
											if (v261 == (1 + 2)) then
												v81[v263] = v81[v263](v81[v263 + 1]);
												v75 = v75 + (65 - (29 + 35));
												v83 = v71[v75];
												v261 = 4;
											end
											if (v261 == (0 - 0)) then
												v262 = nil;
												v263 = nil;
												v263 = v83[5 - 3];
												v261 = 1;
											end
											if ((v261 == (4 - 3)) or (1141 == 4051)) then
												v262 = v81[v83[2 + 1]];
												v81[v263 + (1013 - (53 + 959))] = v262;
												v81[v263] = v262[v83[4]];
												v261 = 410 - (312 + 96);
											end
											if ((v261 == 9) or (1233 >= 2625)) then
												v83 = v71[v75];
												v75 = v83[4 - 1];
												break;
											end
											if (v261 == (287 - (147 + 138))) then
												v75 = v75 + (900 - (813 + 86));
												v83 = v71[v75];
												v263 = v83[2];
												v261 = 3;
											end
											if (v261 == (7 + 0)) then
												v81[v263] = v262[v83[7 - 3]];
												v75 = v75 + (493 - (18 + 474));
												v83 = v71[v75];
												v261 = 3 + 5;
											end
										end
									elseif (v84 == (127 - 88)) then
										local v1753;
										local v1754;
										v62[v83[1089 - (860 + 226)]] = v81[v83[305 - (121 + 182)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[1243 - (988 + 252)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1754 = v83[1 + 1];
										v1753 = v81[v83[1973 - (49 + 1921)]];
										v81[v1754 + (891 - (223 + 667))] = v1753;
										v81[v1754] = v1753[v83[56 - (51 + 1)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[3 - 1]] = v62[v83[1128 - (146 + 979)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[607 - (311 + 294)]] = v81[v83[8 - 5]][v83[2 + 2]];
										v75 = v75 + (1444 - (496 + 947));
										v83 = v71[v75];
										v1754 = v83[2];
										v81[v1754] = v81[v1754](v81[v1754 + 1]);
										v75 = v75 + (1359 - (1233 + 125));
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[2 + 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[1648 - (963 + 682)]][v83[4 + 0]];
										v75 = v75 + (1505 - (504 + 1000));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[3 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 - 0]] = v62[v83[3 + 0]];
									else
										local v1776;
										v81[v83[2]] = v62[v83[2 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[184 - (156 + 26)]] = v81[v83[2 + 1]][v83[6 - 2]];
										v75 = v75 + (165 - (149 + 15));
										v83 = v71[v75];
										v81[v83[962 - (890 + 70)]] = v81[v83[120 - (39 + 78)]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[484 - (14 + 468)]] = v81[v83[6 - 3]][v81[v83[11 - 7]]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[3 + 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1776 = v83[1 + 1];
										v81[v1776](v81[v1776 + 1 + 0]);
									end
								elseif (v84 <= (11 + 30)) then
									local v264;
									local v265;
									v81[v83[3 - 1]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v265 = v83[6 - 4];
									v264 = v81[v83[1 + 2]];
									v81[v265 + (52 - (12 + 39))] = v264;
									v81[v265] = v264[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[10 - 7];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[7 - 4];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v62[v83[3]];
									v75 = v75 + (1711 - (1596 + 114));
									v83 = v71[v75];
									v265 = v83[4 - 2];
									v264 = v81[v83[716 - (164 + 549)]];
									v81[v265 + 1] = v264;
									v81[v265] = v264[v83[4]];
									v75 = v75 + (1439 - (1059 + 379));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[2 + 1];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v265 = v83[394 - (145 + 247)];
									v81[v265] = v81[v265](v13(v81, v265 + 1, v83[3 + 0]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v265 = v83[5 - 3];
									v264 = v81[v83[1 + 2]];
									v81[v265 + 1 + 0] = v264;
									v81[v265] = v264[v83[6 - 2]];
									v75 = v75 + (721 - (254 + 466));
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[563 - (544 + 16)]];
								elseif (v84 > (133 - 91)) then
									v81[v83[630 - (294 + 334)]] = v81[v83[3]][v83[257 - (236 + 17)]];
								else
									local v1790 = 0 + 0;
									local v1791;
									while true do
										if ((2610 == 2610) and (v1790 == 5)) then
											v81[v1791] = v81[v1791](v13(v81, v1791 + 1 + 0, v83[3]));
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[9 - 7]][v83[2 + 1]] = v81[v83[4 + 0]];
											v1790 = 6;
										end
										if (v1790 == 1) then
											v81[v83[796 - (413 + 381)]] = v81[v83[1 + 2]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v83[5 - 2];
											v1790 = 4 - 2;
										end
										if (v1790 == (1972 - (582 + 1388))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 - 0]] = v83[3 + 0];
											v75 = v75 + (365 - (326 + 38));
											v1790 = 8 - 5;
										end
										if ((1131 >= 521) and (v1790 == (9 - 2))) then
											v83 = v71[v75];
											v81[v83[622 - (47 + 573)]] = v81[v83[3]][v83[2 + 2]];
											break;
										end
										if (v1790 == (0 - 0)) then
											v1791 = nil;
											v81[v83[2 - 0]] = v62[v83[3]];
											v75 = v75 + (1665 - (1269 + 395));
											v83 = v71[v75];
											v1790 = 1;
										end
										if (v1790 == (495 - (76 + 416))) then
											v83 = v71[v75];
											v81[v83[445 - (319 + 124)]] = v83[3];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v1790 = 4;
										end
										if ((1591 >= 95) and (v1790 == (1011 - (564 + 443)))) then
											v81[v83[5 - 3]] = v83[461 - (337 + 121)];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v1791 = v83[2];
											v1790 = 16 - 11;
										end
										if (v1790 == 6) then
											v75 = v75 + (1912 - (1261 + 650));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[3 - 0]];
											v75 = v75 + (1818 - (772 + 1045));
											v1790 = 1 + 6;
										end
									end
								end
							elseif ((v84 <= 46) or (1828 > 1911)) then
								if (v84 <= (188 - (102 + 42))) then
									local v290 = 1844 - (1524 + 320);
									local v291;
									local v292;
									while true do
										if (v290 == 1) then
											v75 = v75 + (1271 - (1049 + 221));
											v83 = v71[v75];
											v81[v83[158 - (18 + 138)]] = v81[v83[7 - 4]][v83[4]];
											v75 = v75 + (1103 - (67 + 1035));
											v83 = v71[v75];
											v292 = v83[350 - (136 + 212)];
											v290 = 8 - 6;
										end
										if ((v290 == (3 + 0)) or (465 >= 3895)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v292 = v83[1606 - (240 + 1364)];
											v81[v292] = v81[v292](v13(v81, v292 + (1083 - (1050 + 32)), v83[10 - 7]));
											v75 = v75 + 1;
											v83 = v71[v75];
											v290 = 3 + 1;
										end
										if (v290 == (1060 - (331 + 724))) then
											if v81[v83[1 + 1]] then
												v75 = v75 + (645 - (269 + 375));
											else
												v75 = v83[3];
											end
											break;
										end
										if ((2335 < 3451) and (v290 == 0)) then
											v291 = nil;
											v292 = nil;
											v81[v83[727 - (267 + 458)]] = v81[v83[1 + 2]][v83[7 - 3]];
											v75 = v75 + (819 - (667 + 151));
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[3]][v83[4]];
											v290 = 1498 - (1410 + 87);
										end
										if ((1571 == 1571) and (v290 == (1901 - (1504 + 393)))) then
											v81[v83[5 - 3]][v83[7 - 4]] = v83[800 - (461 + 335)];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1763 - (1730 + 31)]] = v62[v83[1670 - (728 + 939)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v290 = 17 - 12;
										end
										if (v290 == (3 - 1)) then
											v291 = v81[v83[3]];
											v81[v292 + (2 - 1)] = v291;
											v81[v292] = v291[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1070 - (138 + 930)]] = v83[3 + 0];
											v290 = 3 + 0;
										end
									end
								elseif (v84 == (39 + 6)) then
									local v1792;
									local v1793;
									v1793 = v83[2];
									v1792 = v81[v83[12 - 9]];
									v81[v1793 + (1767 - (459 + 1307))] = v1792;
									v81[v1793] = v1792[v83[1874 - (474 + 1396)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v61[v83[3 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[11 - 7]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1793 = v83[2];
									v81[v1793] = v81[v1793](v13(v81, v1793 + 1 + 0, v83[9 - 6]));
									v75 = v75 + 1;
									v83 = v71[v75];
									if v81[v83[8 - 6]] then
										v75 = v75 + (592 - (562 + 29));
									else
										v75 = v83[3 + 0];
									end
								else
									local v1803;
									v81[v83[1421 - (374 + 1045)]] = v62[v83[3 + 0]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[641 - (448 + 190)]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[2 + 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1803 = v83[7 - 5];
									v81[v1803] = v81[v1803](v81[v1803 + (2 - 1)]);
									v75 = v75 + (1495 - (1307 + 187));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[11 - 8]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[5 - 3]][v83[3]] = v83[687 - (232 + 451)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[3 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[568 - (510 + 54)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[38 - (13 + 23)]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[3 - 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[1091 - (830 + 258)];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1803 = v83[1443 - (860 + 581)];
									v81[v1803] = v81[v1803](v13(v81, v1803 + (3 - 2), v83[3 + 0]));
									v75 = v75 + (242 - (237 + 4));
									v83 = v71[v75];
									v81[v83[4 - 2]][v83[6 - 3]] = v81[v83[4]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[2 + 1];
								end
							elseif (v84 <= (181 - 133)) then
								if (v84 > (21 + 26)) then
									local v1826 = 0 + 0;
									local v1827;
									local v1828;
									while true do
										if (v1826 == (1430 - (85 + 1341))) then
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[375 - (45 + 327)] ~= (0 - 0);
											break;
										end
										if (v1826 == 1) then
											v75 = v75 + (503 - (444 + 58));
											v83 = v71[v75];
											v1828 = v83[2];
											v1827 = v81[v83[2 + 1]];
											v1826 = 1 + 1;
										end
										if ((4948 == 4948) and (v1826 == (0 + 0))) then
											v1827 = nil;
											v1828 = nil;
											v1828 = v83[5 - 3];
											v81[v1828](v13(v81, v1828 + (1733 - (64 + 1668)), v83[1976 - (1227 + 746)]));
											v1826 = 2 - 1;
										end
										if (v1826 == 2) then
											v81[v1828 + (1 - 0)] = v1827;
											v81[v1828] = v1827[v83[498 - (415 + 79)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1826 = 494 - (142 + 349);
										end
										if (v1826 == (2 + 1)) then
											v81[v83[2 - 0]] = v83[2 + 1];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[1867 - (1710 + 154)];
											v1826 = 322 - (200 + 118);
										end
									end
								else
									local v1829;
									v81[v83[1 + 1]] = v81[v83[3]][v83[6 - 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[3 + 0]][v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = -v81[v83[6 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1252 - (363 + 887)]] = v81[v83[3]][v83[4]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[9 - 7]] = -v81[v83[1 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3 + 0]][v83[1668 - (674 + 990)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = -v81[v83[3 - 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1057 - (507 + 548)]] = v81[v83[840 - (289 + 548)]] + v83[1822 - (821 + 997)];
									v75 = v75 + (256 - (195 + 60));
									v83 = v71[v75];
									v1829 = v83[1 + 1];
									v81[v1829] = v81[v1829](v13(v81, v1829 + (1502 - (251 + 1250)), v83[8 - 5]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1034 - (809 + 223)]] = v81[v83[3]] * v81[v83[5 - 1]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[6 - 4]] = v81[v83[3 + 0]][v83[3 + 1]];
									v75 = v75 + (618 - (14 + 603));
									v83 = v71[v75];
									v81[v83[131 - (118 + 11)]] = v83[1 + 2];
								end
							elseif ((v84 > (41 + 8)) or (4173 < 1152)) then
								local v1848;
								local v1849;
								v81[v83[5 - 3]] = v62[v83[952 - (551 + 398)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1849 = v83[2 + 0];
								v81[v1849] = v81[v1849]();
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[11 - 8]] = v83[4];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[1 + 2]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v1849 = v83[2];
								v81[v1849] = v81[v1849]();
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[91 - (40 + 49)]][v83[11 - 8]] = v83[494 - (99 + 391)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1849 = v83[8 - 6];
								v1848 = v81[v83[7 - 4]];
								v81[v1849 + 1 + 0] = v1848;
								v81[v1849] = v1848[v83[10 - 6]];
								v75 = v75 + (1605 - (1032 + 572));
								v83 = v71[v75];
								v81[v83[419 - (203 + 214)]] = v83[1820 - (568 + 1249)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[11 - 8] ~= (1306 - (913 + 393));
							else
								local v1869;
								v81[v83[2]] = v62[v83[8 - 5]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[413 - (269 + 141)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[1984 - (362 + 1619)];
								v75 = v75 + (1626 - (950 + 675));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[1182 - (216 + 963)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[1290 - (485 + 802)];
								v75 = v75 + (560 - (432 + 127));
								v83 = v71[v75];
								v1869 = v83[1075 - (1065 + 8)];
								v81[v1869] = v81[v1869](v13(v81, v1869 + 1 + 0, v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1603 - (635 + 966)]][v83[3 + 0]] = v81[v83[4]];
								v75 = v75 + (43 - (5 + 37));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v62[v83[2 + 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								if v81[v83[1 + 1]] then
									v75 = v75 + (1 - 0);
								else
									v75 = v83[11 - 8];
								end
							end
						elseif (v84 <= (141 - 66)) then
							if ((v84 <= 62) or (387 > 4322)) then
								if (v84 <= (133 - 77)) then
									if ((267 < 3956) and (v84 <= (39 + 14))) then
										if (v84 <= 51) then
											local v293 = 529 - (318 + 211);
											local v294;
											while true do
												if (v293 == (9 - 7)) then
													v75 = v75 + (1588 - (963 + 624));
													v83 = v71[v75];
													v62[v83[3]] = v81[v83[1 + 1]];
													v75 = v75 + (847 - (518 + 328));
													v293 = 6 - 3;
												end
												if ((v293 == (8 - 2)) or (3834 < 493)) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v62[v83[320 - (301 + 16)]] = v81[v83[5 - 3]];
													v75 = v75 + (2 - 1);
													v293 = 18 - 11;
												end
												if (v293 == 1) then
													v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[8 - 4]];
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[2]] = v81[v83[1 + 2]][v83[12 - 8]];
													v293 = 1 + 1;
												end
												if (v293 == (1019 - (829 + 190))) then
													v294 = nil;
													v81[v83[2]] = v81[v83[3]][v83[14 - 10]];
													v75 = v75 + (1 - 0);
													v83 = v71[v75];
													v293 = 1;
												end
												if (v293 == (5 - 1)) then
													v81[v83[4 - 2]] = v81[v83[1 + 2]][v83[2 + 2]];
													v75 = v75 + (2 - 1);
													v83 = v71[v75];
													v81[v83[2 + 0]] = v83[616 - (520 + 93)];
													v293 = 281 - (259 + 17);
												end
												if ((v293 == (1 + 2)) or (4561 == 2096)) then
													v83 = v71[v75];
													v81[v83[1 + 1]] = v62[v83[3]];
													v75 = v75 + (3 - 2);
													v83 = v71[v75];
													v293 = 4;
												end
												if (v293 == (598 - (396 + 195))) then
													v83 = v71[v75];
													v81[v83[5 - 3]] = v83[1764 - (440 + 1321)];
													break;
												end
												if (v293 == (1834 - (1059 + 770))) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v294 = v83[9 - 7];
													v81[v294] = v81[v294](v81[v294 + (546 - (424 + 121))]);
													v293 = 2 + 4;
												end
											end
										elseif (v84 > (1399 - (641 + 706))) then
											local v1884;
											v81[v83[2]] = v61[v83[2 + 1]];
											v75 = v75 + (441 - (249 + 191));
											v83 = v71[v75];
											v81[v83[8 - 6]] = v81[v83[2 + 1]][v83[15 - 11]];
											v75 = v75 + (428 - (183 + 244));
											v83 = v71[v75];
											v1884 = v83[1 + 1];
											v81[v1884] = v81[v1884](v81[v1884 + (731 - (434 + 296))]);
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[514 - (169 + 343)]] = v61[v83[3]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[4 - 1]][v83[11 - 7]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[1127 - (651 + 472)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[3 - 0]][v83[4]];
											v75 = v75 + (484 - (397 + 86));
											v83 = v71[v75];
											v81[v83[878 - (423 + 453)]] = v62[v83[1 + 2]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[4 + 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[1193 - (50 + 1140)];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[1 + 2]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 - 0]] = v81[v83[3 + 0]][v83[600 - (157 + 439)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[6 - 4]] = v83[8 - 5];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1884 = v83[920 - (782 + 136)];
											v81[v1884] = v81[v1884](v81[v1884 + (856 - (112 + 743))]);
											v75 = v75 + (1172 - (1026 + 145));
											v83 = v71[v75];
											v81[v83[2]] = v83[1 + 2];
											v75 = v75 + (719 - (493 + 225));
											v83 = v71[v75];
											v1884 = v83[7 - 5];
											v81[v1884] = v81[v1884](v13(v81, v1884 + 1 + 0, v83[7 - 4]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[5 - 3]] = v81[v83[1 + 2]] * v81[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 - 0]] = v62[v83[1598 - (210 + 1385)]];
											v75 = v75 + (1690 - (1201 + 488));
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[2 + 1]][v83[6 - 2]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[587 - (352 + 233)]] = v83[7 - 4];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[3];
											v75 = v75 + (575 - (489 + 85));
											v83 = v71[v75];
											v1884 = v83[1503 - (277 + 1224)];
											v81[v1884] = v81[v1884](v13(v81, v1884 + (1494 - (663 + 830)), v83[3 + 0]));
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[877 - (461 + 414)]] = v81[v83[1 + 2]] * v81[v83[4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]][v83[1 + 2]] = v81[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v75 = v83[3 + 0];
										else
											local v1921 = v83[2];
											local v1922 = v81[v1921];
											for v5374 = v1921 + (251 - (172 + 78)), v83[4 - 1] do
												v7(v1922, v81[v5374]);
											end
										end
									elseif (v84 <= (20 + 34)) then
										local v295 = 0;
										local v296;
										local v297;
										local v298;
										local v299;
										local v300;
										while true do
											if ((3173 >= 2762) and (v295 == 1)) then
												v83 = v71[v75];
												v81[v83[2 - 0]] = v83[1 + 2];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[3 - 1];
												v81[v300] = v81[v300](v13(v81, v300 + 1, v83[3 - 0]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[15 - 11]];
												v295 = 2;
											end
											if ((34 - 19) == v295) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[450 - (133 + 314)];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[215 - (199 + 14)];
												v81[v300] = v81[v300](v13(v81, v300 + (3 - 2), v83[1552 - (647 + 902)]));
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v295 = 249 - (85 + 148);
											end
											if ((4724 >= 150) and (v295 == (1298 - (426 + 863)))) then
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v300 = v83[1656 - (873 + 781)];
												v81[v300] = v81[v300](v13(v81, v300 + (1 - 0), v83[7 - 4]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[7 - 5]] = v81[v83[3 - 0]][v83[11 - 7]];
												v75 = v75 + (1948 - (414 + 1533));
												v83 = v71[v75];
												v295 = 9 + 1;
											end
											if ((v295 == (560 - (443 + 112))) or (2485 == 3800)) then
												v83 = v71[v75];
												v81[v83[1481 - (888 + 591)]] = v62[v83[3]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v300 = v83[1 + 1];
												v299 = v81[v83[11 - 8]];
												v81[v300 + 1] = v299;
												v81[v300] = v299[v83[2 + 2]];
												v75 = v75 + 1 + 0;
												v295 = 6;
											end
											if ((v295 == (1 + 5)) or (1763 > 3653)) then
												v83 = v71[v75];
												v81[v83[3 - 1]] = v83[3];
												v75 = v75 + 1;
												v83 = v71[v75];
												v300 = v83[3 - 1];
												v81[v300] = v81[v300](v13(v81, v300 + (1679 - (136 + 1542)), v83[9 - 6]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 - 0]] = v81[v83[3 + 0]][v83[490 - (68 + 418)]];
												v295 = 18 - 11;
											end
											if (((6 - 2) == v295) or (870 == 3293)) then
												v81[v300] = v299[v83[4 + 0]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1094 - (770 + 322)]] = v83[1 + 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v300 = v83[1 + 1];
												v81[v300] = v81[v300](v13(v81, v300 + 1 + 0, v83[3 - 0]));
												v75 = v75 + 1;
												v295 = 9 - 4;
											end
											if ((34 - 21) == v295) then
												v81[v300 + (3 - 2)] = v299;
												v81[v300] = v299[v83[3 + 1]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[2 + 1];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[7 - 5];
												v81[v300] = v81[v300](v13(v81, v300 + (1 - 0), v83[2 + 1]));
												v295 = 14;
											end
											if (v295 == 18) then
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v75 = v83[3];
												break;
											end
											if ((39 - 27) == v295) then
												v81[v300 + 1 + 0] = v299;
												v81[v300] = v299[v83[19 - 15]];
												v75 = v75 + (832 - (762 + 69));
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[9 - 6]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[2 + 0];
												v299 = v81[v83[7 - 4]];
												v295 = 5 + 8;
											end
											if (v295 == (1 + 13)) then
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[159 - (8 + 149)]] = v81[v83[1323 - (1199 + 121)]][v83[4]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v300 = v83[4 - 2];
												v299 = v81[v83[2 + 1]];
												v81[v300 + (3 - 2)] = v299;
												v81[v300] = v299[v83[8 - 4]];
												v295 = 14 + 1;
											end
											if (v295 == (1823 - (518 + 1289))) then
												v300 = v83[2 - 0];
												v299 = v81[v83[1 + 2]];
												v81[v300 + (1 - 0)] = v299;
												v81[v300] = v299[v83[3 + 1]];
												v75 = v75 + (470 - (304 + 165));
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[163 - (54 + 106)];
												v75 = v75 + (1970 - (1618 + 351));
												v83 = v71[v75];
												v295 = 17;
											end
											if (v295 == (0 + 0)) then
												v296 = nil;
												v297, v298 = nil;
												v299 = nil;
												v300 = nil;
												v300 = v83[1018 - (10 + 1006)];
												v299 = v81[v83[1 + 2]];
												v81[v300 + 1 + 0] = v299;
												v81[v300] = v299[v83[12 - 8]];
												v75 = v75 + (1034 - (912 + 121));
												v295 = 1 + 0;
											end
											if (v295 == (1291 - (1140 + 149))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[2 - 0];
												v299 = v81[v83[3]];
												v81[v300 + 1] = v299;
												v81[v300] = v299[v83[1 + 3]];
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[3 - 1]] = v83[1 + 2];
												v295 = 3;
											end
											if ((v295 == (24 - 17)) or (4997 == 1418)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[188 - (165 + 21)]] = v81[v83[114 - (61 + 50)]][v83[2 + 2]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[9 - 7]][v83[5 - 2]] = v81[v83[2 + 2]];
												v75 = v75 + (1461 - (1295 + 165));
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[2 + 1]];
												v295 = 1405 - (819 + 578);
											end
											if ((v295 == 3) or (4236 < 1075)) then
												v75 = v75 + (1403 - (331 + 1071));
												v83 = v71[v75];
												v300 = v83[745 - (588 + 155)];
												v81[v300] = v81[v300](v13(v81, v300 + (1283 - (546 + 736)), v83[1940 - (1834 + 103)]));
												v75 = v75 + 1;
												v83 = v71[v75];
												v300 = v83[2 + 0];
												v299 = v81[v83[3]];
												v81[v300 + (2 - 1)] = v299;
												v295 = 4;
											end
											if (v295 == 8) then
												v75 = v75 + (1767 - (1536 + 230));
												v83 = v71[v75];
												v300 = v83[493 - (128 + 363)];
												v299 = v81[v83[1 + 2]];
												v81[v300 + 1] = v299;
												v81[v300] = v299[v83[4]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[3];
												v295 = 14 - 5;
											end
											if (v295 == (50 - 33)) then
												v300 = v83[4 - 2];
												v297, v298 = v74(v81[v300](v13(v81, v300 + 1 + 0, v83[1012 - (615 + 394)])));
												v76 = (v298 + v300) - 1;
												v296 = 0 + 0;
												for v6567 = v300, v76 do
													v296 = v296 + 1;
													v81[v6567] = v297[v296];
												end
												v75 = v75 + 1;
												v83 = v71[v75];
												v300 = v83[2];
												v81[v300](v13(v81, v300 + 1 + 0, v76));
												v295 = 54 - 36;
											end
											if ((v295 == 11) or (147 > 4806)) then
												v81[v83[8 - 6]] = v83[3];
												v75 = v75 + (652 - (59 + 592));
												v83 = v71[v75];
												v300 = v83[4 - 2];
												v81[v300] = v81[v300](v13(v81, v300 + (1 - 0), v83[3 + 0]));
												v75 = v75 + (172 - (70 + 101));
												v83 = v71[v75];
												v300 = v83[4 - 2];
												v299 = v81[v83[3]];
												v295 = 9 + 3;
											end
											if (v295 == (25 - 15)) then
												v81[v83[243 - (123 + 118)]] = v81[v83[3]][v83[1 + 3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v300 = v83[1401 - (653 + 746)];
												v299 = v81[v83[4 - 1]];
												v81[v300 + (1 - 0)] = v299;
												v81[v300] = v299[v83[10 - 6]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v295 = 8 + 3;
											end
										end
									elseif (v84 > (49 + 6)) then
										local v1923;
										local v1924;
										v81[v83[2]] = v62[v83[1 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[3 + 0]][v83[7 - 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1236 - (885 + 349)]] = v81[v83[3 + 0]][v83[10 - 6]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[5 - 3]][v83[3]] = v81[v83[972 - (915 + 53)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]][v83[804 - (768 + 33)]] = v83[15 - 11];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[330 - (287 + 41)]] = v62[v83[850 - (638 + 209)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[1690 - (96 + 1590)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1674 - (741 + 931)]] = v83[2 + 1];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[9 - 7]] = v83[3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[1 + 2];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1924 = v83[1 + 1];
										v81[v1924] = v81[v1924](v13(v81, v1924 + 1 + 0, v83[12 - 9]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[496 - (64 + 430)]][v83[3 + 0]] = v81[v83[367 - (106 + 257)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]][v83[724 - (496 + 225)]] = v83[7 - 3];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[1660 - (256 + 1402)]][v83[1902 - (30 + 1869)]] = v83[1373 - (213 + 1156)];
										v75 = v75 + (189 - (96 + 92));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[903 - (142 + 757)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1924 = v83[2];
										v1923 = v81[v83[2 + 1]];
										v81[v1924 + 1] = v1923;
										v81[v1924] = v1923[v83[4]];
									else
										local v1959 = 79 - (32 + 47);
										local v1960;
										local v1961;
										while true do
											if ((118 == 118) and (v1959 == (1982 - (1053 + 924)))) then
												v83 = v71[v75];
												if (v81[v83[2]] == v81[v83[4 + 0]]) then
													v75 = v75 + 1;
												else
													v75 = v83[3];
												end
												break;
											end
											if (((1 - 0) == v1959) or (2871 == 1693)) then
												v81[v1961 + (1649 - (685 + 963))] = v1960;
												v81[v1961] = v1960[v83[7 - 3]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v1959 = 1711 - (541 + 1168);
											end
											if (v1959 == (1600 - (645 + 952))) then
												v81[v83[840 - (669 + 169)]] = v62[v83[10 - 7]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[3 - 1]] = v81[v83[2 + 1]][v83[1 + 3]];
												v1959 = 769 - (181 + 584);
											end
											if (v1959 == (1397 - (665 + 730))) then
												v1961 = v83[5 - 3];
												v81[v1961] = v81[v1961](v81[v1961 + (1 - 0)]);
												v75 = v75 + (1351 - (540 + 810));
												v83 = v71[v75];
												v1959 = 11 - 8;
											end
											if ((1418 < 4842) and (0 == v1959)) then
												v1960 = nil;
												v1961 = nil;
												v1961 = v83[5 - 3];
												v1960 = v81[v83[3 + 0]];
												v1959 = 1;
											end
											if ((3473 == 3473) and (v1959 == 4)) then
												v75 = v75 + (204 - (166 + 37));
												v83 = v71[v75];
												v81[v83[1883 - (22 + 1859)]] = v81[v83[1775 - (843 + 929)]][v83[266 - (30 + 232)]];
												v75 = v75 + 1;
												v1959 = 14 - 9;
											end
										end
									end
								elseif ((3142 <= 3307) and (v84 <= 59)) then
									if (v84 <= (834 - (55 + 722))) then
										local v301 = 0;
										while true do
											if ((3249 == 3249) and (v301 == (1 - 0))) then
												v81[v83[1677 - (78 + 1597)]] = v81[v83[3]] + v81[v83[1 + 3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v301 = 2 + 0;
											end
											if (0 == v301) then
												v81[v83[551 - (305 + 244)]] = v61[v83[3 + 0]];
												v75 = v75 + (106 - (95 + 10));
												v83 = v71[v75];
												v301 = 1 + 0;
											end
											if (v301 == 5) then
												v75 = v83[9 - 6];
												break;
											end
											if (v301 == (2 - 0)) then
												v81[v83[764 - (592 + 170)]] = v81[v83[10 - 7]] / v83[9 - 5];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v301 = 3;
											end
											if ((4734 > 2548) and (v301 == (2 + 2))) then
												v81[v83[2]] = v83[6 - 3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v301 = 9 - 4;
											end
											if (3 == v301) then
												v81[v83[509 - (353 + 154)]][v83[3]] = v81[v83[5 - 1]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v301 = 3 + 1;
											end
										end
									elseif ((788 < 3874) and (v84 == (46 + 12))) then
										local v1962 = 0;
										local v1963;
										local v1964;
										while true do
											if (v1962 == (2 + 0)) then
												v81[v1964 + (1 - 0)] = v1963;
												v81[v1964] = v1963[v83[7 - 3]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v1962 = 3;
											end
											if (v1962 == (89 - (7 + 79))) then
												v81[v83[2]] = v83[3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1964 = v83[183 - (24 + 157)];
												v1962 = 7 - 3;
											end
											if ((4527 >= 4186) and (v1962 == (8 - 4))) then
												v81[v1964] = v81[v1964](v13(v81, v1964 + 1 + 0, v83[7 - 4]));
												v75 = v75 + (381 - (262 + 118));
												v83 = v71[v75];
												v1964 = v83[1085 - (1038 + 45)];
												v1962 = 10 - 5;
											end
											if (v1962 == 6) then
												v83 = v71[v75];
												v81[v83[2]] = v83[233 - (19 + 211)];
												break;
											end
											if (v1962 == (118 - (88 + 25))) then
												v1963 = v81[v83[7 - 4]];
												v81[v1964 + 1 + 0] = v1963;
												v81[v1964] = v1963[v83[4 + 0]];
												v75 = v75 + (1037 - (1007 + 29));
												v1962 = 2 + 4;
											end
											if ((v1962 == 0) or (3741 <= 2914)) then
												v1963 = nil;
												v1964 = nil;
												v1964 = v83[2];
												v81[v1964](v13(v81, v1964 + (2 - 1), v83[14 - 11]));
												v1962 = 1 + 0;
											end
											if (v1962 == (812 - (340 + 471))) then
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v1964 = v83[2];
												v1963 = v81[v83[592 - (276 + 313)]];
												v1962 = 4 - 2;
											end
										end
									else
										local v1965 = 0;
										local v1966;
										while true do
											if (v1965 == (0 + 0)) then
												v1966 = nil;
												v1966 = v83[1 + 1];
												v81[v1966] = v81[v1966](v13(v81, v1966 + 1, v83[1 + 2]));
												v75 = v75 + 1;
												v1965 = 1973 - (495 + 1477);
											end
											if (v1965 == 2) then
												v81[v83[5 - 3]] = v61[v83[3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[405 - (342 + 61)]] = v81[v83[2 + 1]][v83[4]];
												v1965 = 168 - (4 + 161);
											end
											if ((1411 <= 3261) and (v1965 == (4 + 1))) then
												v81[v83[6 - 4]] = v81[v83[7 - 4]][v83[501 - (322 + 175)]];
												v75 = v75 + (564 - (173 + 390));
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[317 - (203 + 111)];
												break;
											end
											if (v1965 == (1 + 0)) then
												v83 = v71[v75];
												v62[v83[3 + 0]] = v81[v83[5 - 3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v1965 = 2;
											end
											if (v1965 == 4) then
												v83 = v71[v75];
												v81[v83[708 - (57 + 649)]] = v81[v83[3]][v83[388 - (328 + 56)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1965 = 2 + 3;
											end
											if (v1965 == (515 - (433 + 79))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v61[v83[9 - 6]];
												v75 = v75 + (4 - 3);
												v1965 = 3 + 1;
											end
										end
									end
								elseif (v84 <= (54 + 6)) then
									local v302;
									v81[v83[2]] = v62[v83[1039 - (562 + 474)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[908 - (76 + 829)]][v83[4]];
									v75 = v75 + (1674 - (1506 + 167));
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[269 - (58 + 208)]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v81[v83[4]]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[339 - (258 + 79)]] = v81[v83[1 + 2]][v83[8 - 4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1472 - (1219 + 251)]] = v81[v83[1674 - (1231 + 440)]][v83[62 - (34 + 24)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[2 + 1]][v83[12 - 8]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v302 = v83[2];
									v81[v302](v81[v302 + (2 - 1)]);
								elseif ((749 <= 4622) and (v84 == (204 - 143))) then
									local v1967 = 0;
									local v1968;
									local v1969;
									while true do
										if ((10 - 5) == v1967) then
											v83 = v71[v75];
											v81[v83[1591 - (877 + 712)]] = v62[v83[3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[756 - (242 + 512)]] = v81[v83[6 - 3]][v83[631 - (92 + 535)]];
											break;
										end
										if ((1077 >= 568) and (v1967 == (3 + 0))) then
											v1969 = v83[3 - 1];
											v81[v1969] = v81[v1969](v13(v81, v1969 + 1 + 0, v83[10 - 7]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[3]];
											v75 = v75 + 1 + 0;
											v1967 = 7 - 3;
										end
										if (v1967 == (0 - 0)) then
											v1968 = nil;
											v1969 = nil;
											v1969 = v83[1787 - (1476 + 309)];
											v81[v1969](v81[v1969 + (1285 - (299 + 985))]);
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1967 = 3 - 2;
										end
										if (v1967 == 4) then
											v83 = v71[v75];
											v81[v83[95 - (86 + 7)]] = v81[v83[12 - 9]][v83[1 + 3]];
											v75 = v75 + (881 - (672 + 208));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[3];
											v75 = v75 + (133 - (14 + 118));
											v1967 = 450 - (339 + 106);
										end
										if (v1967 == (1 + 0)) then
											v81[v83[2 + 0]] = v62[v83[1398 - (440 + 955)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1969 = v83[3 - 1];
											v1968 = v81[v83[1 + 2]];
											v81[v1969 + (2 - 1)] = v1968;
											v1967 = 2 + 0;
										end
										if (v1967 == 2) then
											v81[v1969] = v1968[v83[357 - (260 + 93)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[6 - 3];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v1967 = 3;
										end
									end
								else
									local v1970;
									local v1971;
									v1971 = v83[2];
									v81[v1971] = v81[v1971](v13(v81, v1971 + (1975 - (1181 + 793)), v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[3]] = v81[v83[2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[309 - (105 + 202)]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1971 = v83[812 - (352 + 458)];
									v1970 = v81[v83[11 - 8]];
									v81[v1971 + (2 - 1)] = v1970;
									v81[v1971] = v1970[v83[4 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[8 - 5];
									v75 = v75 + (950 - (438 + 511));
									v83 = v71[v75];
									v1971 = v83[1385 - (1262 + 121)];
									v81[v1971] = v81[v1971](v13(v81, v1971 + (1069 - (728 + 340)), v83[1793 - (816 + 974)]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[7 - 5]] = v81[v83[342 - (163 + 176)]][v83[10 - 6]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v1971 = v83[2];
									v1970 = v81[v83[1 + 2]];
									v81[v1971 + 1] = v1970;
									v81[v1971] = v1970[v83[1814 - (1564 + 246)]];
								end
							elseif (v84 <= (413 - (124 + 221))) then
								if ((v84 <= (45 + 20)) or (4881 < 3299)) then
									if (v84 <= (514 - (115 + 336))) then
										local v316 = 0 - 0;
										local v317;
										while true do
											if (v316 == 0) then
												v317 = v83[1 + 1];
												v81[v317](v13(v81, v317 + (47 - (45 + 1)), v76));
												break;
											end
										end
									elseif (v84 > (4 + 60)) then
										local v1989;
										local v1990;
										local v1989, v1991;
										local v1992;
										local v1993;
										v81[v83[1992 - (1282 + 708)]] = v61[v83[1215 - (583 + 629)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1993 = v83[5 - 3];
										v1992 = v81[v83[2 + 1]];
										v81[v1993 + (1171 - (943 + 227))] = v1992;
										v81[v1993] = v1992[v83[2 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1993 = v83[1633 - (1539 + 92)];
										v1989, v1991 = v74(v81[v1993](v81[v1993 + (1947 - (706 + 1240))]));
										v76 = (v1991 + v1993) - (259 - (81 + 177));
										v1990 = 0 - 0;
										for v5512 = v1993, v76 do
											v1990 = v1990 + (258 - (212 + 45));
											v81[v5512] = v1989[v1990];
										end
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1993 = v83[1948 - (708 + 1238)];
										v1989 = {v81[v1993](v13(v81, v1993 + 1 + 0, v76))};
										v1990 = 1667 - (586 + 1081);
										for v5515 = v1993, v83[515 - (348 + 163)] do
											v1990 = v1990 + 1 + 0;
											v81[v5515] = v1989[v1990];
										end
										v75 = v75 + (281 - (215 + 65));
										v83 = v71[v75];
										v75 = v83[3];
									else
										local v2005 = 0 - 0;
										while true do
											if ((v2005 == (1863 - (1541 + 318))) or (3956 < 2247)) then
												if v81[v83[2 + 0]] then
													v75 = v75 + 1 + 0;
												else
													v75 = v83[3];
												end
												break;
											end
											if (v2005 == 0) then
												v81[v83[2]] = v62[v83[3 + 0]];
												v75 = v75 + (1751 - (1036 + 714));
												v83 = v71[v75];
												v2005 = 1 + 0;
											end
											if (v2005 == (2 + 0)) then
												v62[v83[1283 - (883 + 397)]] = v81[v83[592 - (563 + 27)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2005 = 11 - 8;
											end
											if (v2005 == (1989 - (1369 + 617))) then
												v81[v83[1489 - (85 + 1402)]] = v62[v83[2 + 1]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v2005 = 407 - (274 + 129);
											end
											if (v2005 == (218 - (12 + 205))) then
												v81[v83[2 + 0]] = not v81[v83[11 - 8]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2005 = 2;
											end
										end
									end
								elseif ((4179 >= 1622) and (v84 <= 66)) then
									local v318;
									v81[v83[386 - (27 + 357)]] = v62[v83[483 - (91 + 389)]];
									v75 = v75 + (298 - (90 + 207));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[865 - (706 + 155)]];
									v75 = v75 + (1796 - (730 + 1065));
									v83 = v71[v75];
									v81[v83[1565 - (1339 + 224)]] = v61[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[3]][v83[4]];
									v75 = v75 + (844 - (268 + 575));
									v83 = v71[v75];
									v81[v83[1296 - (919 + 375)]] = v81[v83[8 - 5]][v83[975 - (180 + 791)]];
									v75 = v75 + (1806 - (323 + 1482));
									v83 = v71[v75];
									v81[v83[2]] = v61[v83[3]];
									v75 = v75 + (1919 - (1177 + 741));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[11 - 8]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[113 - (96 + 13)]];
									v75 = v75 + (1922 - (962 + 959));
									v83 = v71[v75];
									v318 = v83[4 - 2];
									v81[v318] = v81[v318](v13(v81, v318 + 1, v83[1 + 2]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1353 - (461 + 890)]][v83[3 + 0]] = v81[v83[15 - 11]];
								elseif (v84 == 67) then
									local v2006;
									local v2007;
									v81[v83[245 - (19 + 224)]] = v81[v83[3]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[200 - (37 + 161)]] = v81[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3 + 0]][v83[65 - (60 + 1)]];
									v75 = v75 + (924 - (826 + 97));
									v83 = v71[v75];
									v2007 = v83[2 + 0];
									v2006 = v81[v83[10 - 7]];
									v81[v2007 + 1] = v2006;
									v81[v2007] = v2006[v83[7 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v2007 = v83[687 - (375 + 310)];
									v81[v2007] = v81[v2007](v81[v2007 + (2000 - (1864 + 135))]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[1135 - (314 + 817)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[216 - (32 + 182)]] = v83[3 + 0];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[68 - (39 + 26)]];
								else
									local v2029;
									local v2030;
									v2030 = v83[2];
									v2029 = v81[v83[3]];
									v81[v2030 + (145 - (54 + 90))] = v2029;
									v81[v2030] = v2029[v83[4]];
									v75 = v75 + (199 - (45 + 153));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v61[v83[3]];
									v75 = v75 + (553 - (457 + 95));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[9 - 5]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v2030 = v83[1 + 1];
									v81[v2030] = v81[v2030](v13(v81, v2030 + (3 - 2), v83[3]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									if (not v81[v83[2]] or (4693 < 370)) then
										v75 = v75 + (749 - (485 + 263));
									else
										v75 = v83[710 - (575 + 132)];
									end
								end
							elseif (v84 <= (932 - (750 + 111))) then
								if (v84 <= (1079 - (445 + 565))) then
									local v339 = 0 + 0;
									local v340;
									local v341;
									while true do
										if ((v339 == (2 + 8)) or (3557 <= 2238)) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v341 = v83[2];
											v81[v341] = v81[v341](v13(v81, v341 + (1 - 0), v83[2 + 1]));
											v75 = v75 + (311 - (189 + 121));
											v83 = v71[v75];
											v341 = v83[1 + 1];
											v340 = v81[v83[1350 - (634 + 713)]];
											v339 = 549 - (493 + 45);
										end
										if ((v339 == (971 - (493 + 475))) or (800 < 745)) then
											v81[v83[2]] = v81[v83[1 + 2]][v83[788 - (158 + 626)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[1094 - (1035 + 56)]][v83[4]];
											v75 = v75 + (960 - (114 + 845));
											v339 = 2 + 2;
										end
										if ((2558 < 3162) and (v339 == (2 - 1))) then
											v81[v83[2 + 0]] = v62[v83[1052 - (179 + 870)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v341 = v83[880 - (827 + 51)];
											v340 = v81[v83[7 - 4]];
											v81[v341 + 1 + 0] = v340;
											v81[v341] = v340[v83[4]];
											v75 = v75 + (474 - (95 + 378));
											v339 = 1 + 1;
										end
										if (v339 == (0 - 0)) then
											v340 = nil;
											v341 = nil;
											v341 = v83[2 + 0];
											v340 = v81[v83[1014 - (334 + 677)]];
											v81[v341 + (3 - 2)] = v340;
											v81[v341] = v340[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v339 = 1057 - (1049 + 7);
										end
										if ((637 <= 3032) and ((39 - 30) == v339)) then
											v341 = v83[2];
											v81[v341] = v81[v341](v13(v81, v341 + 1, v83[5 - 2]));
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[1 + 2]] * v81[v83[10 - 6]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[1 + 1]][v83[1423 - (1004 + 416)]] = v81[v83[1961 - (1621 + 336)]];
											v339 = 1949 - (337 + 1602);
										end
										if (v339 == (1529 - (1014 + 503))) then
											v75 = v83[1018 - (446 + 569)];
											break;
										end
										if (v339 == 7) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[8 - 5]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[5 - 2]][v83[1 + 3]];
											v75 = v75 + (506 - (223 + 282));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[4 - 1];
											v339 = 11 - 3;
										end
										if (v339 == 8) then
											v75 = v75 + (671 - (623 + 47));
											v83 = v71[v75];
											v81[v83[47 - (32 + 13)]] = v83[2 + 1];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[1804 - (1070 + 731)];
											v75 = v75 + 1;
											v83 = v71[v75];
											v339 = 9 + 0;
										end
										if (v339 == (1410 - (1257 + 147))) then
											v81[v83[2]] = v81[v83[2 + 1]][v83[7 - 3]];
											v75 = v75 + (134 - (98 + 35));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[10 - 7]][v83[13 - 9]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[4]];
											v75 = v75 + (558 - (395 + 162));
											v339 = 7 + 0;
										end
										if (v339 == (1945 - (816 + 1125))) then
											v83 = v71[v75];
											v81[v83[2 - 0]] = v62[v83[1151 - (701 + 447)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2 - 0]] = {};
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1343 - (391 + 950)]] = v62[v83[3]];
											v339 = 13 - 8;
										end
										if ((1199 > 816) and (v339 == (12 - 7))) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[14 - 10]];
											v75 = v75 + (1523 - (251 + 1271));
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v339 = 14 - 8;
										end
										if (v339 == 11) then
											v81[v341 + (1 - 0)] = v340;
											v81[v341] = v340[v83[1263 - (1147 + 112)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v341 = v83[3 - 1];
											v81[v341](v81[v341 + 1 + 0]);
											v75 = v75 + (698 - (335 + 362));
											v83 = v71[v75];
											v339 = 12 + 0;
										end
										if (v339 == (2 - 0)) then
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
											v75 = v75 + 1;
											v83 = v71[v75];
											v341 = v83[5 - 3];
											v81[v341] = v81[v341](v13(v81, v341 + 1, v83[11 - 8]));
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v339 = 3;
										end
									end
								elseif (v84 > (198 - 128)) then
									local v2041;
									v81[v83[568 - (237 + 329)]] = v81[v83[3]] * v83[14 - 10];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1126 - (408 + 716)]] = v81[v83[11 - 8]][v83[825 - (344 + 477)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1763 - (1188 + 573)]] = v83[7 - 4];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[3 - 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[3];
									v75 = v75 + (1530 - (508 + 1021));
									v83 = v71[v75];
									v2041 = v83[2 + 0];
									v81[v2041] = v81[v2041](v13(v81, v2041 + (1167 - (228 + 938)), v83[688 - (332 + 353)]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[3 + 0]] + v81[v83[3 + 1]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[425 - (18 + 405)]][v83[2 + 1]] = v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[3];
								else
									local v2060 = v83[3];
									local v2061 = v81[v2060];
									for v5589 = v2060 + (979 - (194 + 784)), v83[1774 - (694 + 1076)] do
										v2061 = v2061 .. v81[v5589];
									end
									v81[v83[1906 - (122 + 1782)]] = v2061;
								end
							elseif (v84 <= 73) then
								if (v84 > (68 + 4)) then
									local v2063;
									local v2064;
									v2064 = v83[2 + 0];
									v81[v2064](v13(v81, v2064 + 1 + 0, v83[3 + 0]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1973 - (214 + 1756)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[14 - 11]] = v81[v83[1 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v2064 = v83[1 + 1];
									v2063 = v81[v83[588 - (217 + 368)]];
									v81[v2064 + (2 - 1)] = v2063;
									v81[v2064] = v2063[v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1 + 2];
									v75 = v75 + (890 - (844 + 45));
									v83 = v71[v75];
									v81[v83[286 - (242 + 42)]] = v83[5 - 2] ~= (0 - 0);
								elseif (v83[1202 - (132 + 1068)] == v81[v83[5 - 1]]) then
									v75 = v75 + (1624 - (214 + 1409));
								else
									v75 = v83[3 + 0];
								end
							elseif ((94 <= 3353) and (v84 == 74)) then
								local v2079;
								local v2080;
								v81[v83[1636 - (497 + 1137)]] = v62[v83[3]];
								v75 = v75 + (941 - (9 + 931));
								v83 = v71[v75];
								v2080 = v83[291 - (181 + 108)];
								v2079 = v81[v83[2 + 1]];
								v81[v2080 + (2 - 1)] = v2079;
								v81[v2080] = v2079[v83[4]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[479 - (296 + 180)]];
								v75 = v75 + (1404 - (1183 + 220));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1268 - (1037 + 228)]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[8 - 5]][v83[4]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[736 - (527 + 207)]] = v83[530 - (187 + 340)];
								v75 = v75 + (1871 - (1298 + 572));
								v83 = v71[v75];
								v2080 = v83[4 - 2];
								v81[v2080](v13(v81, v2080 + 1, v83[173 - (144 + 26)]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								do
									return;
								end
							else
								local v2099 = 0 - 0;
								local v2100;
								local v2101;
								while true do
									if ((84 == 84) and (v2099 == (3 + 3))) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v2101 = v83[4 - 2];
										v81[v2101](v13(v81, v2101 + (4 - 3), v83[2 + 1]));
										v2099 = 9 - 2;
									end
									if ((4054 < 4742) and (v2099 == (1 + 0))) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[2 + 1]][v83[206 - (5 + 197)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2099 = 688 - (339 + 347);
									end
									if (v2099 == 0) then
										v2100 = nil;
										v2101 = nil;
										v81[v83[2]] = v81[v83[6 - 3]][v83[4]];
										v75 = v75 + (3 - 2);
										v2099 = 1;
									end
									if (v2099 == 4) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[379 - (365 + 11)]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2099 = 5;
									end
									if (v2099 == (26 - 19)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[926 - (837 + 87)]] = v62[v83[3]];
										v75 = v75 + (1 - 0);
										v2099 = 1678 - (837 + 833);
									end
									if ((848 <= 2270) and (v2099 == (2 + 3))) then
										v81[v83[2]] = v81[v83[3]][v83[1391 - (356 + 1031)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1648 - (73 + 1573)]] = v83[1391 - (1307 + 81)] ~= 0;
										v2099 = 240 - (7 + 227);
									end
									if (v2099 == (12 - 4)) then
										v83 = v71[v75];
										v81[v83[168 - (90 + 76)]] = v81[v83[3]][v83[12 - 8]];
										break;
									end
									if (v2099 == (2 + 1)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v2099 = 15 - 11;
									end
									if (v2099 == 2) then
										v2101 = v83[262 - (197 + 63)];
										v2100 = v81[v83[3]];
										v81[v2101 + 1 + 0] = v2100;
										v81[v2101] = v2100[v83[1 + 3]];
										v2099 = 2 + 1;
									end
								end
							end
						elseif (v84 <= (15 + 73)) then
							if (v84 <= 81) then
								if (v84 <= (97 - 19)) then
									if (v84 <= (1445 - (618 + 751))) then
										local v342 = v83[2 + 0];
										do
											return v13(v81, v342, v76);
										end
									elseif ((985 > 850) and (v84 == (1987 - (206 + 1704)))) then
										local v2102;
										local v2103;
										v2103 = v83[2 - 0];
										v81[v2103](v13(v81, v2103 + (1 - 0), v83[2 + 1]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v2103 = v83[1277 - (155 + 1120)];
										v2102 = v81[v83[1509 - (396 + 1110)]];
										v81[v2103 + (2 - 1)] = v2102;
										v81[v2103] = v2102[v83[2 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[979 - (230 + 746)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2103 = v83[603 - (473 + 128)];
										v81[v2103](v13(v81, v2103 + 1, v83[51 - (39 + 9)]));
										v75 = v75 + (267 - (38 + 228));
										v83 = v71[v75];
										v2103 = v83[3 - 1];
										v2102 = v81[v83[3]];
										v81[v2103 + (474 - (106 + 367))] = v2102;
										v81[v2103] = v2102[v83[1 + 3]];
										v75 = v75 + (1863 - (354 + 1508));
										v83 = v71[v75];
										v81[v83[6 - 4]] = v83[3];
									else
										local v2120 = 0 + 0;
										local v2121;
										local v2122;
										while true do
											if ((3494 >= 3307) and ((2 + 0) == v2120)) then
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1246 - (334 + 910)]] = v83[898 - (92 + 803)];
												v2120 = 2 + 1;
											end
											if (v2120 == (1186 - (1035 + 146))) then
												v81[v83[618 - (230 + 386)]] = v83[3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2120 = 1516 - (353 + 1157);
											end
											if (v2120 == (1120 - (53 + 1061))) then
												v2122 = v83[1637 - (1568 + 67)];
												v2121 = v81[v83[3]];
												v81[v2122 + 1 + 0] = v2121;
												v2120 = 1 + 6;
											end
											if (v2120 == (0 - 0)) then
												v2121 = nil;
												v2122 = nil;
												v2122 = v83[2];
												v2120 = 2 - 1;
											end
											if (v2120 == (7 - 4)) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2122 = v83[1214 - (615 + 597)];
												v2120 = 4;
											end
											if (v2120 == 8) then
												v81[v83[2]] = v83[3 + 0];
												break;
											end
											if ((2880 == 2880) and (v2120 == (10 - 3))) then
												v81[v2122] = v2121[v83[4 + 0]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2120 = 1 + 7;
											end
											if ((356 <= 2491) and ((3 + 1) == v2120)) then
												v81[v2122] = v81[v2122](v13(v81, v2122 + (1900 - (1056 + 843)), v83[5 - 2]));
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v2120 = 14 - 9;
											end
											if (v2120 == (1 + 0)) then
												v2121 = v81[v83[1979 - (286 + 1690)]];
												v81[v2122 + 1] = v2121;
												v81[v2122] = v2121[v83[915 - (98 + 813)]];
												v2120 = 1 + 1;
											end
										end
									end
								elseif (v84 <= (191 - 112)) then
									local v343;
									local v344, v345;
									local v346;
									v81[v83[2]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[509 - (263 + 244)]] = v81[v83[3 + 0]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1689 - (1502 + 185)]] = v81[v83[1 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v62[v83[7 - 4]];
									v75 = v75 + (1528 - (629 + 898));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[7 - 4]][v83[369 - (12 + 353)]];
									v75 = v75 + (1912 - (1680 + 231));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[3 + 1]];
									v75 = v75 + (1150 - (212 + 937));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[1066 - (111 + 951)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[29 - (18 + 9)]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + (535 - (31 + 503));
									v83 = v71[v75];
									v346 = v83[1634 - (595 + 1037)];
									v344, v345 = v74(v81[v346](v13(v81, v346 + (1445 - (189 + 1255)), v83[2 + 1])));
									v76 = (v345 + v346) - (1 - 0);
									v343 = 1279 - (1170 + 109);
									for v1478 = v346, v76 do
										v343 = v343 + (1818 - (348 + 1469));
										v81[v1478] = v344[v343];
									end
									v75 = v75 + (1290 - (1115 + 174));
									v83 = v71[v75];
									v346 = v83[4 - 2];
									v81[v346] = v81[v346](v13(v81, v346 + (1015 - (85 + 929)), v76));
								elseif (v84 == (47 + 33)) then
									local v2123 = 1867 - (1151 + 716);
									while true do
										if ((2536 >= 2468) and (v2123 == (1 + 1))) then
											v83 = v71[v75];
											v81[v83[2 + 0]][v83[1707 - (95 + 1609)]] = v81[v83[4]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v2123 = 761 - (364 + 394);
										end
										if (v2123 == 0) then
											v81[v83[2 + 0]] = v62[v83[1 + 2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[3 + 1]];
											v2123 = 1 + 0;
										end
										if (v2123 == (1 + 0)) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[959 - (719 + 237)]];
											v75 = v75 + (2 - 1);
											v2123 = 2 + 0;
										end
										if (v2123 == (7 - 4)) then
											do
												return;
											end
											break;
										end
									end
								else
									local v2124 = 0 - 0;
									while true do
										if ((2414 < 2674) and (v2124 == (4 - 2))) then
											v81[v83[1993 - (761 + 1230)]] = v62[v83[196 - (80 + 113)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v2124 = 3 + 0;
										end
										if ((2225 < 4688) and (v2124 == (1 + 7))) then
											v81[v83[7 - 5]][v83[1 + 2]] = v81[v83[1 + 3]];
											v75 = v75 + (1244 - (965 + 278));
											v83 = v71[v75];
											v2124 = 1738 - (1391 + 338);
										end
										if (v2124 == (15 - 9)) then
											v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[2 + 2]];
											v75 = v75 + (1409 - (496 + 912));
											v83 = v71[v75];
											v2124 = 23 - 16;
										end
										if (v2124 == (0 + 0)) then
											v81[v83[2]] = v81[v83[5 - 2]][v83[1334 - (1190 + 140)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v2124 = 719 - (317 + 401);
										end
										if ((747 < 3155) and (v2124 == (954 - (303 + 646)))) then
											v81[v83[6 - 4]] = v81[v83[1735 - (1675 + 57)]][v81[v83[3 + 1]]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v2124 = 1 + 5;
										end
										if (v2124 == (984 - (338 + 639))) then
											v81[v83[381 - (320 + 59)]] = v81[v83[2 + 1]][v83[736 - (628 + 104)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v2124 = 1899 - (439 + 1452);
										end
										if ((v2124 == 1) or (3528 == 3874)) then
											v81[v83[1949 - (105 + 1842)]] = v81[v83[3]][v83[4]];
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v2124 = 4 - 2;
										end
										if (v2124 == (19 - 15)) then
											v81[v83[2]] = v81[v83[1 + 2]][v83[6 - 2]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2124 = 3 + 2;
										end
										if (((1167 - (274 + 890)) == v2124) or (2738 > 3629)) then
											v81[v83[2]] = v81[v83[3 + 0]][v83[4 + 0]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2124 = 2 + 2;
										end
										if ((v2124 == (5 + 4)) or (1099 <= 438)) then
											v75 = v83[3];
											break;
										end
									end
								end
							elseif ((539 <= 4568) and (v84 <= (50 + 34))) then
								if (v84 <= (115 - 33)) then
									local v365 = 819 - (731 + 88);
									local v366;
									while true do
										if (v365 == 2) then
											v81[v83[2]] = v81[v83[3 + 0]][v83[3 + 1]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v366 = v83[2 - 0];
											v365 = 8 - 5;
										end
										if ((2 - 1) == v365) then
											v366 = v83[3 - 1];
											v81[v366] = v81[v366]();
											v75 = v75 + 1;
											v83 = v71[v75];
											v365 = 2 + 0;
										end
										if (v365 == (1 + 2)) then
											v81[v366] = v81[v366](v81[v366 + 1 + 0]);
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											if v81[v83[2]] then
												v75 = v75 + 1;
											else
												v75 = v83[161 - (139 + 19)];
											end
											break;
										end
										if ((v365 == 0) or (3089 < 1465)) then
											v366 = nil;
											v81[v83[2]] = v62[v83[1 + 2]];
											v75 = v75 + (1994 - (1687 + 306));
											v83 = v71[v75];
											v365 = 3 - 2;
										end
									end
								elseif ((2723 > 938) and (v84 > (1237 - (1018 + 136)))) then
									local v2125;
									v81[v83[1 + 1]]();
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[817 - (117 + 698)]] = v62[v83[3]];
									v75 = v75 + (482 - (305 + 176));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3 + 0];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v2125 = v83[2 + 0];
									v81[v2125](v81[v2125 + 1]);
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v75 = v83[6 - 3];
								else
									local v2133 = 0 - 0;
									local v2134;
									local v2135;
									while true do
										if ((4257 > 1315) and (v2133 == (260 - (159 + 101)))) then
											v2134 = nil;
											v2135 = nil;
											v2135 = v83[2];
											v81[v2135](v81[v2135 + (4 - 3)]);
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v2133 = 1;
										end
										if ((v2133 == (3 + 2)) or (2943 <= 873)) then
											v2135 = v83[6 - 4];
											v81[v2135] = v81[v2135](v13(v81, v2135 + (1 - 0), v83[1 + 2]));
											v75 = v75 + (267 - (112 + 154));
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[3]];
											break;
										end
										if ((4675 == 4675) and (v2133 == 2)) then
											v81[v83[2]] = v61[v83[6 - 3]];
											v75 = v75 + (32 - (21 + 10));
											v83 = v71[v75];
											v81[v83[1721 - (531 + 1188)]] = v81[v83[3 + 0]][v83[4]];
											v75 = v75 + (664 - (96 + 567));
											v83 = v71[v75];
											v2133 = 3 - 0;
										end
										if (v2133 == (1 + 0)) then
											v81[v83[7 - 5]] = v61[v83[3]];
											v75 = v75 + (1696 - (867 + 828));
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[10 - 7]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2133 = 4 - 2;
										end
										if (v2133 == 4) then
											v81[v2135] = v2134[v83[5 - 1]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[3];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2133 = 8 - 3;
										end
										if (v2133 == (774 - (134 + 637))) then
											v81[v83[1 + 1]] = v81[v83[1160 - (775 + 382)]][v83[5 - 1]];
											v75 = v75 + (608 - (45 + 562));
											v83 = v71[v75];
											v2135 = v83[864 - (545 + 317)];
											v2134 = v81[v83[3 - 0]];
											v81[v2135 + (1027 - (763 + 263))] = v2134;
											v2133 = 1 + 3;
										end
									end
								end
							elseif ((v84 <= (1836 - (512 + 1238))) or (4968 == 1127)) then
								if ((v84 == (1679 - (272 + 1322))) or (441 == 2577)) then
									local v2136;
									v81[v83[3 - 1]] = v81[v83[3]][v83[4]];
									v75 = v75 + (1247 - (533 + 713));
									v83 = v71[v75];
									v81[v83[30 - (14 + 14)]] = v83[828 - (499 + 326)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[427 - (104 + 320)];
									v75 = v75 + (1998 - (1929 + 68));
									v83 = v71[v75];
									v81[v83[1325 - (1206 + 117)]] = v83[3 + 0];
									v75 = v75 + (1593 - (683 + 909));
									v83 = v71[v75];
									v2136 = v83[5 - 3];
									v81[v2136] = v81[v2136](v13(v81, v2136 + (1 - 0), v83[780 - (772 + 5)]));
									v75 = v75 + (1428 - (19 + 1408));
									v83 = v71[v75];
									v81[v83[290 - (134 + 154)]][v83[4 - 1]] = v81[v83[12 - 8]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[205 - (10 + 192)]] = v83[4];
									v75 = v75 + (48 - (13 + 34));
									v83 = v71[v75];
									v81[v83[1291 - (342 + 947)]] = v62[v83[12 - 9]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1711 - (119 + 1589)]][v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v83[3 - 0];
								else
									do
										return v81[v83[2]];
									end
								end
							elseif ((v84 > 87) or (3806 >= 4513)) then
								local v2156;
								local v2157;
								v81[v83[554 - (545 + 7)]] = v62[v83[8 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1705 - (494 + 1209)]] = v81[v83[7 - 4]][v83[1002 - (197 + 801)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[9 - 7]] = v81[v83[957 - (919 + 35)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v62[v83[11 - 8]] = v81[v83[469 - (369 + 98)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1117 - (400 + 715)]] = v62[v83[2 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1327 - (744 + 581)]] = v81[v83[3]][v83[3 + 1]];
								v75 = v75 + (1623 - (653 + 969));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[1634 - (12 + 1619)]][v83[167 - (103 + 60)]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v2157 = v83[8 - 6];
								v2156 = v81[v83[14 - 11]];
								v81[v2157 + 1] = v2156;
								v81[v2157] = v2156[v83[1666 - (710 + 952)]];
								v75 = v75 + (1869 - (555 + 1313));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[3 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
							else
								v81[v83[1470 - (1261 + 207)]] = v81[v83[3]][v81[v83[4]]];
							end
						elseif (v84 <= (346 - (245 + 7))) then
							if (v84 <= (838 - (212 + 535))) then
								if (v84 <= (439 - 350)) then
									local v367;
									local v368;
									v368 = v83[1478 - (905 + 571)];
									v367 = v81[v83[13 - 10]];
									v81[v368 + (1 - 0)] = v367;
									v81[v368] = v367[v83[15 - 11]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1466 - (522 + 941)];
									v75 = v75 + (1512 - (292 + 1219));
									v83 = v71[v75];
									v368 = v83[1114 - (787 + 325)];
									v81[v368] = v81[v368](v13(v81, v368 + (2 - 1), v83[3 + 0]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[536 - (424 + 110)]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v368 = v83[1 + 1];
									v367 = v81[v83[3]];
									v81[v368 + (313 - (33 + 279))] = v367;
									v81[v368] = v367[v83[1 + 3]];
									v75 = v75 + (1354 - (1338 + 15));
									v83 = v71[v75];
									v368 = v83[1425 - (528 + 895)];
									v81[v368](v81[v368 + 1 + 0]);
									v75 = v75 + (1925 - (1606 + 318));
									v83 = v71[v75];
									if ((2826 <= 3759) and v81[v83[1821 - (298 + 1521)]]) then
										v75 = v75 + (4 - 3);
									else
										v75 = v83[3];
									end
								elseif ((v84 > (400 - (154 + 156))) or (691 > 4299)) then
									v81[v83[7 - 5]] = v81[v83[5 - 2]][v83[1119 - (712 + 403)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[452 - (168 + 282)]] = v81[v83[5 - 2]][v83[4 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[8 - 5]];
									v75 = v75 + (1452 - (1242 + 209));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[682 - (20 + 659)]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[6 - 3]][v83[4]];
									v75 = v75 + (620 - (427 + 192));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[2 + 1]][v81[v83[1951 - (1427 + 520)]]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[15 - 11]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1234 - (712 + 520)]] = v81[v83[6 - 3]][v83[1350 - (565 + 781)]];
									v75 = v75 + (566 - (35 + 530));
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[3]] = v81[v83[14 - 10]];
									v75 = v75 + (1379 - (1330 + 48));
									v83 = v71[v75];
									v75 = v83[3];
								else
									local v2204 = 0 + 0;
									local v2205;
									local v2206;
									while true do
										if (v2204 == (1 + 0)) then
											v81[v2206 + (1 - 0)] = v2205;
											v81[v2206] = v2205[v83[4]];
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v2204 = 2;
										end
										if ((6 == v2204) or (2365 < 783)) then
											v81[v2206] = v2205[v83[1173 - (854 + 315)]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[2]] = v83[1 + 2];
											v2204 = 51 - (31 + 13);
										end
										if (v2204 == (11 - 3)) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[3]];
											v75 = v75 + (564 - (281 + 282));
											v2204 = 24 - 15;
										end
										if (v2204 == 3) then
											v81[v2206] = v81[v2206](v13(v81, v2206 + 1 + 0, v83[952 - (216 + 733)]));
											v75 = v75 + (1848 - (137 + 1710));
											v83 = v71[v75];
											v81[v83[5 - 3]] = v81[v83[541 - (100 + 438)]];
											v2204 = 1369 - (205 + 1160);
										end
										if (v2204 == (4 + 1)) then
											v83 = v71[v75];
											v2206 = v83[2 + 0];
											v2205 = v81[v83[1308 - (535 + 770)]];
											v81[v2206 + 1 + 0] = v2205;
											v2204 = 4 + 2;
										end
										if (v2204 == 2) then
											v81[v83[1996 - (211 + 1783)]] = v83[3];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v2206 = v83[2];
											v2204 = 3;
										end
										if ((2450 <= 4572) and (v2204 == (1438 - (1236 + 193)))) then
											v83 = v71[v75];
											v81[v83[912 - (793 + 117)]] = v83[1895 - (1607 + 285)];
											break;
										end
										if (v2204 == (867 - (747 + 113))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v2206 = v83[1978 - (80 + 1896)];
											v81[v2206] = v81[v2206](v13(v81, v2206 + (4 - 3), v83[3]));
											v2204 = 14 - 6;
										end
										if (v2204 == (4 + 0)) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[3]];
											v75 = v75 + (2 - 1);
											v2204 = 3 + 2;
										end
										if (0 == v2204) then
											v2205 = nil;
											v2206 = nil;
											v2206 = v83[1 + 1];
											v2205 = v81[v83[3]];
											v2204 = 1;
										end
									end
								end
							elseif (v84 <= (219 - 127)) then
								local v385;
								local v386;
								v386 = v83[456 - (246 + 208)];
								v385 = v81[v83[1895 - (614 + 1278)]];
								v81[v386 + 1 + 0] = v385;
								v81[v386] = v385[v83[318 - (249 + 65)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1277 - (726 + 549)]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1426 - (916 + 508)]] = v83[9 - 6];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[2 + 1];
								v75 = v75 + (324 - (140 + 183));
								v83 = v71[v75];
								v386 = v83[2];
								v81[v386](v13(v81, v386 + 1, v83[3 + 0]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[567 - (297 + 267)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[345 - (37 + 305)];
								v75 = v75 + (1267 - (323 + 943));
								v83 = v71[v75];
								v386 = v83[2];
								v81[v386](v81[v386 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[3]];
								v75 = v75 + (1536 - (394 + 1141));
								v83 = v71[v75];
								v386 = v83[2 + 0];
								v385 = v81[v83[1 + 2]];
								v81[v386 + 1] = v385;
								v81[v386] = v385[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v386 = v83[2 - 0];
								v81[v386](v81[v386 + 1]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[531 - (87 + 442)]] = v81[v83[808 - (13 + 792)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[1869 - (1231 + 634)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1768 - (1362 + 404)]] = v81[v83[3]][v83[10 - 6]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[1020 - (660 + 356)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[3]] = v81[v83[1954 - (1111 + 839)]];
								v75 = v75 + (952 - (496 + 455));
								v83 = v71[v75];
								v75 = v83[701 - (66 + 632)];
							elseif (v84 > (148 - 55)) then
								v81[v83[1138 - (441 + 695)]] = {};
							else
								local v2208;
								local v2209;
								v2209 = v83[2];
								v2208 = v81[v83[3]];
								v81[v2209 + (2 - 1)] = v2208;
								v81[v2209] = v2208[v83[7 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2209 = v83[9 - 7];
								v81[v2209] = v81[v2209](v81[v2209 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1840 - (286 + 1552)]] = #v81[v83[1280 - (1016 + 261)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2209 = v83[1322 - (708 + 612)];
								v81[v2209] = v81[v2209](v13(v81, v2209 + (2 - 1), v83[2 + 1]));
								v75 = v75 + (380 - (113 + 266));
								v83 = v71[v75];
								v81[v83[1172 - (979 + 191)]] = v81[v83[5 - 2]][v81[v83[1739 - (339 + 1396)]]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2209 = v83[2];
								v81[v2209](v13(v81, v2209 + 1 + 0, v83[5 - 2]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								do
									return v81[v83[1 + 1]];
								end
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[350 - (187 + 160)];
							end
						elseif (v84 <= 97) then
							if (v84 <= (216 - 121)) then
								local v421 = 0 - 0;
								local v422;
								local v423;
								while true do
									if (v421 == (1 + 4)) then
										v83 = v71[v75];
										v81[v83[6 - 4]] = v83[1 + 2];
										v75 = v75 + 1;
										v83 = v71[v75];
										v423 = v83[1 + 1];
										v421 = 6;
									end
									if ((v421 == (12 - 5)) or (846 >= 1858)) then
										v83 = v71[v75];
										v81[v83[2]] = v83[331 - (56 + 272)];
										break;
									end
									if ((v421 == (4 + 2)) or (1634 > 4497)) then
										v81[v423] = v81[v423](v13(v81, v423 + 1 + 0, v83[3]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[2 + 1]][v83[644 - (455 + 185)]];
										v75 = v75 + 1;
										v421 = 795 - (757 + 31);
									end
									if (v421 == (1999 - (762 + 1237))) then
										v422 = nil;
										v423 = nil;
										v81[v83[3 - 1]] = v81[v83[272 - (265 + 4)]][v83[9 - 5]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v421 = 1 + 0;
									end
									if (v421 == (6 - 2)) then
										v423 = v83[5 - 3];
										v422 = v81[v83[3]];
										v81[v423 + 1 + 0] = v422;
										v81[v423] = v422[v83[10 - 6]];
										v75 = v75 + 1;
										v421 = 10 - 5;
									end
									if ((3 - 1) == v421) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1737 - (1691 + 43)]][v83[4 + 0]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[1 + 2]];
										v421 = 10 - 7;
									end
									if (v421 == 1) then
										v81[v83[178 - (127 + 49)]] = v81[v83[1683 - (281 + 1399)]][v83[4]];
										v75 = v75 + (1660 - (184 + 1475));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[3]][v83[4]];
										v75 = v75 + (2 - 1);
										v421 = 4 - 2;
									end
									if ((613 < 1680) and (v421 == (2 + 1))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1293 - (260 + 1031)]] = v81[v83[1180 - (313 + 864)]][v83[4]];
										v75 = v75 + (693 - (655 + 37));
										v83 = v71[v75];
										v421 = 4 + 0;
									end
								end
							elseif (v84 > (161 - 65)) then
								local v2222 = v83[4 - 2];
								v81[v2222] = v81[v2222](v13(v81, v2222 + 1 + 0, v76));
							else
								local v2224;
								local v2225;
								v81[v83[2 + 0]] = v61[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2225 = v83[3 - 1];
								v2224 = v81[v83[773 - (383 + 387)]];
								v81[v2225 + 1 + 0] = v2224;
								v81[v2225] = v2224[v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v61[v83[1 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[512 - (304 + 206)]] = v81[v83[3]][v83[229 - (182 + 43)]];
								v75 = v75 + (776 - (264 + 511));
								v83 = v71[v75];
								v2225 = v83[1 + 1];
								v81[v2225] = v81[v2225](v13(v81, v2225 + (2 - 1), v83[984 - (128 + 853)]));
								v75 = v75 + (1703 - (1635 + 67));
								v83 = v71[v75];
								if v81[v83[2]] then
									v75 = v75 + 1;
								else
									v75 = v83[1 + 2];
								end
							end
						elseif (v84 <= (38 + 61)) then
							if (v84 > (295 - (131 + 66))) then
								local v2239 = 0 - 0;
								local v2240;
								local v2241;
								while true do
									if ((v2239 == 0) or (1050 >= 2196)) then
										v2240 = nil;
										v2241 = nil;
										v81[v83[2]] = v81[v83[3]][v83[4]];
										v75 = v75 + (4 - 3);
										v2239 = 1 + 0;
									end
									if ((918 <= 3228) and (v2239 == (3 + 1))) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[4 - 1]][v83[6 - 2]];
										v75 = v75 + (1606 - (306 + 1299));
										v83 = v71[v75];
										v2239 = 2 + 3;
									end
									if ((v2239 == (7 - 4)) or (2027 == 1494)) then
										v75 = v75 + (790 - (671 + 118));
										v83 = v71[v75];
										v81[v83[7 - 5]] = v62[v83[79 - (73 + 3)]];
										v75 = v75 + (2 - 1);
										v2239 = 4;
									end
									if (v2239 == (4 - 3)) then
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[1758 - (1668 + 87)]][v83[1 + 3]];
										v75 = v75 + (1900 - (296 + 1603));
										v83 = v71[v75];
										v2239 = 108 - (79 + 27);
									end
									if (v2239 == 6) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2241 = v83[2];
										v81[v2241](v13(v81, v2241 + 1, v83[1010 - (700 + 307)]));
										v2239 = 5 + 2;
									end
									if ((4689 >= 4074) and (v2239 == (1807 - (1477 + 322)))) then
										v83 = v71[v75];
										v75 = v83[1 + 2];
										break;
									end
									if ((v2239 == (15 - 8)) or (4278 <= 4275)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[9 - 6];
										v75 = v75 + 1 + 0;
										v2239 = 32 - 24;
									end
									if (v2239 == (13 - 8)) then
										v81[v83[1 + 1]] = v81[v83[6 - 3]][v83[6 - 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[1789 - (20 + 1766)] ~= (0 - 0);
										v2239 = 815 - (88 + 721);
									end
									if (v2239 == (2 + 0)) then
										v2241 = v83[2];
										v2240 = v81[v83[1 + 2]];
										v81[v2241 + 1 + 0] = v2240;
										v81[v2241] = v2240[v83[2 + 2]];
										v2239 = 7 - 4;
									end
								end
							else
								local v2242 = 0 - 0;
								local v2243;
								local v2244;
								local v2245;
								local v2246;
								local v2247;
								local v2248;
								while true do
									if (v2242 == (437 - (93 + 344))) then
										v2243 = nil;
										v2244, v2245 = nil;
										v2246 = nil;
										v2247 = nil;
										v2248 = nil;
										v81[v83[1215 - (960 + 253)]] = v62[v83[1 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v62[v83[8 - 5]];
										v2242 = 1417 - (74 + 1342);
									end
									if ((2163 <= 2240) and (v2242 == 2)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[476 - (33 + 441)]] = v81[v83[3]][v83[11 - 7]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1422 - (64 + 1355)]][v81[v83[4]]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[13 - (5 + 6)]] = v81[v83[3]][v83[1 + 3]];
										v2242 = 1 + 2;
									end
									if (v2242 == (450 - (369 + 77))) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v2248 = v83[1 + 1];
										v81[v2248] = v81[v2248](v81[v2248 + (739 - (438 + 300))]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[296 - (50 + 244)]] = v83[1204 - (95 + 1106)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2242 = 9 - 4;
									end
									if (v2242 == (64 - 51)) then
										v2246 = v81[v2247];
										for v9668 = v2247 + 1, v83[4] do
											v2246 = v2246 .. v81[v9668];
										end
										v81[v83[2]] = v2246;
										v75 = v75 + 1;
										v83 = v71[v75];
										v2248 = v83[1898 - (1741 + 155)];
										v2244, v2245 = v74(v81[v2248](v81[v2248 + 1]));
										v76 = (v2245 + v2248) - (2 - 1);
										v2243 = 0 - 0;
										v2242 = 28 - 14;
									end
									if (v2242 == (1 + 0)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[3 + 1]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[4 - 2]] = v62[v83[1780 - (1263 + 514)]];
										v75 = v75 + (498 - (73 + 424));
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[311 - (93 + 215)]][v83[13 - 9]];
										v2242 = 1937 - (1756 + 179);
									end
									if (v2242 == (1691 - (550 + 1129))) then
										v83 = v71[v75];
										v81[v83[109 - (57 + 50)]] = v81[v83[632 - (30 + 599)]][v83[1 + 3]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v2248 = v83[920 - (794 + 124)];
										v81[v2248] = v81[v2248](v81[v2248 + 1 + 0]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2247 = v83[3];
										v2242 = 25 - 12;
									end
									if (v2242 == 11) then
										v83 = v71[v75];
										v81[v83[1929 - (1299 + 628)]] = v81[v83[5 - 2]][v83[10 - 6]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[8 - 5]][v83[1449 - (335 + 1110)]];
										v75 = v75 + 1 + 0;
										v2242 = 39 - 27;
									end
									if (v2242 == 10) then
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[335 - (268 + 64)]][v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1280 - (243 + 1035)]] = v81[v83[7 - 4]][v83[18 - 14]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3 + 0]][v81[v83[4 - 0]]];
										v75 = v75 + (101 - (90 + 10));
										v2242 = 11;
									end
									if (v2242 == (810 - (209 + 595))) then
										v81[v83[807 - (603 + 202)]] = v81[v83[2 + 1]][v83[12 - 8]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[3]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[8 - 5]][v81[v83[4]]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v2242 = 286 - (174 + 105);
									end
									if (v2242 == (26 - 18)) then
										v81[v83[915 - (532 + 381)]] = v81[v83[3 + 0]][v83[843 - (137 + 702)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v2248 = v83[2];
										v81[v2248] = v81[v2248](v81[v2248 + 1 + 0]);
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1888 - (1819 + 67)]] = v83[2 + 1];
										v75 = v75 + 1 + 0;
										v2242 = 1366 - (259 + 1098);
									end
									if (v2242 == (4 + 1)) then
										v81[v83[1 + 1]] = v62[v83[1 + 2]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[18 - 14]];
										v75 = v75 + (1707 - (667 + 1039));
										v83 = v71[v75];
										v81[v83[1021 - (274 + 745)]] = v62[v83[3 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2242 = 6;
									end
									if (v2242 == (439 - (288 + 142))) then
										v83 = v71[v75];
										v81[v83[1308 - (301 + 1005)]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[9 - 5]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1875 - (674 + 1199)]] = v62[v83[3 + 0]];
										v75 = v75 + 1;
										v2242 = 6 + 4;
									end
									if ((3610 >= 350) and (v2242 == (20 - 13))) then
										v81[v83[8 - 6]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + (446 - (92 + 353));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[7 - 4]][v83[7 - 3]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[4 - 1]][v83[8 - 4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2242 = 34 - 26;
									end
									if (v2242 == (13 + 1)) then
										for v9669 = v2248, v76 do
											v2243 = v2243 + (1 - 0);
											v81[v9669] = v2244[v2243];
										end
										v75 = v75 + (266 - (34 + 231));
										v83 = v71[v75];
										v2248 = v83[1319 - (930 + 387)];
										v81[v2248](v13(v81, v2248 + 1, v76));
										break;
									end
									if (v2242 == (3 + 0)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[10 - 6]];
										v75 = v75 + (698 - (389 + 308));
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[6 - 3]][v83[11 - 7]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[324 - (125 + 197)]] = v81[v83[3]][v83[1001 - (339 + 658)]];
										v2242 = 9 - 5;
									end
								end
							end
						elseif ((v84 > 100) or (49 >= 1991)) then
							v81[v83[3 - 1]] = not v81[v83[3]];
						else
							v81[v83[1350 - (743 + 605)]] = v83[3 + 0] ~= (0 + 0);
						end
					elseif ((v84 <= (568 - 416)) or (424 >= 1455)) then
						if (v84 <= 126) then
							if (v84 <= (347 - 234)) then
								if ((v84 <= (71 + 36)) or (712 >= 1698)) then
									if ((2952 < 3879) and (v84 <= (353 - (197 + 52)))) then
										if (v84 <= (219 - 117)) then
											local v424 = 0 - 0;
											local v425;
											local v426;
											while true do
												if (v424 == 4) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v81[v83[2 + 0]] = v83[2 + 1] ~= (0 - 0);
													break;
												end
												if ((v424 == (10 - 7)) or (200 > 1915)) then
													v81[v83[4 - 2]] = v83[3];
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[2]] = v83[3 - 0];
													v424 = 1101 - (97 + 1000);
												end
												if (v424 == (3 - 2)) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v426 = v83[1847 - (143 + 1702)];
													v425 = v81[v83[5 - 2]];
													v424 = 371 - (40 + 329);
												end
												if ((4664 >= 2945) and (v424 == 0)) then
													v425 = nil;
													v426 = nil;
													v426 = v83[2 + 0];
													v81[v426](v13(v81, v426 + 1 + 0, v83[3 - 0]));
													v424 = 1 + 0;
												end
												if ((3215 >= 2115) and ((67 - (9 + 56)) == v424)) then
													v81[v426 + 1] = v425;
													v81[v426] = v425[v83[588 - (531 + 53)]];
													v75 = v75 + 1;
													v83 = v71[v75];
													v424 = 3 + 0;
												end
											end
										elseif (v84 == (876 - (89 + 684))) then
											local v2251 = 0 + 0;
											local v2252;
											while true do
												if (v2251 == 0) then
													v2252 = v83[1 + 1];
													v81[v2252](v81[v2252 + 1]);
													break;
												end
											end
										else
											local v2253 = 0 + 0;
											local v2254;
											while true do
												if (2 == v2253) then
													v83 = v71[v75];
													v81[v83[2 - 0]] = v83[3 + 0];
													v75 = v75 + 1 + 0;
													v2253 = 616 - (238 + 375);
												end
												if (v2253 == (0 + 0)) then
													v2254 = nil;
													v81[v83[2 - 0]] = v83[3];
													v75 = v75 + 1 + 0;
													v2253 = 2 - 1;
												end
												if (v2253 == (20 - 12)) then
													v75 = v75 + (2 - 1);
													v83 = v71[v75];
													v81[v83[3 - 1]][v83[3]] = v81[v83[14 - 10]];
													break;
												end
												if (v2253 == (8 - 1)) then
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[1 + 1]][v83[3]] = v83[2 + 2];
													v2253 = 470 - (428 + 34);
												end
												if (v2253 == (2 + 4)) then
													v75 = v75 + (1 - 0);
													v83 = v71[v75];
													v81[v83[4 - 2]][v83[6 - 3]] = v83[922 - (223 + 695)];
													v2253 = 21 - 14;
												end
												if (v2253 == (512 - (329 + 182))) then
													v83 = v71[v75];
													v81[v83[1 + 1]] = v83[4 - 1];
													v75 = v75 + 1;
													v2253 = 1 + 1;
												end
												if (4 == v2253) then
													v75 = v75 + 1 + 0;
													v83 = v71[v75];
													v81[v83[2 + 0]][v83[6 - 3]] = v81[v83[4]];
													v2253 = 5;
												end
												if (v2253 == (6 - 1)) then
													v75 = v75 + 1;
													v83 = v71[v75];
													v81[v83[1202 - (177 + 1023)]][v83[5 - 2]] = v83[2 + 2];
													v2253 = 6;
												end
												if (v2253 == (6 - 3)) then
													v83 = v71[v75];
													v2254 = v83[1467 - (120 + 1345)];
													v81[v2254] = v81[v2254](v13(v81, v2254 + (338 - (8 + 329)), v83[3]));
													v2253 = 129 - (19 + 106);
												end
											end
										end
									elseif (v84 <= (374 - 269)) then
										local v427 = 0 - 0;
										local v428;
										while true do
											if (v427 == (5 + 0)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v75 = v83[8 - 5];
												break;
											end
											if ((2 - 1) == v427) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[7 - 5]] = v81[v83[6 - 3]];
												v427 = 1 + 1;
											end
											if ((v427 == (1505 - (957 + 546))) or (1090 >= 1693)) then
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v81[v83[1 + 1]] = {};
												v427 = 1 + 2;
											end
											if ((4770 == 4770) and (v427 == (2 + 1))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1 + 1]] = v81[v83[706 - (227 + 476)]];
												v427 = 4;
											end
											if (v427 == (0 - 0)) then
												v428 = nil;
												v428 = v83[3 - 1];
												v81[v428] = v81[v428](v81[v428 + (1 - 0)]);
												v427 = 1 - 0;
											end
											if ((v427 == 4) or (682 == 130)) then
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[956 - (166 + 788)]] = v83[989 - (21 + 965)];
												v427 = 701 - (127 + 569);
											end
										end
									elseif ((2397 <= 4114) and (v84 > 106)) then
										local v2255;
										local v2256;
										v2256 = v83[2 + 0];
										v2255 = v81[v83[1 + 2]];
										v81[v2256 + 1 + 0] = v2255;
										v81[v2256] = v2255[v83[4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v2256 = v83[2 + 0];
										v81[v2256] = v81[v2256](v81[v2256 + (2 - 1)]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v62[v83[1 + 2]] = v81[v83[1294 - (1162 + 130)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3 + 0]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v2256 = v83[2];
										v2255 = v81[v83[939 - (889 + 47)]];
										v81[v2256 + 1 + 0] = v2255;
										v81[v2256] = v2255[v83[1268 - (1153 + 111)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v2256 = v83[2];
										v81[v2256](v81[v2256 + 1 + 0]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
									else
										local v2271 = 0 + 0;
										local v2272;
										while true do
											if (v2271 == (2 + 1)) then
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[5 - 2];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2271 = 100 - (23 + 73);
											end
											if (v2271 == (287 - (26 + 259))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v83[4 - 1];
												v75 = v75 + (3 - 2);
												v2271 = 1632 - (1094 + 535);
											end
											if ((v2271 == (1 + 5)) or (3601 < 3134)) then
												v75 = v75 + (1877 - (1554 + 322));
												v83 = v71[v75];
												v81[v83[1427 - (989 + 436)]][v83[1181 - (816 + 362)]] = v81[v83[7 - 3]];
												v75 = v75 + 1;
												v2271 = 17 - 10;
											end
											if (v2271 == 7) then
												v83 = v71[v75];
												v75 = v83[3];
												break;
											end
											if ((v2271 == (18 - 13)) or (903 <= 760)) then
												v81[v2272] = v81[v2272](v13(v81, v2272 + 1, v83[4 - 1]));
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[8 - 6]] = v81[v83[1 + 2]] * v81[v83[4]];
												v2271 = 6;
											end
											if ((763 - (86 + 677)) == v2271) then
												v2272 = nil;
												v81[v83[2]] = v81[v83[2 + 1]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2271 = 1 + 0;
											end
											if ((v2271 == (1030 - (263 + 763))) or (3329 <= 1105)) then
												v81[v83[2]] = v83[3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2272 = v83[860 - (649 + 209)];
												v2271 = 22 - 17;
											end
											if (v2271 == (732 - (643 + 88))) then
												v81[v83[1771 - (54 + 1715)]] = v62[v83[11 - 8]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[5 - 2]][v83[4 + 0]];
												v2271 = 1 + 1;
											end
										end
									end
								elseif (v84 <= (417 - 307)) then
									if ((3950 == 3950) and (v84 <= (1491 - (132 + 1251)))) then
										local v429 = 0 + 0;
										while true do
											if ((3892 == 3892) and (v429 == (4 - 2))) then
												v81[v83[2 + 0]] = v81[v83[3]][v81[v83[462 - (185 + 273)]]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v429 = 8 - 5;
											end
											if (v429 == (1 + 0)) then
												v81[v83[1226 - (361 + 863)]] = v81[v83[8 - 5]][v83[4]];
												v75 = v75 + (1328 - (443 + 884));
												v83 = v71[v75];
												v429 = 4 - 2;
											end
											if (v429 == (1 + 3)) then
												if v81[v83[2]] then
													v75 = v75 + (1 - 0);
												else
													v75 = v83[3 + 0];
												end
												break;
											end
											if ((1909 > 1047) and (v429 == (3 + 0))) then
												v81[v83[4 - 2]] = v62[v83[750 - (16 + 731)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v429 = 4;
											end
											if ((v429 == (0 + 0)) or (2741 == 2425)) then
												v81[v83[2]] = v81[v83[3]][v83[3 + 1]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v429 = 761 - (527 + 233);
											end
										end
									elseif (v84 > 109) then
										local v2273 = 0 + 0;
										local v2274;
										local v2275;
										while true do
											if ((4769 <= 4858) and (v2273 == 1)) then
												v81[v2275](v13(v81, v2275 + (2 - 1), v83[3 + 0]));
												v75 = v75 + (1786 - (1107 + 678));
												v83 = v71[v75];
												v2273 = 2 + 0;
											end
											if (v2273 == (3 + 0)) then
												v62[v83[3]] = v81[v83[52 - (4 + 46)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2273 = 4;
											end
											if (v2273 == (26 - 19)) then
												v81[v83[3 - 1]] = v83[3];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2273 = 6 + 2;
											end
											if ((16 - 8) == v2273) then
												v81[v83[2 - 0]] = v83[1399 - (1262 + 134)] ~= (0 - 0);
												break;
											end
											if ((3981 <= 4838) and ((1 + 3) == v2273)) then
												v2275 = v83[2 + 0];
												v2274 = v81[v83[798 - (383 + 412)]];
												v81[v2275 + 1 + 0] = v2274;
												v2273 = 1 + 4;
											end
											if (6 == v2273) then
												v81[v83[1 + 1]] = v83[1 + 2];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2273 = 7;
											end
											if ((2573 >= 1537) and (v2273 == (0 - 0))) then
												v2274 = nil;
												v2275 = nil;
												v2275 = v83[2 + 0];
												v2273 = 1;
											end
											if (v2273 == 5) then
												v81[v2275] = v2274[v83[11 - 7]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2273 = 7 - 1;
											end
											if (v2273 == (5 - 3)) then
												v81[v83[2]] = v83[1 + 2];
												v75 = v75 + (708 - (667 + 40));
												v83 = v71[v75];
												v2273 = 3;
											end
										end
									else
										local v2276;
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + (1311 - (436 + 874));
										v83 = v71[v75];
										v81[v83[1608 - (762 + 844)]] = v81[v83[4 - 1]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[478 - (209 + 267)]] = v81[v83[5 - 2]][v81[v83[11 - 7]]];
										v75 = v75 + (1712 - (1611 + 100));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[787 - (14 + 770)]][v83[1788 - (1165 + 619)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[383 - (229 + 152)]] = v81[v83[3]][v83[4]];
										v75 = v75 + (195 - (107 + 87));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[2 + 1]][v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2276 = v83[2];
										v81[v2276](v81[v2276 + 1]);
									end
								elseif (v84 <= (530 - 419)) then
									local v430;
									v81[v83[7 - 5]] = v62[v83[3 + 0]];
									v75 = v75 + (15 - (13 + 1));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[1062 - (987 + 71)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[702 - (514 + 185)]][v83[1 + 3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[7 - 5]] = v81[v83[1507 - (771 + 733)]][v83[4]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v430 = v83[3 - 1];
									v81[v430] = v81[v430](v81[v430 + 1]);
									v75 = v75 + (1168 - (407 + 760));
									v83 = v71[v75];
									if (v81[v83[2 + 0]] or (990 > 4901)) then
										v75 = v75 + 1 + 0;
									else
										v75 = v83[3 + 0];
									end
								elseif (v84 > (1966 - (169 + 1685))) then
									local v2294;
									v81[v83[1 + 1]] = v81[v83[394 - (41 + 350)]][v83[10 - 6]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[8 - 6]] = v81[v83[6 - 3]][v83[3 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[4]];
									v75 = v75 + (888 - (790 + 97));
									v83 = v71[v75];
									v81[v83[8 - 6]] = v81[v83[1 + 2]][v83[2 + 2]];
									v75 = v75 + (246 - (235 + 10));
									v83 = v71[v75];
									v2294 = v83[2 + 0];
									v81[v2294] = v81[v2294](v13(v81, v2294 + 1, v83[3]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1186 - (887 + 296)]];
									v75 = v75 + (1046 - (512 + 533));
									v83 = v71[v75];
									v81[v83[1426 - (662 + 762)]] = v62[v83[680 - (334 + 343)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[491 - (198 + 291)]] = v81[v83[1 + 2]][v83[578 - (141 + 433)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v81[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[779 - (227 + 550)]] = v81[v83[3]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v2294 = v83[2];
									v81[v2294] = v81[v2294](v13(v81, v2294 + (2 - 1), v83[106 - (72 + 31)]));
									v75 = v75 + (349 - (89 + 259));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[5 - 2];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v75 = v83[5 - 2];
								else
									local v2317;
									v81[v83[1405 - (1333 + 70)]] = v81[v83[1835 - (701 + 1131)]][v83[131 - (55 + 72)]];
									v75 = v75 + (157 - (99 + 57));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1582 - (1243 + 336)];
									v75 = v75 + (1330 - (774 + 555));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[802 - (150 + 649)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2317 = v83[2 - 0];
									v81[v2317] = v81[v2317](v13(v81, v2317 + (1 - 0), v83[1987 - (1122 + 862)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]][v83[1 + 2]] = v81[v83[7 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[1 + 2]] = v83[747 - (549 + 194)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[7 - 5]][v83[1 + 2]] = v81[v83[4]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[10 - 7];
								end
							elseif (v84 <= (1822 - (453 + 1250))) then
								if (v84 <= (329 - 213)) then
									if (v84 <= (109 + 5)) then
										local v441 = 575 - (203 + 372);
										local v442;
										local v443;
										local v444;
										local v445;
										while true do
											if ((1 + 2) == v441) then
												v83 = v71[v75];
												v81[v83[5 - 3]] = v61[v83[1385 - (978 + 404)]];
												v75 = v75 + (3 - 2);
												v441 = 4 + 0;
											end
											if (v441 == 2) then
												v83 = v71[v75];
												v81[v83[2]] = v61[v83[321 - (56 + 262)]];
												v75 = v75 + 1;
												v441 = 2 + 1;
											end
											if ((4967 > 1225) and (v441 == 1)) then
												v445 = nil;
												v81[v83[2]] = v62[v83[117 - (108 + 6)]];
												v75 = v75 + 1 + 0;
												v441 = 2 + 0;
											end
											if ((v441 == 0) or (3934 < 1319)) then
												v442 = nil;
												v443 = nil;
												v442, v444 = nil;
												v441 = 1953 - (653 + 1299);
											end
											if (v441 == 8) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v75 = v83[3];
												break;
											end
											if (v441 == (3 + 2)) then
												v76 = (v444 + v445) - (2 - 1);
												v443 = 1922 - (1042 + 880);
												for v6573 = v445, v76 do
													local v6574 = 0 + 0;
													while true do
														if (((1002 - (16 + 986)) == v6574) or (4602 <= 3075)) then
															v443 = v443 + 1;
															v81[v6573] = v442[v443];
															break;
														end
													end
												end
												v441 = 1224 - (700 + 518);
											end
											if ((v441 == (22 - 15)) or (3362 <= 2727)) then
												v442 = {v81[v445](v13(v81, v445 + (1512 - (617 + 894)), v76))};
												v443 = 0 - 0;
												for v6575 = v445, v83[462 - (271 + 187)] do
													v443 = v443 + (1585 - (731 + 853));
													v81[v6575] = v442[v443];
												end
												v441 = 27 - 19;
											end
											if (v441 == (1527 - (199 + 1322))) then
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v445 = v83[2 + 0];
												v441 = 1667 - (1291 + 369);
											end
											if (v441 == (1 + 3)) then
												v83 = v71[v75];
												v445 = v83[1 + 1];
												v442, v444 = v74(v81[v445](v81[v445 + 1 + 0]));
												v441 = 1 + 4;
											end
										end
									elseif (v84 > (800 - (561 + 124))) then
										local v2337 = 0 + 0;
										local v2338;
										while true do
											if (v2337 == (858 - (25 + 828))) then
												v2338 = v83[4 - 2];
												v81[v2338] = v81[v2338](v13(v81, v2338 + 1, v83[4 - 1]));
												v75 = v75 + (591 - (99 + 491));
												v83 = v71[v75];
												v81[v83[50 - (18 + 30)]][v83[6 - 3]] = v81[v83[7 - 3]];
												v2337 = 9 - 3;
											end
											if ((v2337 == 6) or (1949 > 3478)) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[6 - 4]] = v62[v83[735 - (501 + 231)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2337 = 7 + 0;
											end
											if (v2337 == (1702 - (470 + 1228))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[3];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v2337 = 691 - (537 + 149);
											end
											if ((v2337 == 2) or (1487 > 1901)) then
												v81[v83[2 - 0]] = v62[v83[2 + 1]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[6 - 4]] = v81[v83[3]][v83[4]];
												v75 = v75 + (2 - 1);
												v2337 = 3;
											end
											if (v2337 == 1) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v61[v83[3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v2337 = 1 + 1;
											end
											if (v2337 == (2 + 1)) then
												v83 = v71[v75];
												v81[v83[2]] = v83[2 + 1];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v83[3 + 0];
												v2337 = 4;
											end
											if ((2992 >= 2991) and (v2337 == 7)) then
												v81[v83[2]] = v81[v83[1 + 2]][v83[3 + 1]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v81[v83[582 - (134 + 445)]][v83[7 - 3]];
												v75 = v75 + 1 + 0;
												v2337 = 5 + 3;
											end
											if (v2337 == 0) then
												v2338 = nil;
												v81[v83[7 - 5]] = v81[v83[3]][v83[264 - (36 + 224)]];
												v75 = v75 + (1861 - (1033 + 827));
												v83 = v71[v75];
												v81[v83[1848 - (1002 + 844)]][v83[1353 - (1126 + 224)]] = v83[4];
												v2337 = 1 + 0;
											end
											if (8 == v2337) then
												v83 = v71[v75];
												v62[v83[3 + 0]] = v81[v83[6 - 4]];
												v75 = v75 + (65 - (48 + 16));
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[14 - 11];
												break;
											end
										end
									else
										local v2339;
										local v2340;
										local v2341;
										v81[v83[6 - 4]] = v62[v83[1 + 2]];
										v75 = v75 + (1090 - (910 + 179));
										v83 = v71[v75];
										v2341 = v83[3 - 1];
										v2340 = v81[v83[5 - 2]];
										v81[v2341 + (1380 - (933 + 446))] = v2340;
										v81[v2341] = v2340[v83[2 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1526 - (248 + 1276)]] = v83[3 + 0];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[9 - 6];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[6 - 4]] = v62[v83[1548 - (151 + 1394)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[946 - (929 + 15)]] = v81[v83[1999 - (1173 + 823)]][v83[5 - 1]];
										v75 = v75 + (1777 - (482 + 1294));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[3]][v83[2 + 2]];
										v75 = v75 + (1307 - (1125 + 181));
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[2 + 1]][v83[5 - 1]];
										v75 = v75 + (1190 - (626 + 563));
										v83 = v71[v75];
										v81[v83[1252 - (153 + 1097)]] = v83[3];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v2340 = v83[2 + 1];
										v2339 = v81[v2340];
										for v5689 = v2340 + (2 - 1), v83[3 + 1] do
											v2339 = v2339 .. v81[v5689];
										end
										v81[v83[2]] = v2339;
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[3 + 0];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2341 = v83[2 + 0];
										v81[v2341](v13(v81, v2341 + 1, v83[3]));
										v75 = v75 + (1158 - (199 + 958));
										v83 = v71[v75];
										do
											return;
										end
									end
								elseif (v84 <= 117) then
									local v446;
									local v447;
									v62[v83[3]] = v81[v83[2 + 0]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v62[v83[1179 - (1169 + 7)]];
									v75 = v75 + (1874 - (751 + 1122));
									v83 = v71[v75];
									v447 = v83[1 + 1];
									v446 = v81[v83[3 + 0]];
									v81[v447 + 1 + 0] = v446;
									v81[v447] = v446[v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v447 = v83[1 + 1];
									v81[v447](v81[v447 + (1 - 0)]);
									v75 = v75 + (1182 - (589 + 592));
									v83 = v71[v75];
									v81[v83[3 - 1]] = v62[v83[1 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v447 = v83[26 - (13 + 11)];
									v446 = v81[v83[2 + 1]];
									v81[v447 + 1] = v446;
									v81[v447] = v446[v83[1 + 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v447 = v83[2];
									v81[v447](v81[v447 + (1261 - (684 + 576))]);
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v447 = v83[2];
									v446 = v81[v83[3 - 0]];
									v81[v447 + 1 + 0] = v446;
									v81[v447] = v446[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v447 = v83[2 + 0];
									v81[v447](v81[v447 + 1 + 0]);
								elseif ((v84 == 118) or (3855 == 4105)) then
									v61[v83[1 + 2]] = v81[v83[1850 - (230 + 1618)]];
								elseif (v81[v83[2 + 0]] == v81[v83[4]]) then
									v75 = v75 + 1;
								else
									v75 = v83[1 + 2];
								end
							elseif (v84 <= (117 + 5)) then
								if (v84 <= (323 - (131 + 72))) then
									local v468;
									v81[v83[1 + 1]] = v62[v83[207 - (144 + 60)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[8 - 6]] = v81[v83[4 - 1]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v81[v83[1 + 2]];
									v75 = v75 + (1923 - (523 + 1399));
									v83 = v71[v75];
									v468 = v83[2];
									v81[v468] = v81[v468](v81[v468 + 1 + 0]);
									v75 = v75 + (405 - (72 + 332));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[979 - (269 + 707)]] - v81[v83[7 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3]] * v81[v83[134 - (123 + 7)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[3 + 0]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[1091 - (38 + 1050)]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v468 = v83[825 - (426 + 397)];
									v81[v468] = v81[v468](v81[v468 + (1407 - (751 + 655))]);
								elseif ((2080 < 4731) and (v84 > (242 - 121))) then
									local v2369;
									local v2370;
									v2370 = v83[1 + 1];
									v81[v2370](v13(v81, v2370 + 1, v83[3]));
									v75 = v75 + (1246 - (39 + 1206));
									v83 = v71[v75];
									v81[v83[2]] = v83[8 - 5];
									v75 = v75 + (842 - (566 + 275));
									v83 = v71[v75];
									v62[v83[938 - (167 + 768)]] = v81[v83[2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2370 = v83[2 - 0];
									v2369 = v81[v83[1 + 2]];
									v81[v2370 + 1 + 0] = v2369;
									v81[v2370] = v2369[v83[4 - 0]];
									v75 = v75 + (16 - (8 + 7));
									v83 = v71[v75];
									v81[v83[1685 - (1510 + 173)]] = v83[4 - 1];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[256 - (30 + 223)];
									v75 = v75 + (1257 - (300 + 956));
									v83 = v71[v75];
									v81[v83[124 - (22 + 100)]] = v83[3] ~= (0 - 0);
								else
									local v2385;
									local v2386;
									local v2387;
									v81[v83[2]] = v62[v83[285 - (47 + 235)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v2387 = v83[2 + 0];
									v2386 = v81[v83[3]];
									v81[v2387 + 1] = v2386;
									v81[v2387] = v2386[v83[4]];
									v75 = v75 + (487 - (21 + 465));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v62[v83[1220 - (553 + 664)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[80 - (73 + 5)]] = v81[v83[3]][v83[1719 - (1128 + 587)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[692 - (558 + 132)]] = v81[v83[7 - 4]][v83[11 - 7]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[2 + 1];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2386 = v83[4 - 1];
									v2385 = v81[v2386];
									for v5690 = v2386 + 1 + 0, v83[3 + 1] do
										v2385 = v2385 .. v81[v5690];
									end
									v81[v83[773 - (294 + 477)]] = v2385;
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[6 - 3];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v2387 = v83[1 + 1];
									v81[v2387](v13(v81, v2387 + 1 + 0, v83[6 - 3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									do
										return;
									end
								end
							elseif ((1285 < 2977) and (v84 <= (1106 - (97 + 885)))) then
								if (v84 == (58 + 65)) then
									local v2412;
									v81[v83[2 - 0]]();
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[367 - (271 + 94)]] = v62[v83[1606 - (777 + 826)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[1359 - (117 + 1238)]];
									v75 = v75 + (1716 - (686 + 1029));
									v83 = v71[v75];
									v81[v83[1358 - (1074 + 282)]] = v81[v83[1620 - (1359 + 258)]][v83[8 - 4]];
									v75 = v75 + (1936 - (1730 + 205));
									v83 = v71[v75];
									v81[v83[530 - (67 + 461)]] = v81[v83[4 - 1]][v83[5 - 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[6 - 3]][v83[1 + 3]];
									v75 = v75 + (630 - (129 + 500));
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[1714 - (1157 + 554)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[609 - (82 + 525)]] = v81[v83[3 + 0]][v83[8 - 4]];
									v75 = v75 + (1624 - (948 + 675));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[855 - (406 + 447)]] = v81[v83[120 - (91 + 26)]][v81[v83[13 - 9]]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[988 - (968 + 18)]] = v81[v83[3 + 0]][v83[4 + 0]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[269 - (172 + 95)]] = v81[v83[3]][v83[13 - 9]];
									v75 = v75 + (266 - (260 + 5));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[10 - 6]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[822 - (265 + 554)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1573 - (1440 + 131)]] = v81[v83[8 - 5]][v83[1399 - (253 + 1142)]];
									v75 = v75 + (254 - (133 + 120));
									v83 = v71[v75];
									v81[v83[2]] = v83[5 - 2];
									v75 = v75 + (1957 - (809 + 1147));
									v83 = v71[v75];
									v81[v83[499 - (178 + 319)]] = v83[5 - 2];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2412 = v83[2];
									v81[v2412] = v81[v2412](v13(v81, v2412 + (1271 - (1255 + 15)), v83[3]));
									v75 = v75 + (1543 - (1221 + 321));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[7 - 4]] + v81[v83[4 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[7 - 5]][v83[11 - 8]] = v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[6 - 3];
								else
									local v2447 = 407 - (204 + 203);
									local v2448;
									while true do
										if ((3783 >= 2879) and (v2447 == (83 - (48 + 30)))) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[1967 - (1472 + 492)]][v83[10 - 6]];
											v75 = v75 + 1;
											v2447 = 4 + 2;
										end
										if (v2447 == (615 - (258 + 353))) then
											v83 = v71[v75];
											v81[v83[1996 - (1382 + 612)]] = v81[v83[3 + 0]][v81[v83[1 + 3]]];
											v75 = v75 + 1 + 0;
											v2447 = 14 - 9;
										end
										if ((v2447 == (0 + 0)) or (2991 == 3601)) then
											v2448 = nil;
											v81[v83[2]] = {};
											v75 = v75 + 1;
											v2447 = 120 - (35 + 84);
										end
										if (v2447 == 8) then
											v75 = v75 + (216 - (75 + 140));
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[10 - 7]];
											v2447 = 9;
										end
										if ((9 == v2447) or (3103 > 3714)) then
											v75 = v75 + (1800 - (923 + 876));
											v83 = v71[v75];
											v81[v83[5 - 3]] = v81[v83[3]][v83[816 - (284 + 528)]];
											break;
										end
										if (v2447 == (1022 - (867 + 152))) then
											v83 = v71[v75];
											v81[v83[1108 - (709 + 397)]] = v81[v83[3]][v83[4]];
											v75 = v75 + 1;
											v2447 = 14 - 10;
										end
										if ((v2447 == (43 - (21 + 15))) or (2836 >= 4358)) then
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[11 - 7]];
											v2447 = 19 - 11;
										end
										if ((v2447 == (1 + 0)) or (4969 == 563)) then
											v83 = v71[v75];
											v81[v83[137 - (97 + 38)]] = v62[v83[83 - (52 + 28)]];
											v75 = v75 + 1 + 0;
											v2447 = 2;
										end
										if (v2447 == (851 - (59 + 790))) then
											v83 = v71[v75];
											v81[v83[2]] = v61[v83[3 + 0]];
											v75 = v75 + 1 + 0;
											v2447 = 943 - (467 + 473);
										end
										if ((v2447 == (29 - 23)) or (1674 >= 2629)) then
											v83 = v71[v75];
											v2448 = v83[5 - 3];
											v81[v2448] = v81[v2448](v81[v2448 + (2 - 1)]);
											v2447 = 17 - 10;
										end
									end
								end
							elseif (v84 == (50 + 75)) then
								local v2449;
								local v2450;
								v81[v83[2]] = v81[v83[6 - 3]][v83[15 - 11]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[240 - (58 + 179)]][v83[4]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v2450 = v83[2];
								v2449 = v81[v83[1256 - (677 + 576)]];
								v81[v2450 + 1] = v2449;
								v81[v2450] = v2449[v83[2 + 2]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[222 - (88 + 132)]] = v83[3 + 0];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v2450 = v83[2];
								v81[v2450] = v81[v2450](v13(v81, v2450 + 1, v83[10 - 7]));
							else
								local v2465 = 291 - (12 + 279);
								local v2466;
								local v2467;
								while true do
									if ((v2465 == (3 - 1)) or (3404 <= 480)) then
										v83 = v71[v75];
										v2467 = v83[1 + 1];
										v81[v2467] = v81[v2467](v13(v81, v2467 + (948 - (652 + 295)), v83[1 + 2]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2465 = 992 - (848 + 141);
									end
									if ((4781 < 4798) and ((741 - (372 + 368)) == v2465)) then
										v81[v2467] = v2466[v83[3 + 1]];
										v75 = v75 + (1131 - (542 + 588));
										v83 = v71[v75];
										v81[v83[2]] = v83[821 - (6 + 812)];
										v75 = v75 + 1;
										v2465 = 1707 - (1599 + 106);
									end
									if (v2465 == (16 - 10)) then
										v81[v2467] = v2466[v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[11 - 8];
										v75 = v75 + (1 - 0);
										v2465 = 2 + 5;
									end
									if (v2465 == (1 + 2)) then
										v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[1 + 3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1931 - (1690 + 239)]] = v81[v83[10 - 7]][v83[3 + 1]];
										v75 = v75 + 1;
										v2465 = 8 - 4;
									end
									if (v2465 == (9 - 5)) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1870 - (1736 + 132)]] = v81[v83[2 + 1]][v83[12 - 8]];
										v2465 = 23 - 18;
									end
									if ((3982 >= 1804) and (v2465 == (0 + 0))) then
										v2466 = nil;
										v2467 = nil;
										v2467 = v83[34 - (27 + 5)];
										v2466 = v81[v83[1 + 2]];
										v81[v2467 + 1 + 0] = v2466;
										v2465 = 1 + 0;
									end
									if (v2465 == (2 + 3)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v2467 = v83[2 + 0];
										v2466 = v81[v83[1120 - (771 + 346)]];
										v81[v2467 + (1635 - (1577 + 57))] = v2466;
										v2465 = 10 - 4;
									end
									if ((1090 - (684 + 396)) == v2465) then
										v81[v2467](v81[v2467 + (2 - 1)]);
										v75 = v75 + (1197 - (700 + 496));
										v83 = v71[v75];
										v75 = v83[3 + 0];
										break;
									end
									if (v2465 == (260 - (65 + 187))) then
										v81[v83[941 - (827 + 112)]] = v81[v83[3 + 0]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v2467 = v83[5 - 3];
										v2466 = v81[v83[14 - 11]];
										v2465 = 2 + 7;
									end
									if (v2465 == 9) then
										v81[v2467 + 1 + 0] = v2466;
										v81[v2467] = v2466[v83[1200 - (551 + 645)]];
										v75 = v75 + (344 - (166 + 177));
										v83 = v71[v75];
										v2467 = v83[1858 - (1361 + 495)];
										v2465 = 27 - 17;
									end
									if (v2465 == (4 + 3)) then
										v83 = v71[v75];
										v2467 = v83[4 - 2];
										v81[v2467] = v81[v2467](v13(v81, v2467 + 1 + 0, v83[227 - (148 + 76)]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v2465 = 29 - 21;
									end
								end
							end
						elseif (v84 <= (375 - 236)) then
							if ((2750 == 2750) and (v84 <= (82 + 50))) then
								if (v84 <= 129) then
									if (v84 <= (1869 - (735 + 1007))) then
										local v484;
										local v485;
										local v484, v486;
										local v487;
										local v488;
										v81[v83[281 - (111 + 168)]] = v62[v83[2 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v488 = v83[2];
										v487 = v81[v83[3]];
										v81[v488 + 1 + 0] = v487;
										v81[v488] = v487[v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v488 = v83[1 + 1];
										v484, v486 = v74(v81[v488](v81[v488 + 1]));
										v76 = (v486 + v488) - (4 - 3);
										v485 = 0 + 0;
										for v1481 = v488, v76 do
											v485 = v485 + 1;
											v81[v1481] = v484[v485];
										end
										v75 = v75 + 1;
										v83 = v71[v75];
										v488 = v83[934 - (147 + 785)];
										v484 = {v81[v488](v13(v81, v488 + (2 - 1), v76))};
										v485 = 0 + 0;
										for v1484 = v488, v83[1915 - (1790 + 121)] do
											local v1485 = 0 - 0;
											while true do
												if (v1485 == (1539 - (259 + 1280))) then
													v485 = v485 + (1585 - (160 + 1424));
													v81[v1484] = v484[v485];
													break;
												end
											end
										end
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v75 = v83[3];
									elseif (v84 == (41 + 87)) then
										local v2468 = 770 - (479 + 291);
										while true do
											if (v2468 == (1 - 0)) then
												v75 = v75 + (972 - (569 + 402));
												v83 = v71[v75];
												v81[v83[1307 - (635 + 670)]] = v81[v83[6 - 3]][v83[15 - 11]];
												v75 = v75 + (599 - (42 + 556));
												v2468 = 1403 - (1246 + 155);
											end
											if ((v2468 == 2) or (453 > 697)) then
												v83 = v71[v75];
												v81[v83[734 - (31 + 701)]] = v81[v83[9 - 6]][v83[503 - (393 + 106)]];
												v75 = v75 + (1172 - (727 + 444));
												v83 = v71[v75];
												v2468 = 8 - 5;
											end
											if (v2468 == (2 + 1)) then
												v81[v83[655 - (269 + 384)]] = v81[v83[1572 - (598 + 971)]][v81[v83[2 + 2]]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[6 - 4]] = v83[14 - 11];
												break;
											end
											if ((0 - 0) == v2468) then
												v62[v83[1448 - (800 + 645)]] = v81[v83[2]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[792 - (687 + 103)]] = v62[v83[3]];
												v2468 = 1163 - (142 + 1020);
											end
										end
									else
										local v2469;
										local v2470;
										v81[v83[2]] = v81[v83[3]][v83[9 - 5]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[515 - (306 + 207)]] = v81[v83[1407 - (112 + 1292)]][v83[4 + 0]];
										v75 = v75 + (953 - (587 + 365));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1718 - (829 + 886)]][v83[9 - 5]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2470 = v83[7 - 5];
										v2469 = v81[v83[3]];
										v81[v2470 + 1] = v2469;
										v81[v2470] = v2469[v83[12 - 8]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[4 - 1];
										v75 = v75 + (978 - (613 + 364));
										v83 = v71[v75];
										v2470 = v83[2 + 0];
										v81[v2470] = v81[v2470](v13(v81, v2470 + 1, v83[2 + 1]));
									end
								elseif (v84 <= (30 + 100)) then
									local v502;
									v81[v83[2]] = v62[v83[6 - 3]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[9 - 6]][v83[3 + 1]];
									v75 = v75 + (1940 - (1467 + 472));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[1550 - (1077 + 470)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[13 - 10];
									v75 = v75 + (430 - (12 + 417));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v502 = v83[2 - 0];
									v81[v502] = v81[v502](v13(v81, v502 + (1 - 0), v83[5 - 2]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[3]] = v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v61[v83[1108 - (924 + 181)]];
									v75 = v75 + (798 - (263 + 534));
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[3 + 0]] = v83[4];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v61[v83[2 + 1]];
								elseif (v84 == (838 - (562 + 145))) then
									local v2485;
									v81[v83[1 + 1]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[8 - 4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[13 - 10];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1879 - (1459 + 417)];
									v75 = v75 + (287 - (194 + 92));
									v83 = v71[v75];
									v81[v83[2]] = v83[1388 - (1057 + 328)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[8 - 5];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v2485 = v83[534 - (5 + 527)];
									v81[v2485] = v81[v2485](v13(v81, v2485 + 1 + 0, v83[783 - (342 + 438)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]][v83[3]] = v81[v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[5 - 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[5 - 2]][v83[6 - 2]];
								else
									local v2502;
									v2502 = v83[2];
									v81[v2502](v81[v2502 + 1]);
									v75 = v75 + (13 - (6 + 6));
									v83 = v71[v75];
									v81[v83[2]] = {};
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[5 - 3]][v83[2 + 1]] = v83[1257 - (206 + 1047)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1114 - (470 + 642)]] = v81[v83[1 + 2]];
									v75 = v75 + (1068 - (552 + 515));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
								end
							elseif (v84 <= (132 + 3)) then
								if ((2021 == 2021) and (v84 <= (72 + 61))) then
									local v522 = 0;
									local v523;
									local v524;
									while true do
										if (v522 == (5 + 3)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[3]][v83[1055 - (701 + 350)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v83[2 + 1];
											v522 = 13 - 4;
										end
										if ((v522 == (15 - 10)) or (1499 >= 4024)) then
											v83 = v71[v75];
											v81[v83[2 + 0]] = {};
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[3 + 0]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[1348 - (281 + 1065)]] = v61[v83[13 - 10]];
											v75 = v75 + (3 - 2);
											v522 = 1217 - (1114 + 97);
										end
										if ((936 < 4252) and (v522 == (0 - 0))) then
											v523 = nil;
											v524 = nil;
											v62[v83[1916 - (279 + 1634)]] = v81[v83[1282 - (1213 + 67)]];
											v75 = v75 + (192 - (65 + 126));
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v524 = v83[1087 - (189 + 896)];
											v522 = 1;
										end
										if ((2 + 10) == v522) then
											v75 = v75 + (1964 - (1872 + 91));
											v83 = v71[v75];
											v81[v83[4 - 2]] = v62[v83[3 + 0]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v524 = v83[2];
											v523 = v81[v83[3 + 0]];
											v81[v524 + 1] = v523;
											v81[v524] = v523[v83[4]];
											v522 = 6 + 7;
										end
										if ((v522 == (54 - 39)) or (4879 < 347)) then
											v524 = v83[2];
											v81[v524](v81[v524 + (77 - (22 + 54))]);
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[7 - 4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											if (v81[v83[1 + 1]] == v83[15 - 11]) then
												v75 = v75 + (1535 - (553 + 981));
											else
												v75 = v83[3 + 0];
											end
											break;
										end
										if (v522 == (6 + 3)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[3];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v524 = v83[1899 - (1320 + 577)];
											v81[v524] = v81[v524](v13(v81, v524 + (850 - (667 + 182)), v83[1291 - (1115 + 173)]));
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v522 = 10;
										end
										if (v522 == (4 + 0)) then
											v81[v83[2]] = v81[v83[1758 - (1375 + 380)]][v83[2 + 2]];
											v75 = v75 + (27 - (12 + 14));
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[3]][v83[8 - 4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v524 = v83[4 - 2];
											v81[v524] = v81[v524](v13(v81, v524 + 1, v83[8 - 5]));
											v75 = v75 + 1;
											v522 = 7 - 2;
										end
										if (v522 == (20 - 7)) then
											v75 = v75 + (732 - (354 + 377));
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v524 = v83[2];
											v81[v524] = v81[v524](v13(v81, v524 + (2 - 1), v83[3]));
											v75 = v75 + (1983 - (263 + 1719));
											v83 = v71[v75];
											v522 = 7 + 7;
										end
										if (v522 == (365 - (335 + 24))) then
											v83 = v71[v75];
											v81[v83[953 - (882 + 69)]] = v81[v83[1689 - (657 + 1029)]][v83[1204 - (685 + 515)]];
											v75 = v75 + (1639 - (745 + 893));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[775 - (274 + 498)]][v81[v83[4]]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
											v75 = v75 + (1607 - (1035 + 571));
											v522 = 3 + 4;
										end
										if ((v522 == (6 + 8)) or (1715 >= 2177)) then
											v81[v83[7 - 5]] = v81[v83[8 - 5]][v83[4 + 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v524 = v83[5 - 3];
											v523 = v81[v83[227 - (109 + 115)]];
											v81[v524 + 1] = v523;
											v81[v524] = v523[v83[1403 - (1047 + 352)]];
											v75 = v75 + (1766 - (852 + 913));
											v83 = v71[v75];
											v522 = 11 + 4;
										end
										if (2 == v522) then
											v75 = v75 + (1346 - (384 + 961));
											v83 = v71[v75];
											v524 = v83[4 - 2];
											v81[v524] = v81[v524](v81[v524 + (2 - 1)]);
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[594 - (591 + 1)]] = v62[v83[1 + 2]];
											v75 = v75 + (1471 - (218 + 1252));
											v83 = v71[v75];
											v522 = 3;
										end
										if (((1 + 0) == v522) or (4328 > 4557)) then
											v523 = v81[v83[3]];
											v81[v524 + (357 - (321 + 35))] = v523;
											v81[v524] = v523[v83[4]];
											v75 = v75 + (395 - (239 + 155));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[45 - (41 + 1)]];
											v75 = v75 + (201 - (80 + 120));
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
											v522 = 3 - 1;
										end
										if (v522 == (3 + 8)) then
											v83 = v71[v75];
											v524 = v83[2 + 0];
											v523 = v81[v83[14 - 11]];
											v81[v524 + (2 - 1)] = v523;
											v81[v524] = v523[v83[16 - 12]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v524 = v83[2];
											v81[v524](v81[v524 + 1 + 0]);
											v522 = 4 + 8;
										end
										if (v522 == (1 + 2)) then
											v81[v83[1228 - (165 + 1061)]] = v81[v83[3]][v83[4 + 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[3]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1645 - (596 + 1047)]] = v62[v83[3]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v522 = 4 + 0;
										end
										if (v522 == (10 - 3)) then
											v83 = v71[v75];
											v524 = v83[2];
											v81[v524] = v81[v524](v81[v524 + 1 + 0]);
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[739 - (185 + 552)]] = v81[v83[2 + 1]][v83[605 - (507 + 94)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[13 - 10]];
											v522 = 3 + 5;
										end
										if (v522 == (16 - 6)) then
											v81[v83[2]] = v81[v83[1740 - (569 + 1168)]] + v81[v83[4]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[3 - 1]][v83[354 - (118 + 233)]] = v81[v83[348 - (279 + 65)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v524 = v83[2 - 0];
											v81[v524] = v81[v524](v13(v81, v524 + (1 - 0), v83[6 - 3]));
											v75 = v75 + (2 - 1);
											v522 = 1829 - (1414 + 404);
										end
									end
								elseif (v84 == (890 - (347 + 409))) then
									v81[v83[2 + 0]] = v81[v83[3 + 0]];
								else
									local v2514;
									local v2515;
									v81[v83[2]] = v62[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v2515 = v83[1 + 1];
									v2514 = v81[v83[1581 - (420 + 1158)]];
									v81[v2515 + 1] = v2514;
									v81[v2515] = v2514[v83[9 - 5]];
									v75 = v75 + (612 - (406 + 205));
									v83 = v71[v75];
									v2515 = v83[2];
									v81[v2515] = v81[v2515](v81[v2515 + (3 - 2)]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[2 + 1]] = v81[v83[2 + 0]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									do
										return;
									end
								end
							elseif (v84 <= 137) then
								if ((v84 == (197 - (28 + 33))) or (2663 > 2809)) then
									v81[v83[1 + 1]]();
								else
									local v2526 = 1007 - (858 + 149);
									local v2527;
									local v2528;
									while true do
										if (0 == v2526) then
											v2527 = nil;
											v2528 = nil;
											v2528 = v83[1 + 1];
											v2527 = v81[v83[4 - 1]];
											v81[v2528 + (1508 - (829 + 678))] = v2527;
											v81[v2528] = v2527[v83[3 + 1]];
											v2526 = 1217 - (143 + 1073);
										end
										if (v2526 == (1820 - (898 + 917))) then
											v81[v83[3 - 1]] = v81[v83[2 + 1]][v83[1473 - (882 + 587)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[2 + 1]][v81[v83[268 - (140 + 124)]]];
											break;
										end
										if ((2624 == 2624) and (v2526 == (1 + 0))) then
											v75 = v75 + (1536 - (1105 + 430));
											v83 = v71[v75];
											v81[v83[5 - 3]] = v83[10 - 7];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2528 = v83[4 - 2];
											v2526 = 2;
										end
										if (v2526 == (6 - 2)) then
											v81[v83[2 + 0]] = v62[v83[2 + 1]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[1 + 2]][v83[1995 - (1047 + 944)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2526 = 1307 - (206 + 1096);
										end
										if (v2526 == (196 - (30 + 164))) then
											v81[v2528] = v81[v2528](v13(v81, v2528 + (4 - 3), v83[3]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v62[v83[3]] = v81[v83[2]];
											v75 = v75 + (1475 - (1383 + 91));
											v83 = v71[v75];
											v2526 = 11 - 8;
										end
										if ((5 - 2) == v2526) then
											v81[v83[1662 - (1174 + 486)]] = v83[430 - (172 + 255)];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v62[v83[6 - 3]] = v81[v83[2]];
											v75 = v75 + (1529 - (594 + 934));
											v83 = v71[v75];
											v2526 = 4;
										end
									end
								end
							elseif (v84 > (706 - (211 + 357))) then
								local v2529;
								local v2530;
								v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[6 - 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1416 - (159 + 1255)]] = v83[3 + 0];
								v75 = v75 + (778 - (24 + 753));
								v83 = v71[v75];
								v2530 = v83[1 + 1];
								v81[v2530] = v81[v2530](v81[v2530 + (1 - 0)]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[3]] = v81[v83[2]];
								v75 = v75 + (1133 - (898 + 234));
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[538 - (333 + 202)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2530 = v83[1 + 1];
								v2529 = v81[v83[5 - 2]];
								v81[v2530 + (1280 - (1018 + 261))] = v2529;
								v81[v2530] = v2529[v83[9 - 5]];
								v75 = v75 + (132 - (93 + 38));
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2530 = v83[2];
								v81[v2530] = v81[v2530](v13(v81, v2530 + 1, v83[1 + 2]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[11 - 8]][v83[11 - 7]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[6 - 3]][v83[1 + 3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v2530 = v83[2 + 0];
								v2529 = v81[v83[423 - (14 + 406)]];
								v81[v2530 + (1 - 0)] = v2529;
								v81[v2530] = v2529[v83[4]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2530 = v83[1632 - (20 + 1610)];
								v81[v2530] = v81[v2530](v13(v81, v2530 + 1 + 0, v83[8 - 5]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[520 - (243 + 274)]][v83[1626 - (1437 + 185)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[11 - 8]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[819 - (326 + 490)]][v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[205 - (181 + 22)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (76 - (35 + 40));
								v83 = v71[v75];
								if ((v81[v83[2]] == v81[v83[4]]) or (579 > 3001)) then
									v75 = v75 + (3 - 2);
								else
									v75 = v83[3];
								end
							else
								local v2561;
								local v2562;
								v62[v83[3 - 0]] = v81[v83[1 + 1]];
								v75 = v75 + (879 - (297 + 581));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[3 - 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2562 = v83[6 - 4];
								v2561 = v81[v83[3]];
								v81[v2562 + 1 + 0] = v2561;
								v81[v2562] = v2561[v83[15 - 11]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[8 - 6]] = v83[1740 - (1505 + 232)];
								v75 = v75 + (1319 - (415 + 903));
								v83 = v71[v75];
								v2562 = v83[5 - 3];
								v81[v2562] = v81[v2562](v13(v81, v2562 + (1 - 0), v83[720 - (155 + 562)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[120 - (71 + 46)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2562 = v83[2 - 0];
								v2561 = v81[v83[3]];
								v81[v2562 + (686 - (436 + 249))] = v2561;
								v81[v2562] = v2561[v83[1625 - (56 + 1565)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2562 = v83[2];
								v81[v2562](v81[v2562 + (985 - (80 + 904))]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[803 - (595 + 205)];
							end
						elseif (v84 <= (348 - 203)) then
							if (v84 <= 142) then
								if ((v84 <= 140) or (4682 < 4406)) then
									local v525;
									local v526;
									v81[v83[4 - 2]] = v81[v83[3 + 0]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[12 - 8]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[668 - (400 + 265)]][v83[7 - 3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v526 = v83[2];
									v525 = v81[v83[6 - 3]];
									v81[v526 + 1 + 0] = v525;
									v81[v526] = v525[v83[1675 - (962 + 709)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v526 = v83[4 - 2];
									v81[v526] = v81[v526](v13(v81, v526 + (782 - (636 + 145)), v83[298 - (282 + 13)]));
									v75 = v75 + (1149 - (366 + 782));
									v83 = v71[v75];
									v81[v83[2]][v83[92 - (10 + 79)]] = v83[4];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1709 - (1297 + 410)]] = v83[10 - 7];
								elseif (v84 > (124 + 17)) then
									local v2581;
									local v2582;
									v2582 = v83[2];
									v81[v2582](v13(v81, v2582 + (279 - (262 + 16)), v83[3]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1 + 2];
									v75 = v75 + (1851 - (1056 + 794));
									v83 = v71[v75];
									v62[v83[3]] = v81[v83[1350 - (741 + 607)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v2582 = v83[1758 - (730 + 1026)];
									v2581 = v81[v83[1796 - (248 + 1545)]];
									v81[v2582 + (993 - (191 + 801))] = v2581;
									v81[v2582] = v2581[v83[19 - 15]];
									v75 = v75 + (561 - (478 + 82));
									v83 = v71[v75];
									v81[v83[2]] = v83[1710 - (434 + 1273)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[8 - 5] ~= (0 + 0);
								else
									local v2596;
									v2596 = v83[8 - 6];
									v81[v2596](v81[v2596 + 1]);
									v75 = v75 + (574 - (349 + 224));
									v83 = v71[v75];
									v81[v83[866 - (275 + 589)]] = v62[v83[3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[4 - 1]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1534 - (1064 + 468)]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[8 - 6]] = v81[v83[3]][v83[707 - (676 + 27)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[1430 - (48 + 1379)]][v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v62[v83[3 + 0]];
									v75 = v75 + (116 - (79 + 36));
									v83 = v71[v75];
									v81[v83[6 - 4]] = v81[v83[2 + 1]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[1018 - (631 + 383)]];
								end
							elseif (v84 <= (1778 - (445 + 1190))) then
								local v546 = 0;
								local v547;
								local v548;
								while true do
									if (v546 == (1433 - (810 + 615))) then
										v62[v83[1297 - (819 + 475)]] = v81[v83[1337 - (243 + 1092)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v83[3];
										break;
									end
									if ((v546 == 5) or (4321 == 4784)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[1 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v546 = 9 - 3;
									end
									if (v546 == (11 - 7)) then
										v548 = v83[2];
										v81[v548] = v81[v548](v13(v81, v548 + (525 - (119 + 405)), v83[6 - 3]));
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[611 - (352 + 257)]][v83[1 + 2]] = v83[1167 - (88 + 1075)];
										v546 = 5;
									end
									if ((347 == 347) and ((1078 - (477 + 594)) == v546)) then
										v83 = v71[v75];
										v548 = v83[725 - (328 + 395)];
										v81[v548] = v81[v548](v81[v548 + 1]);
										v75 = v75 + (505 - (164 + 340));
										v83 = v71[v75];
										v546 = 11 - 3;
									end
									if (v546 == (4 - 2)) then
										v83 = v71[v75];
										v548 = v83[2];
										v547 = v81[v83[1232 - (1008 + 221)]];
										v81[v548 + 1] = v547;
										v81[v548] = v547[v83[1515 - (1025 + 486)]];
										v546 = 6 - 3;
									end
									if ((2465 <= 3693) and ((16 - 10) == v546)) then
										v548 = v83[2];
										v547 = v81[v83[222 - (108 + 111)]];
										v81[v548 + (99 - (82 + 16))] = v547;
										v81[v548] = v547[v83[1733 - (533 + 1196)]];
										v75 = v75 + (1 - 0);
										v546 = 219 - (161 + 51);
									end
									if (v546 == 0) then
										v547 = nil;
										v548 = nil;
										v81[v83[436 - (294 + 140)]] = v81[v83[12 - 9]][v83[842 - (717 + 121)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v546 = 1 + 0;
									end
									if ((3321 >= 2530) and (v546 == (1 + 2))) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[1713 - (1001 + 709)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v546 = 1124 - (242 + 878);
									end
									if (v546 == (1784 - (1395 + 388))) then
										v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[4]];
										v75 = v75 + (1948 - (1289 + 658));
										v546 = 2 + 0;
									end
								end
							elseif (v84 > 144) then
								local v2616;
								v81[v83[2]] = v81[v83[4 - 1]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[5 - 2];
								v75 = v75 + (1977 - (337 + 1639));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[6 - 3];
								v75 = v75 + (1738 - (630 + 1107));
								v83 = v71[v75];
								v2616 = v83[2 + 0];
								v81[v2616] = v81[v2616](v13(v81, v2616 + 1 + 0, v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]][v83[2 + 1]] = v81[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[63 - (13 + 48)]][v83[702 - (658 + 41)]] = v83[8 - 4];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1909 - (1591 + 316)]] = v62[v83[5 - 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[9 - 6]][v83[1280 - (1241 + 35)]];
								v75 = v75 + (41 - (18 + 22));
								v83 = v71[v75];
								v81[v83[2]] = v83[3 - 0];
							else
								local v2635 = 0;
								local v2636;
								local v2637;
								while true do
									if (v2635 == (1 + 1)) then
										v83 = v71[v75];
										v62[v83[1305 - (697 + 605)]] = v81[v83[2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v2635 = 3;
									end
									if (v2635 == (1 - 0)) then
										v75 = v75 + (330 - (188 + 141));
										v83 = v71[v75];
										v81[v83[8 - 6]] = v83[3];
										v75 = v75 + (2 - 1);
										v2635 = 952 - (34 + 916);
									end
									if (0 == v2635) then
										v2636 = nil;
										v2637 = nil;
										v2637 = v83[1739 - (357 + 1380)];
										v81[v2637](v13(v81, v2637 + 1 + 0, v83[2 + 1]));
										v2635 = 1 + 0;
									end
									if (v2635 == (1931 - (178 + 1749))) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1417 - (142 + 1273)]] = v83[596 - (284 + 309)];
										break;
									end
									if (v2635 == 3) then
										v2637 = v83[2 + 0];
										v2636 = v81[v83[693 - (622 + 68)]];
										v81[v2637 + 1 + 0] = v2636;
										v81[v2637] = v2636[v83[8 - 4]];
										v2635 = 4;
									end
								end
							end
						elseif ((v84 <= (115 + 33)) or (2470 <= 1996)) then
							if ((660 < 2212) and (v84 <= (91 + 55))) then
								local v549;
								v81[v83[1900 - (855 + 1043)]] = v81[v83[6 - 3]][v83[13 - 9]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[782 - (576 + 203)]][v83[9 - 5]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1986 - (709 + 1275)]] = v81[v83[3]][v83[4 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[11 - 8]][v83[122 - (31 + 87)]];
								v75 = v75 + (132 - (44 + 87));
								v83 = v71[v75];
								v549 = v83[7 - 5];
								v81[v549] = v81[v549](v13(v81, v549 + 1 + 0, v83[6 - 3]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[788 - (284 + 502)]] = v81[v83[2 + 1]];
								v75 = v75 + (1187 - (124 + 1062));
								v83 = v71[v75];
								v81[v83[1029 - (847 + 180)]] = v83[3 + 0];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v75 = v83[1366 - (369 + 994)];
							elseif ((2746 == 2746) and (v84 == 147)) then
								local v2638 = 963 - (583 + 380);
								local v2639;
								local v2640;
								while true do
									if (v2638 == (1 + 0)) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[2 + 2]];
										v75 = v75 + (1974 - (1085 + 888));
										v83 = v71[v75];
										v2638 = 2;
									end
									if (v2638 == (0 - 0)) then
										v2639 = nil;
										v2640 = nil;
										v81[v83[7 - 5]] = v81[v83[13 - 10]][v83[5 - 1]];
										v75 = v75 + 1 + 0;
										v2638 = 1 + 0;
									end
									if (v2638 == (3 + 3)) then
										v81[v83[2 - 0]] = v83[4 - 1];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v75 = v83[3 + 0];
										break;
									end
									if (v2638 == 2) then
										v2640 = v83[2 + 0];
										v2639 = v81[v83[217 - (153 + 61)]];
										v81[v2640 + 1] = v2639;
										v81[v2640] = v2639[v83[947 - (704 + 239)]];
										v2638 = 2 + 1;
									end
									if ((1916 <= 3168) and (v2638 == (1391 - (740 + 646)))) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[1925 - (1547 + 375)]][v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2638 = 6;
									end
									if (v2638 == 4) then
										v83 = v71[v75];
										v2640 = v83[405 - (211 + 192)];
										v81[v2640] = v81[v2640](v13(v81, v2640 + (4 - 3), v83[4 - 1]));
										v75 = v75 + (782 - (425 + 356));
										v2638 = 1 + 4;
									end
									if (v2638 == (7 - 4)) then
										v75 = v75 + (1567 - (83 + 1483));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1275 - (123 + 1149)]];
										v75 = v75 + 1;
										v2638 = 4;
									end
								end
							else
								local v2641 = 0 + 0;
								local v2642;
								local v2643;
								while true do
									if ((4503 >= 2361) and (v2641 == (3 + 4))) then
										v83 = v71[v75];
										v75 = v83[1583 - (908 + 672)];
										break;
									end
									if (v2641 == (518 - (206 + 307))) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v2643 = v83[2 + 0];
										v81[v2643](v13(v81, v2643 + 1, v83[65 - (18 + 44)]));
										v2641 = 3 + 3;
									end
									if (v2641 == (8 - 4)) then
										v81[v2643] = v81[v2643](v13(v81, v2643 + (2 - 1), v83[1 + 2]));
										v75 = v75 + (936 - (226 + 709));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[729 - (235 + 491)]][v81[v83[4]]];
										v2641 = 7 - 2;
									end
									if (v2641 == (0 + 0)) then
										v2642 = nil;
										v2643 = nil;
										v2643 = v83[2];
										v2642 = v81[v83[1302 - (463 + 836)]];
										v2641 = 405 - (166 + 238);
									end
									if (v2641 == (10 - 4)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										do
											return v81[v83[1443 - (1080 + 361)]];
										end
										v75 = v75 + (1 - 0);
										v2641 = 7;
									end
									if ((1 + 0) == v2641) then
										v81[v2643 + 1] = v2642;
										v81[v2643] = v2642[v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2641 = 2 - 0;
									end
									if (v2641 == (302 - (254 + 46))) then
										v2643 = v83[1 + 1];
										v81[v2643] = v81[v2643](v81[v2643 + 1 + 0]);
										v75 = v75 + (257 - (37 + 219));
										v83 = v71[v75];
										v2641 = 1902 - (1330 + 569);
									end
									if (v2641 == (3 - 0)) then
										v81[v83[2 - 0]] = #v81[v83[11 - 8]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v2643 = v83[672 - (128 + 542)];
										v2641 = 6 - 2;
									end
								end
							end
						elseif (v84 <= (532 - 382)) then
							if (v84 == (509 - 360)) then
								local v2644;
								local v2645;
								v62[v83[1 + 2]] = v81[v83[6 - 4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[5 - 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2645 = v83[814 - (96 + 716)];
								v2644 = v81[v83[1610 - (85 + 1522)]];
								v81[v2645 + (854 - (724 + 129))] = v2644;
								v81[v2645] = v2644[v83[12 - 8]];
								v75 = v75 + (374 - (83 + 290));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[5 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]][v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2645 = v83[1 + 1];
								v81[v2645] = v81[v2645](v81[v2645 + (1 - 0)]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[5 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[449 - (190 + 257)]] = v81[v83[3]][v83[595 - (402 + 189)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[568 - (90 + 476)]] = v62[v83[3]];
								v75 = v75 + (815 - (688 + 126));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[1 + 2]];
							else
								local v2665;
								v81[v83[501 - (34 + 465)]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[8 - 6]] = v81[v83[6 - 3]][v83[3 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2665 = v83[2];
								v81[v2665] = v81[v2665](v81[v2665 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[5 - 2]];
								v75 = v75 + (1808 - (587 + 1220));
								v83 = v71[v75];
								v81[v83[1894 - (1211 + 681)]] = v81[v83[80 - (64 + 13)]][v83[659 - (121 + 534)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[805 - (622 + 181)]] = v83[2 + 1];
								v75 = v75 + (1670 - (296 + 1373));
								v83 = v71[v75];
								v2665 = v83[2];
								v81[v2665] = v81[v2665](v81[v2665 + 1 + 0]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[1617 - (143 + 1471)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[184 - (103 + 77)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1159 - (895 + 262)]] = v83[6 - 3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2665 = v83[2];
								v81[v2665] = v81[v2665](v81[v2665 + 1 + 0]);
								v75 = v75 + (1627 - (581 + 1045));
								v83 = v71[v75];
								v81[v83[1277 - (582 + 693)]] = v62[v83[3]];
								v75 = v75 + (1187 - (454 + 732));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[2 + 2]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[3];
								v75 = v75 + (651 - (367 + 283));
								v83 = v71[v75];
								v2665 = v83[70 - (7 + 61)];
								v81[v2665] = v81[v2665](v81[v2665 + (2 - 1)]);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[681 - (332 + 346)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[11 - 8]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[3 + 0];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2665 = v83[2 - 0];
								v81[v2665] = v81[v2665](v81[v2665 + (2 - 1)]);
								v75 = v75 + (1855 - (815 + 1039));
								v83 = v71[v75];
								v81[v83[778 - (336 + 440)]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[7 - 4]][v83[434 - (222 + 208)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[832 - (652 + 178)]] = v83[4 - 1];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v2665 = v83[2];
								v81[v2665] = v81[v2665](v81[v2665 + 1 + 0]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v62[v83[397 - (259 + 135)]];
								v75 = v75 + (1461 - (1393 + 67));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]][v83[1452 - (1129 + 319)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[3 - 0];
								v75 = v75 + (413 - (137 + 275));
								v83 = v71[v75];
								v2665 = v83[441 - (140 + 299)];
								v81[v2665] = v81[v2665](v81[v2665 + (1102 - (421 + 680))]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[7 - 4]][v83[3 + 1]];
								v75 = v75 + (541 - (58 + 482));
								v83 = v71[v75];
								v81[v83[681 - (310 + 369)]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2665 = v83[288 - (274 + 12)];
								v81[v2665] = v81[v2665](v81[v2665 + 1 + 0]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[1765 - (681 + 1081)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[7 - 4]][v83[881 - (842 + 35)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1869 - (180 + 1687)]] = v83[6 - 3];
								v75 = v75 + (972 - (269 + 702));
								v83 = v71[v75];
								v2665 = v83[816 - (776 + 38)];
								v81[v2665] = v81[v2665](v81[v2665 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[1 + 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[1 + 3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[11 - 8];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2665 = v83[957 - (135 + 820)];
								v81[v2665] = v81[v2665](v81[v2665 + (137 - (118 + 18))]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[14 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[4 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1295 - (741 + 552)]] = v83[1 + 2];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v2665 = v83[2 + 0];
								v81[v2665] = v81[v2665](v81[v2665 + (885 - (779 + 105))]);
								v75 = v75 + (1782 - (1451 + 330));
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[1872 - (1259 + 610)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[853 - (4 + 846)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1859 - (1108 + 749)]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2665 = v83[1743 - (1301 + 440)];
								v81[v2665] = v81[v2665](v81[v2665 + (1 - 0)]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[3 + 0]];
								v75 = v75 + (477 - (168 + 308));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1349 - (469 + 878)]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2665 = v83[7 - 5];
								v81[v2665] = v81[v2665](v81[v2665 + 1 + 0]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[11 - 8]][v83[4]];
								v75 = v75 + (1841 - (1332 + 508));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[1 + 2];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2665 = v83[2 + 0];
								v81[v2665] = v81[v2665](v81[v2665 + (1143 - (650 + 492))]);
								v75 = v75 + (807 - (689 + 117));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[7 - 4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1925 - (794 + 1129)]] = v81[v83[3 + 0]][v83[1 + 3]];
								v75 = v75 + (862 - (553 + 308));
								v83 = v71[v75];
								v81[v83[3 - 1]][v83[3]] = v81[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2] ~= (1768 - (1764 + 4));
								v75 = v75 + (518 - (121 + 396));
								v83 = v71[v75];
								v62[v83[557 - (498 + 56)]] = v81[v83[2 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[11 - 8] ~= (0 + 0);
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v62[v83[3]] = v81[v83[2 - 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[1619 - (316 + 1300)] ~= (172 - (78 + 94));
								v75 = v75 + (1417 - (261 + 1155));
								v83 = v71[v75];
								v62[v83[1459 - (1040 + 416)]] = v81[v83[45 - (29 + 14)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[964 - (928 + 34)]] = v83[1 + 2] ~= 0;
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[1 + 2]] = v81[v83[2 + 0]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[3] ~= 0;
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v62[v83[513 - (69 + 441)]] = v81[v83[2]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[6 - 3] ~= (1880 - (517 + 1363));
								v75 = v75 + (929 - (802 + 126));
								v83 = v71[v75];
								v62[v83[1671 - (1660 + 8)]] = v81[v83[2]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[183 - (38 + 143)]][v83[3]] = v83[11 - 7];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[119 - (29 + 88)]][v83[5 - 2]] = v81[v83[493 - (308 + 181)]];
								v75 = v75 + (1398 - (537 + 860));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[1098 - (691 + 404)]];
								v75 = v75 + (1955 - (870 + 1084));
								v83 = v71[v75];
								v81[v83[131 - (47 + 82)]] = v81[v83[1 + 2]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[120 - (84 + 33)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[7 - 4];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v2665 = v83[2];
								v81[v2665] = v81[v2665](v13(v81, v2665 + (4 - 3), v83[3 - 0]));
								v75 = v75 + (1221 - (87 + 1133));
								v83 = v71[v75];
								v81[v83[5 - 3]][v83[2 + 1]] = v81[v83[4 + 0]];
							end
						elseif (v84 == 151) then
							local v2751;
							local v2752;
							v2752 = v83[669 - (205 + 462)];
							v2751 = v81[v83[3]];
							v81[v2752 + 1 + 0] = v2751;
							v81[v2752] = v2751[v83[5 - 1]];
							v75 = v75 + (1382 - (1035 + 346));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[1783 - (970 + 810)];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v2752 = v83[5 - 3];
							v81[v2752] = v81[v2752](v13(v81, v2752 + 1 + 0, v83[2 + 1]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[7 - 5]] = v81[v83[1391 - (601 + 787)]];
							v75 = v75 + (611 - (256 + 354));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v62[v83[3]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[5 - 2]][v83[4]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[9 - 6];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v2752 = v83[2];
							v81[v2752] = v81[v2752](v81[v2752 + 1]);
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[575 - (259 + 313)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[1 + 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v75 = v83[8 - 5];
						else
							local v2774 = 0;
							local v2775;
							local v2776;
							while true do
								if ((v2774 == (1341 - (413 + 925))) or (4535 <= 4124)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[4]];
									v2774 = 3 + 1;
								end
								if ((v2774 == (2 + 4)) or (4020 == 4100)) then
									if not v81[v83[7 - 5]] then
										v75 = v75 + 1;
									else
										v75 = v83[4 - 1];
									end
									break;
								end
								if (v2774 == (0 + 0)) then
									v2775 = nil;
									v2776 = nil;
									v2776 = v83[2];
									v2774 = 2 - 1;
								end
								if (((1945 - (1164 + 780)) == v2774) or (4084 == 1676)) then
									v2775 = v81[v83[1363 - (596 + 764)]];
									v81[v2776 + 1] = v2775;
									v81[v2776] = v2775[v83[286 - (52 + 230)]];
									v2774 = 6 - 4;
								end
								if (v2774 == (1570 - (806 + 760))) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v2776 = v83[2];
									v2774 = 8 - 3;
								end
								if (v2774 == 5) then
									v81[v2776] = v81[v2776](v13(v81, v2776 + (1 - 0), v83[2 + 1]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2774 = 22 - 16;
								end
								if ((2 - 0) == v2774) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v61[v83[3]];
									v2774 = 3 + 0;
								end
							end
						end
					elseif (v84 <= (2142 - (1000 + 965))) then
						if ((1692 < 3037) and (v84 <= (91 + 73))) then
							if ((3685 >= 856) and (v84 <= (659 - 501))) then
								if (v84 <= (416 - 261)) then
									if (v84 <= (80 + 73)) then
										local v566 = 0;
										local v567;
										local v568;
										while true do
											if (v566 == (1126 - (261 + 865))) then
												v567 = nil;
												v568 = nil;
												v81[v83[5 - 3]] = v81[v83[4 - 1]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v566 = 1;
											end
											if (v566 == 7) then
												v81[v568](v81[v568 + 1 + 0]);
												break;
											end
											if (v566 == (549 - (33 + 512))) then
												v83 = v71[v75];
												v81[v83[1838 - (1555 + 281)]][v83[6 - 3]] = v81[v83[3 + 1]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v568 = v83[2 + 0];
												v566 = 14 - 9;
											end
											if ((377 < 3010) and (v566 == (1 + 0))) then
												v81[v83[41 - (34 + 5)]] = v83[3];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[3];
												v75 = v75 + 1 + 0;
												v566 = 2;
											end
											if (((3 + 0) == v566) or (4945 < 2441)) then
												v81[v568] = v81[v568](v13(v81, v568 + 1 + 0, v83[1 + 2]));
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[4 - 2]] = v81[v83[3]] + v81[v83[4]];
												v75 = v75 + (1222 - (999 + 222));
												v566 = 2 + 2;
											end
											if ((v566 == (2 + 3)) or (2432 >= 3540)) then
												v81[v568] = v81[v568](v13(v81, v568 + (345 - (166 + 178)), v83[1 + 2]));
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v568 = v83[1302 - (587 + 713)];
												v567 = v81[v83[3 + 0]];
												v566 = 1128 - (11 + 1111);
											end
											if (v566 == (4 + 2)) then
												v81[v568 + 1 + 0] = v567;
												v81[v568] = v567[v83[8 - 4]];
												v75 = v75 + (1101 - (882 + 218));
												v83 = v71[v75];
												v568 = v83[2 + 0];
												v566 = 969 - (115 + 847);
											end
											if (v566 == (5 - 3)) then
												v83 = v71[v75];
												v81[v83[1617 - (1231 + 384)]] = v83[6 - 3];
												v75 = v75 + (1697 - (1202 + 494));
												v83 = v71[v75];
												v568 = v83[180 - (12 + 166)];
												v566 = 7 - 4;
											end
										end
									elseif (v84 > (104 + 50)) then
										local v2777;
										local v2778;
										v81[v83[606 - (202 + 402)]] = v62[v83[2 + 1]];
										v75 = v75 + (999 - (936 + 62));
										v83 = v71[v75];
										v2778 = v83[350 - (119 + 229)];
										v2777 = v81[v83[7 - 4]];
										v81[v2778 + 1] = v2777;
										v81[v2778] = v2777[v83[14 - 10]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[6 - 3];
										v75 = v75 + 1;
										v83 = v71[v75];
										v2778 = v83[1438 - (513 + 923)];
										v81[v2778] = v81[v2778](v13(v81, v2778 + (1778 - (507 + 1270)), v83[2 + 1]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[2 + 1]][v83[15 - 11]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[771 - (644 + 125)]] = v81[v83[2 + 1]][v83[1851 - (718 + 1129)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[8 - 5]][v83[1413 - (564 + 845)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[164 - (46 + 116)]] = v83[653 - (575 + 75)];
									else
										local v2797;
										local v2798;
										v81[v83[4 - 2]] = v62[v83[3]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v2798 = v83[6 - 4];
										v2797 = v81[v83[3]];
										v81[v2798 + 1 + 0] = v2797;
										v81[v2798] = v2797[v83[3 + 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[673 - (224 + 446)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[9 - 6]];
										v75 = v75 + (319 - (56 + 262));
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[704 - (666 + 35)]][v83[11 - 7]];
										v75 = v75 + (1181 - (553 + 627));
										v83 = v71[v75];
										v81[v83[1475 - (936 + 537)]] = v81[v83[1 + 2]][v83[1204 - (737 + 463)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[669 - (424 + 243)]] = v83[1 + 2];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v2798 = v83[1348 - (1213 + 133)];
										v81[v2798](v13(v81, v2798 + (1 - 0), v83[2 + 1]));
										v75 = v75 + 1;
										v83 = v71[v75];
										do
											return;
										end
									end
								elseif ((v84 <= 156) or (4287 <= 2224)) then
									local v569 = 0;
									local v570;
									while true do
										if (v569 == (60 - (37 + 23))) then
											v570 = v83[7 - 5];
											v81[v570] = v81[v570]();
											break;
										end
									end
								elseif (v84 > 157) then
									local v2818 = 1343 - (122 + 1221);
									local v2819;
									local v2820;
									while true do
										if (v2818 == (248 - (139 + 103))) then
											v81[v2820] = v81[v2820](v13(v81, v2820 + 1 + 0, v83[2 + 1]));
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v2818 = 4 + 3;
										end
										if (v2818 == (5 + 2)) then
											if ((4181 >= 1074) and not v81[v83[1 + 1]]) then
												v75 = v75 + (107 - (9 + 97));
											else
												v75 = v83[5 - 2];
											end
											break;
										end
										if (((0 + 0) == v2818) or (2318 < 442)) then
											v2819 = nil;
											v2820 = nil;
											v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[4]];
											v2818 = 3 - 2;
										end
										if (v2818 == (1079 - (657 + 418))) then
											v75 = v75 + (1981 - (448 + 1532));
											v83 = v71[v75];
											v81[v83[255 - (110 + 143)]] = v83[8 - 5];
											v2818 = 5;
										end
										if ((v2818 == 3) or (760 < 596)) then
											v2819 = v81[v83[946 - (549 + 394)]];
											v81[v2820 + 1 + 0] = v2819;
											v81[v2820] = v2819[v83[4]];
											v2818 = 1238 - (500 + 734);
										end
										if ((2562 == 2562) and (v2818 == 1)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
											v2818 = 1 + 1;
										end
										if ((772 <= 3099) and (v2818 == (670 - (343 + 322)))) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v2820 = v83[1 + 1];
											v2818 = 1 + 5;
										end
										if (v2818 == (6 - 4)) then
											v75 = v75 + (1132 - (297 + 834));
											v83 = v71[v75];
											v2820 = v83[2];
											v2818 = 3;
										end
									end
								else
									local v2821;
									local v2822;
									v2822 = v83[2];
									v2821 = v81[v83[3]];
									v81[v2822 + 1] = v2821;
									v81[v2822] = v2821[v83[19 - 15]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[2 + 1];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2822 = v83[2];
									v81[v2822] = v81[v2822](v13(v81, v2822 + 1, v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[788 - (494 + 292)]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v2822 = v83[1634 - (888 + 744)];
									v2821 = v81[v83[3]];
									v81[v2822 + 1 + 0] = v2821;
									v81[v2822] = v2821[v83[689 - (206 + 479)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2822 = v83[2];
									v81[v2822](v81[v2822 + 1]);
									v75 = v75 + (1174 - (861 + 312));
									v83 = v71[v75];
									v81[v83[738 - (135 + 601)]] = v62[v83[1145 - (1085 + 57)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v2822 = v83[1927 - (224 + 1701)];
									v2821 = v81[v83[3]];
									v81[v2822 + 1 + 0] = v2821;
									v81[v2822] = v2821[v83[10 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[9 - 6];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2822 = v83[748 - (730 + 16)];
									v81[v2822] = v81[v2822](v13(v81, v2822 + 1, v83[3 + 0]));
									v75 = v75 + (1583 - (790 + 792));
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[1084 - (474 + 607)]];
									v75 = v75 + (531 - (129 + 401));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[3]][v83[122 - (51 + 67)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[115 - (93 + 20)]] = v83[3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[22 - (12 + 8)]] = v62[v83[201 - (161 + 37)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1559 - (507 + 1050)]] = v81[v83[5 - 2]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2822 = v83[1 + 1];
									v81[v2822] = v81[v2822](v13(v81, v2822 + 1 + 0, v83[3]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v62[v83[867 - (184 + 680)]] = v81[v83[2 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[8 - 5]] = v81[v83[2 + 0]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v83[5 - 2];
									v75 = v75 + 1;
									v83 = v71[v75];
									v75 = v83[1 + 2];
								end
							elseif (v84 <= (1211 - (629 + 421))) then
								if (v84 <= 159) then
									local v571;
									local v572;
									v81[v83[2 + 0]] = v81[v83[5 - 2]][v83[8 - 4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[942 - (544 + 396)]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[3];
									v75 = v75 + (992 - (904 + 87));
									v83 = v71[v75];
									v81[v83[2]] = v83[10 - 7];
									v75 = v75 + 1;
									v83 = v71[v75];
									v572 = v83[1476 - (1443 + 31)];
									v81[v572] = v81[v572](v13(v81, v572 + 1, v83[3]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1815 - (1110 + 703)]] = v81[v83[3]] + v81[v83[9 - 5]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[7 - 4]] = v81[v83[10 - 6]];
									v75 = v75 + (204 - (78 + 125));
									v83 = v71[v75];
									v572 = v83[5 - 3];
									v81[v572] = v81[v572](v13(v81, v572 + (1 - 0), v83[3]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v572 = v83[1826 - (1392 + 432)];
									v571 = v81[v83[1 + 2]];
									v81[v572 + (2 - 1)] = v571;
									v81[v572] = v571[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v572 = v83[2];
									v81[v572](v81[v572 + 1]);
								elseif ((v84 > (1562 - (963 + 439))) or (2307 < 1574)) then
									local v2860 = 0;
									local v2861;
									local v2862;
									local v2863;
									local v2864;
									local v2865;
									while true do
										if (2 == v2860) then
											v81[v2865 + (2 - 1)] = v2864;
											v81[v2865] = v2864[v83[4]];
											v75 = v75 + (1326 - (76 + 1249));
											v83 = v71[v75];
											v81[v83[1753 - (1165 + 586)]] = v62[v83[1931 - (1916 + 12)]];
											v75 = v75 + (1257 - (604 + 652));
											v2860 = 5 - 2;
										end
										if ((2 + 5) == v2860) then
											v81[v83[2]] = v62[v83[3]];
											break;
										end
										if (v2860 == 6) then
											v81[v2865] = v81[v2865](v13(v81, v2865 + (1 - 0), v76));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v62[v83[3]] = v81[v83[2]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v2860 = 7;
										end
										if (v2860 == (4 - 0)) then
											v83 = v71[v75];
											v81[v83[2 - 0]] = v83[3 - 0];
											v75 = v75 + (14 - (11 + 2));
											v83 = v71[v75];
											v2865 = v83[1444 - (64 + 1378)];
											v2862, v2863 = v74(v81[v2865](v13(v81, v2865 + (2 - 1), v83[1756 - (256 + 1497)])));
											v2860 = 5;
										end
										if (v2860 == (0 - 0)) then
											v2861 = nil;
											v2862, v2863 = nil;
											v2864 = nil;
											v2865 = nil;
											v81[v83[879 - (562 + 315)]] = v62[v83[3]];
											v75 = v75 + (3 - 2);
											v2860 = 1189 - (577 + 611);
										end
										if (v2860 == (3 + 0)) then
											v83 = v71[v75];
											v2865 = v83[5 - 3];
											v2864 = v81[v83[3]];
											v81[v2865 + (1 - 0)] = v2864;
											v81[v2865] = v2864[v83[4]];
											v75 = v75 + (72 - (58 + 13));
											v2860 = 3 + 1;
										end
										if (v2860 == 1) then
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[457 - (404 + 50)]][v83[40 - (6 + 30)]];
											v75 = v75 + (1334 - (770 + 563));
											v83 = v71[v75];
											v2865 = v83[2 + 0];
											v2864 = v81[v83[1 + 2]];
											v2860 = 2;
										end
										if (v2860 == (175 - (25 + 145))) then
											v76 = (v2863 + v2865) - (1 + 0);
											v2861 = 699 - (153 + 546);
											for v9672 = v2865, v76 do
												local v9673 = 0 + 0;
												while true do
													if ((v9673 == (927 - (60 + 867))) or (524 >= 4157)) then
														v2861 = v2861 + (3 - 2);
														v81[v9672] = v2862[v2861];
														break;
													end
												end
											end
											v75 = v75 + (1284 - (309 + 974));
											v83 = v71[v75];
											v2865 = v83[1 + 1];
											v2860 = 6;
										end
									end
								else
									local v2866;
									local v2867;
									v81[v83[5 - 3]] = v83[3];
									v75 = v75 + (1142 - (677 + 464));
									v83 = v71[v75];
									v81[v83[824 - (567 + 255)]] = v83[4 - 1];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v2867 = v83[530 - (384 + 144)];
									v81[v2867] = v81[v2867](v13(v81, v2867 + (1222 - (1030 + 191)), v83[5 - 2]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[2 + 1]] + v81[v83[861 - (326 + 531)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[1 + 2]] = v81[v83[9 - 5]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2867 = v83[2 + 0];
									v81[v2867] = v81[v2867](v13(v81, v2867 + (1622 - (1367 + 254)), v83[681 - (305 + 373)]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v2867 = v83[321 - (129 + 190)];
									v2866 = v81[v83[8 - 5]];
									v81[v2867 + (1 - 0)] = v2866;
									v81[v2867] = v2866[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v2867 = v83[2 + 0];
									v81[v2867](v81[v2867 + (290 - (210 + 79))]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v62[v83[3]];
								end
							elseif (v84 <= (402 - 240)) then
								local v592;
								local v593;
								v593 = v83[2];
								v592 = v81[v83[675 - (32 + 640)]];
								v81[v593 + 1] = v592;
								v81[v593] = v592[v83[4 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v593 = v83[2];
								v81[v593] = v81[v593](v81[v593 + 1 + 0]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v593 = v83[2 + 0];
								v592 = v81[v83[1764 - (847 + 914)]];
								v81[v593 + (2 - 1)] = v592;
								v81[v593] = v592[v83[8 - 4]];
								v75 = v75 + (525 - (163 + 361));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[888 - (162 + 723)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v593 = v83[403 - (258 + 143)];
								v81[v593] = v81[v593](v13(v81, v593 + (4 - 3), v83[6 - 3]));
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								if (v81[v83[1693 - (486 + 1205)]] or (2829 == 3480)) then
									v75 = v75 + (166 - (92 + 73));
								else
									v75 = v83[2 + 1];
								end
							elseif (v84 == (133 + 30)) then
								local v2885;
								v81[v83[2 - 0]] = v62[v83[275 - (68 + 204)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[18 - 14]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[320 - (20 + 296)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[8 - 6]] = v81[v83[10 - 7]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v2885 = v83[2 + 0];
								v81[v2885] = v81[v2885](v81[v2885 + 1 + 0]);
								v75 = v75 + 1;
								v83 = v71[v75];
								if v81[v83[5 - 3]] then
									v75 = v75 + 1 + 0;
								else
									v75 = v83[3];
								end
							else
								local v2897;
								local v2898;
								v2898 = v83[2];
								v81[v2898](v13(v81, v2898 + 1 + 0, v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]][v83[3]] = v83[4];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[252 - (155 + 94)]] = v81[v83[5 - 1]];
								v75 = v75 + (908 - (515 + 392));
								v83 = v71[v75];
								v81[v83[328 - (7 + 319)]] = v62[v83[2 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1499 - (292 + 1205)]] = v81[v83[55 - (13 + 39)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[11 - 8];
								v75 = v75 + (1039 - (850 + 188));
								v83 = v71[v75];
								v81[v83[1038 - (822 + 214)]] = v83[1164 - (317 + 844)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[2 + 1];
								v75 = v75 + 1;
								v83 = v71[v75];
								v2898 = v83[1192 - (508 + 682)];
								v81[v2898] = v81[v2898](v13(v81, v2898 + 1 + 0, v83[2 + 1]));
								v75 = v75 + (546 - (127 + 418));
								v83 = v71[v75];
								v81[v83[5 - 3]][v83[6 - 3]] = v81[v83[18 - 14]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1123 - (690 + 430)]][v83[15 - 11]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[5 - 2];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[955 - (637 + 315)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[9 - 6];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[7 - 4];
								v75 = v75 + (21 - (13 + 7));
								v83 = v71[v75];
								v2898 = v83[1 + 1];
								v81[v2898] = v81[v2898](v13(v81, v2898 + 1, v83[4 - 1]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 - 0]][v83[2 + 1]] = v81[v83[3 + 1]];
								v75 = v75 + (352 - (44 + 307));
								v83 = v71[v75];
								v81[v83[799 - (127 + 670)]] = v62[v83[3 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[587 - (375 + 209)]][v83[1820 - (1673 + 143)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[1452 - (836 + 613)];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[1533 - (295 + 1235)];
								v75 = v75 + (541 - (328 + 212));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[3];
								v75 = v75 + (920 - (517 + 402));
								v83 = v71[v75];
								v81[v83[2]] = v83[6 - 3];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v2898 = v83[1084 - (700 + 382)];
								v81[v2898] = v81[v2898](v13(v81, v2898 + (880 - (677 + 202)), v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]][v83[4 - 1]] = v81[v83[11 - 7]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[756 - (360 + 393)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[1959 - (1231 + 726)]] = v81[v83[4 - 1]][v83[1914 - (173 + 1737)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1949 - (441 + 1506)]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[696 - (136 + 558)]][v83[3]] = v81[v83[2 + 2]];
								v75 = v75 + (1223 - (988 + 234));
								v83 = v71[v75];
								v81[v83[1 + 1]][v83[7 - 4]] = v83[655 - (125 + 526)];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[8 - 5]];
								v75 = v75 + (1127 - (290 + 836));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[7 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[682 - (8 + 672)]] = v83[1 + 2];
								v75 = v75 + (1437 - (740 + 696));
								v83 = v71[v75];
								v81[v83[1048 - (353 + 693)]] = v83[3 + 0];
								v75 = v75 + (1494 - (35 + 1458));
								v83 = v71[v75];
								v81[v83[1872 - (1821 + 49)]] = v83[8 - 5];
								v75 = v75 + (1735 - (727 + 1007));
								v83 = v71[v75];
								v2898 = v83[169 - (165 + 2)];
								v81[v2898] = v81[v2898](v13(v81, v2898 + (1660 - (1028 + 631)), v83[1618 - (311 + 1304)]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]][v83[1 + 2]] = v81[v83[1 + 3]];
								v75 = v75 + (580 - (512 + 67));
								v83 = v71[v75];
								v81[v83[5 - 3]][v83[1 + 2]] = v83[4];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[9 - 6] ~= 0;
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v62[v83[8 - 5]] = v81[v83[1791 - (395 + 1394)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[11 - 7]];
								v75 = v75 + (468 - (143 + 324));
								v83 = v71[v75];
								v2898 = v83[5 - 3];
								v2897 = v81[v83[1 + 2]];
								v81[v2898 + (2 - 1)] = v2897;
								v81[v2898] = v2897[v83[4]];
							end
						elseif (v84 <= 170) then
							if (v84 <= (72 + 95)) then
								if (v84 <= (1268 - (342 + 761))) then
									local v607;
									v81[v83[2 + 0]] = v81[v83[3]][v83[10 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[4 - 1];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v607 = v83[2 + 0];
									v81[v607] = v81[v607](v81[v607 + (1158 - (889 + 268))]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[4 - 2]][v83[300 - (196 + 101)]] = v81[v83[6 - 2]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[2 + 1]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3]][v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[4 - 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1585 - (431 + 1152)]] = v83[3 + 0];
									v75 = v75 + (345 - (107 + 237));
									v83 = v71[v75];
									v81[v83[1802 - (690 + 1110)]] = v83[4 - 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v607 = v83[1499 - (1374 + 123)];
									v81[v607] = v81[v607](v13(v81, v607 + (2 - 1), v83[2 + 1]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[1 + 2]] = v81[v83[1607 - (454 + 1149)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[3];
								elseif (v84 > 166) then
									local v2970;
									v81[v83[1 + 1]] = v62[v83[3 + 0]];
									v75 = v75 + (638 - (21 + 616));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[6 - 3]][v83[1 + 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[439 - (125 + 312)]] = v83[3 + 0];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1111 - (266 + 842)];
									v75 = v75 + (639 - (395 + 243));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1038 - (383 + 652)];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v2970 = v83[2 + 0];
									v81[v2970] = v81[v2970](v13(v81, v2970 + 1 + 0, v83[646 - (114 + 529)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]][v83[3]] = v81[v83[3 + 1]];
								else
									local v2985 = 1189 - (352 + 837);
									local v2986;
									local v2987;
									while true do
										if (v2985 == 6) then
											v81[v83[8 - 6]][v83[3]] = v83[4];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[553 - (465 + 85)]];
											v2985 = 538 - (366 + 165);
										end
										if (v2985 == 2) then
											v81[v83[1 + 1]] = v81[v83[3]][v83[12 - 8]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[6 - 4]] = v83[1 + 2];
											v2985 = 3;
										end
										if ((4281 <= 4745) and (v2985 == (1676 - (521 + 1144)))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[3 - 1]][v83[1 + 2]] = v81[v83[4]];
											break;
										end
										if (v2985 == (99 - (5 + 85))) then
											v81[v2987] = v2986[v83[1697 - (1547 + 146)]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[319 - (272 + 45)]] = v83[6 - 3];
											v2985 = 5 + 5;
										end
										if (v2985 == (1 - 0)) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v62[v83[2 + 1]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v2985 = 2 + 0;
										end
										if (v2985 == (3 + 5)) then
											v83 = v71[v75];
											v2987 = v83[1298 - (997 + 299)];
											v2986 = v81[v83[1290 - (903 + 384)]];
											v81[v2987 + 1 + 0] = v2986;
											v2985 = 3 + 6;
										end
										if (v2985 == (5 + 0)) then
											v83 = v71[v75];
											v81[v83[3 - 1]] = v62[v83[3]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v2985 = 2 + 4;
										end
										if (v2985 == 4) then
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v62[v83[2 + 1]] = v81[v83[591 - (313 + 276)]];
											v75 = v75 + 1;
											v2985 = 1 + 4;
										end
										if ((v2985 == (338 - (168 + 160))) or (1586 >= 1835)) then
											v75 = v75 + (1457 - (1452 + 4));
											v83 = v71[v75];
											v2987 = v83[9 - 7];
											v81[v2987] = v81[v2987](v13(v81, v2987 + 1, v83[3]));
											v2985 = 431 - (338 + 82);
										end
										if (v2985 == 3) then
											v75 = v75 + (574 - (133 + 440));
											v83 = v71[v75];
											v2987 = v83[1 + 1];
											v81[v2987] = v81[v2987](v81[v2987 + (1 - 0)]);
											v2985 = 4;
										end
										if (v2985 == (0 + 0)) then
											v2986 = nil;
											v2987 = nil;
											v62[v83[1 + 2]] = v81[v83[2 + 0]];
											v75 = v75 + 1;
											v2985 = 1303 - (422 + 880);
										end
										if (v2985 == (1987 - (365 + 1615))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 - 0]] = v62[v83[1355 - (479 + 873)]];
											v75 = v75 + 1;
											v2985 = 1 + 7;
										end
									end
								end
							elseif ((v84 <= (471 - 303)) or (817 == 2648)) then
								local v628;
								local v629;
								v629 = v83[5 - 3];
								v81[v629](v13(v81, v629 + 1 + 0, v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v629 = v83[2];
								v628 = v81[v83[3 + 0]];
								v81[v629 + (1503 - (832 + 670))] = v628;
								v81[v629] = v628[v83[13 - 9]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[3];
								v75 = v75 + (1248 - (707 + 540));
								v83 = v71[v75];
								v629 = v83[2];
								v81[v629] = v81[v629](v13(v81, v629 + (60 - (18 + 41)), v83[3 + 0]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v629 = v83[2];
								v628 = v81[v83[3]];
								v81[v629 + 1] = v628;
								v81[v629] = v628[v83[4]];
								v75 = v75 + (1221 - (554 + 666));
								v83 = v71[v75];
								v81[v83[2]] = v83[503 - (438 + 62)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v629 = v83[1907 - (1497 + 408)];
								v81[v629](v13(v81, v629 + 1, v83[3 - 0]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[3]];
								v75 = v75 + (641 - (508 + 132));
								v83 = v71[v75];
								v629 = v83[6 - 4];
								v628 = v81[v83[3 - 0]];
								v81[v629 + (1208 - (49 + 1158))] = v628;
								v81[v629] = v628[v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3];
							elseif (v84 == 169) then
								local v2988 = v83[2 - 0];
								v81[v2988] = v81[v2988](v13(v81, v2988 + 1 + 0, v83[3 + 0]));
							else
								local v2990;
								local v2991;
								local v2992;
								v81[v83[2]] = v62[v83[6 - 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v2992 = v83[1223 - (460 + 761)];
								v2991 = v81[v83[7 - 4]];
								v81[v2992 + 1 + 0] = v2991;
								v81[v2992] = v2991[v83[1 + 3]];
								v75 = v75 + (597 - (405 + 191));
								v83 = v71[v75];
								v81[v83[1672 - (311 + 1359)]] = v83[6 - 3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[1 + 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[4 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[4 - 1]][v83[1 + 3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1523 - (1408 + 112)]][v83[986 - (285 + 697)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[9 - 7]] = v81[v83[3]][v83[1264 - (737 + 523)]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[847 - (789 + 55)];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v2991 = v83[2 + 1];
								v2990 = v81[v2991];
								for v5859 = v2991 + (1 - 0), v83[6 - 2] do
									v2990 = v2990 .. v81[v5859];
								end
								v81[v83[2 + 0]] = v2990;
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1884 - (1492 + 390)]] = v83[3];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v2992 = v83[2];
								v81[v2992](v13(v81, v2992 + (994 - (312 + 681)), v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								do
									return;
								end
							end
						elseif (v84 <= 173) then
							if (v84 <= (2082 - (1255 + 656))) then
								local v651;
								local v652;
								v652 = v83[1729 - (485 + 1242)];
								v651 = v81[v83[3]];
								v81[v652 + 1 + 0] = v651;
								v81[v652] = v651[v83[8 - 4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[11 - 8]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v652 = v83[3 - 1];
								v651 = v81[v83[1 + 2]];
								v81[v652 + 1] = v651;
								v81[v652] = v651[v83[4]];
								v75 = v75 + (960 - (722 + 237));
								v83 = v71[v75];
								v81[v83[2]] = v83[8 - 5];
								v75 = v75 + 1;
								v83 = v71[v75];
								v652 = v83[718 - (77 + 639)];
								v81[v652] = v81[v652](v13(v81, v652 + (2 - 1), v83[14 - 11]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[8 - 5]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1361 - (888 + 471)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (1110 - (1034 + 75));
								v83 = v71[v75];
								v81[v83[1159 - (448 + 709)]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[1857 - (1643 + 212)]] = v62[v83[483 - (320 + 160)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = {};
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[1 + 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[139 - (114 + 22)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1061 - (89 + 970)]] = v81[v83[3]][v83[1732 - (1083 + 645)]];
								v75 = v75 + (167 - (50 + 116));
								v83 = v71[v75];
								v81[v83[1964 - (1058 + 904)]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[3]][v83[15 - 11]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[1 + 2]][v83[200 - (94 + 102)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1266 - (735 + 529)]] = v62[v83[1154 - (875 + 276)]];
								v75 = v75 + (980 - (461 + 518));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[785 - (656 + 125)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v83[851 - (532 + 316)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[256 - (150 + 104)]] = v83[3 + 0];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1849 - (564 + 1283)]] = v83[2 + 1];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v652 = v83[1 + 1];
								v81[v652] = v81[v652](v13(v81, v652 + 1, v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v81[v83[1551 - (330 + 1218)]] * v81[v83[3 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[2 + 1]] = v81[v83[5 - 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v652 = v83[2];
								v81[v652] = v81[v652](v13(v81, v652 + (4 - 3), v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v652 = v83[1571 - (511 + 1058)];
								v651 = v81[v83[7 - 4]];
								v81[v652 + (1499 - (1315 + 183))] = v651;
								v81[v652] = v651[v83[2 + 2]];
								v75 = v75 + (543 - (233 + 309));
								v83 = v71[v75];
								v652 = v83[2 - 0];
								v81[v652](v81[v652 + 1]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[656 - (267 + 386)];
							elseif (v84 == (400 - 228)) then
								v81[v83[855 - (744 + 109)]][v81[v83[1553 - (1271 + 279)]]] = v81[v83[10 - 6]];
							else
								local v3020;
								local v3021;
								v81[v83[1646 - (642 + 1002)]] = v81[v83[3]][v83[1867 - (643 + 1220)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[4 - 1]][v83[1421 - (1063 + 354)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3021 = v83[832 - (739 + 91)];
								v3020 = v81[v83[4 - 1]];
								v81[v3021 + (1878 - (790 + 1087))] = v3020;
								v81[v3021] = v3020[v83[4 + 0]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[6 - 4]] = v62[v83[7 - 4]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[152 - (82 + 67)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[1988 - (1835 + 150)]][v83[18 - (12 + 2)]];
								v75 = v75 + (1037 - (784 + 252));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[5 - 2] ~= (0 + 0);
								v75 = v75 + (1385 - (1134 + 250));
								v83 = v71[v75];
								v3021 = v83[2 + 0];
								v81[v3021](v13(v81, v3021 + 1 + 0, v83[5 - 2]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v62[v83[7 - 4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[1984 - (1940 + 41)]][v83[242 - (39 + 199)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[4 - 1]][v83[1933 - (313 + 1616)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v3021 = v83[2];
								v3020 = v81[v83[3 - 0]];
								v81[v3021 + (1 - 0)] = v3020;
								v81[v3021] = v3020[v83[41 - (7 + 30)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1188 - (961 + 225)]] = v62[v83[12 - 9]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[842 - (281 + 559)]] = v81[v83[3]][v83[11 - 7]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1442 - (102 + 1338)]] = v83[1 + 2] ~= (0 + 0);
								v75 = v75 + (442 - (319 + 122));
								v83 = v71[v75];
								v3021 = v83[1 + 1];
								v81[v3021](v13(v81, v3021 + (997 - (45 + 951)), v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[2 + 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[4]];
								v75 = v75 + (1376 - (684 + 691));
								v83 = v71[v75];
								v81[v83[1646 - (1161 + 483)]] = v81[v83[3]][v83[970 - (245 + 721)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3021 = v83[2 + 0];
								v3020 = v81[v83[3 + 0]];
								v81[v3021 + (43 - (31 + 11))] = v3020;
								v81[v3021] = v3020[v83[13 - 9]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v62[v83[839 - (179 + 657)]];
								v75 = v75 + (328 - (150 + 177));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[2 + 1]][v83[1209 - (142 + 1063)]];
								v75 = v75 + (1906 - (1346 + 559));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[8 - 5]][v83[15 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[1729 - (1695 + 31)] ~= (0 + 0);
								v75 = v75 + (1438 - (1073 + 364));
								v83 = v71[v75];
								v3021 = v83[819 - (405 + 412)];
								v81[v3021](v13(v81, v3021 + (650 - (518 + 131)), v83[1305 - (667 + 635)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[3];
							end
						elseif (v84 <= (1 + 174)) then
							if (v84 > (269 - 95)) then
								local v3066;
								local v3067;
								v3067 = v83[2];
								v81[v3067](v13(v81, v3067 + (1911 - (1397 + 513)), v83[4 - 1]));
								v75 = v75 + (1076 - (454 + 621));
								v83 = v71[v75];
								v3067 = v83[3 - 1];
								v3066 = v81[v83[1 + 2]];
								v81[v3067 + (2 - 1)] = v3066;
								v81[v3067] = v3066[v83[602 - (417 + 181)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[10 - 7];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3067 = v83[2];
								v81[v3067] = v81[v3067](v13(v81, v3067 + (4 - 3), v83[1123 - (995 + 125)]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v3067 = v83[2 + 0];
								v3066 = v81[v83[3]];
								v81[v3067 + (2 - 1)] = v3066;
								v81[v3067] = v3066[v83[4]];
								v75 = v75 + (1326 - (754 + 571));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[8 - 5];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3067 = v83[2];
								v81[v3067](v13(v81, v3067 + 1 + 0, v83[10 - 7]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3067 = v83[7 - 5];
								v3066 = v81[v83[1 + 2]];
								v81[v3067 + 1] = v3066;
								v81[v3067] = v3066[v83[1495 - (1141 + 350)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
							else
								local v3085;
								v81[v83[5 - 3]] = {};
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[3 + 0]];
								v75 = v75 + (1870 - (513 + 1356));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1939 - (196 + 1740)]][v83[4 - 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[4 - 1]][v81[v83[3 + 1]]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[1 + 2]][v83[10 - 6]];
								v75 = v75 + (1632 - (362 + 1269));
								v83 = v71[v75];
								v3085 = v83[5 - 3];
								v81[v3085] = v81[v3085](v81[v3085 + (38 - (26 + 11))]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (1820 - (183 + 1636));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[3 + 0]];
								v75 = v75 + (1231 - (1161 + 69));
								v83 = v71[v75];
								v81[v83[1380 - (672 + 706)]] = v81[v83[1 + 2]][v83[109 - (82 + 23)]];
							end
						elseif ((3189 >= 1082) and (v84 == (1697 - (100 + 1421)))) then
							local v3103 = 780 - (61 + 719);
							local v3104;
							local v3105;
							while true do
								if (v3103 == (412 - (180 + 232))) then
									v3104 = nil;
									v3105 = nil;
									v3105 = v83[2];
									v3104 = v81[v83[3 + 0]];
									v81[v3105 + 1] = v3104;
									v81[v3105] = v3104[v83[5 - 1]];
									v3103 = 2 - 1;
								end
								if ((4249 >= 4127) and (v3103 == (1782 - (728 + 1053)))) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[562 - (427 + 132)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[967 - (786 + 179)]] = v83[1 + 2];
									v3103 = 1 + 1;
								end
								if (v3103 == 2) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v3105 = v83[2 + 0];
									v3103 = 1927 - (1685 + 239);
								end
								if (v3103 == (6 - 3)) then
									v81[v3105](v13(v81, v3105 + (2 - 1), v83[6 - 3]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[3 + 0]];
									v75 = v75 + (1178 - (457 + 720));
									v83 = v71[v75];
									v3103 = 4;
								end
								if (v3103 == (9 - 5)) then
									v81[v83[6 - 4]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3105 = v83[723 - (124 + 597)];
									v81[v3105](v81[v3105 + (4 - 3)]);
									v75 = v75 + 1;
									v3103 = 569 - (414 + 150);
								end
								if (v3103 == (23 - 18)) then
									v83 = v71[v75];
									v81[v83[2]] = v83[832 - (592 + 237)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v75 = v83[3];
									break;
								end
							end
						else
							local v3106;
							local v3107;
							local v3106, v3108;
							local v3109;
							v81[v83[2 + 0]] = v62[v83[7 - 4]];
							v75 = v75 + (614 - (122 + 491));
							v83 = v71[v75];
							v81[v83[9 - 7]] = v61[v83[288 - (116 + 169)]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[3 + 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v3109 = v83[2];
							v3106, v3108 = v74(v81[v3109](v81[v3109 + 1 + 0]));
							v76 = (v3108 + v3109) - (1 - 0);
							v3107 = 0 - 0;
							for v5860 = v3109, v76 do
								v3107 = v3107 + 1;
								v81[v5860] = v3106[v3107];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3109 = v83[1232 - (477 + 753)];
							v3106 = {v81[v3109](v13(v81, v3109 + 1 + 0, v76))};
							v3107 = 0 + 0;
							for v5863 = v3109, v83[4] do
								local v5864 = 0;
								while true do
									if (v5864 == (0 + 0)) then
										v3107 = v3107 + (3 - 2);
										v81[v5863] = v3106[v3107];
										break;
									end
								end
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v75 = v83[1380 - (649 + 728)];
						end
					elseif (v84 <= 190) then
						if (v84 <= (1095 - (478 + 434))) then
							if (v84 <= 180) then
								if (v84 <= (372 - 194)) then
									local v705 = 0;
									local v706;
									local v707;
									local v708;
									while true do
										if (v705 == (1 - 0)) then
											v708 = {};
											v707 = v10({}, {__index=function(v6583, v6584)
												local v6585 = 0 - 0;
												local v6586;
												while true do
													if (v6585 == (0 + 0)) then
														v6586 = v708[v6584];
														return v6586[1561 - (1329 + 231)][v6586[3 - 1]];
													end
												end
											end,__newindex=function(v6587, v6588, v6589)
												local v6590 = 1910 - (1523 + 387);
												local v6591;
												while true do
													if ((2186 >= 2116) and (v6590 == (0 - 0))) then
														v6591 = v708[v6588];
														v6591[1 + 0][v6591[1309 - (1013 + 294)]] = v6589;
														break;
													end
												end
											end});
											v705 = 2;
										end
										if (v705 == (1350 - (25 + 1323))) then
											for v6592 = 1 + 0, v83[1934 - (611 + 1319)] do
												local v6593 = 0;
												local v6594;
												while true do
													if ((0 + 0) == v6593) then
														v75 = v75 + 1;
														v6594 = v71[v75];
														v6593 = 1;
													end
													if (v6593 == 1) then
														if (v6594[1] == 134) then
															v708[v6592 - 1] = {v81,v6594[1 + 2]};
														else
															v708[v6592 - (1 + 0)] = {v61,v6594[2 + 1]};
														end
														v80[#v80 + 1] = v708;
														break;
													end
												end
											end
											v81[v83[818 - (353 + 463)]] = v29(v706, v707, v62);
											break;
										end
										if (v705 == 0) then
											v706 = v72[v83[5 - 2]];
											v707 = nil;
											v705 = 1 + 0;
										end
									end
								elseif ((v84 > (1240 - (605 + 456))) or (4218 <= 2872)) then
									v81[v83[5 - 3]] = v81[v83[3]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[786 - (122 + 662)]] = v61[v83[1495 - (1184 + 308)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1170 - (445 + 723)]] = v81[v83[1643 - (1245 + 395)]][v83[1131 - (191 + 936)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[262 - (90 + 168)]];
									v75 = v75 + (172 - (87 + 84));
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[3];
								else
									local v3131;
									local v3132;
									v3132 = v83[714 - (176 + 536)];
									v3131 = v81[v83[3 + 0]];
									v81[v3132 + (1699 - (858 + 840))] = v3131;
									v81[v3132] = v3131[v83[4]];
									v75 = v75 + (661 - (447 + 213));
									v83 = v71[v75];
									v81[v83[1462 - (1458 + 2)]] = v62[v83[14 - 11]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3132 = v83[2];
									v3131 = v81[v83[4 - 1]];
									v81[v3132 + 1 + 0] = v3131;
									v81[v3132] = v3131[v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[483 - (248 + 232)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3132 = v83[232 - (109 + 121)];
									v81[v3132] = v81[v3132](v13(v81, v3132 + 1 + 0, v83[1407 - (1288 + 116)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[239 - (212 + 24)]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1709 - (1175 + 532)]] = v81[v83[3 + 0]][v83[5 - 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[573 - (252 + 317)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[805 - (738 + 65)]] = v62[v83[560 - (410 + 147)]];
									v75 = v75 + (901 - (272 + 628));
									v83 = v71[v75];
									v81[v83[4 - 2]] = {};
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[170 - (62 + 106)]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[3]][v83[698 - (167 + 527)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[4 - 1]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[1069 - (326 + 740)]][v83[4]];
									v75 = v75 + (77 - (68 + 8));
									v83 = v71[v75];
									v81[v83[1473 - (133 + 1338)]] = v81[v83[7 - 4]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[10 - 7]][v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[1990 - (1930 + 57)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[908 - (14 + 890)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[6 - 3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v83[9 - 6];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[12 - 9];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3132 = v83[1783 - (755 + 1026)];
									v81[v3132] = v81[v3132](v13(v81, v3132 + 1, v83[8 - 5]));
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[948 - (217 + 729)]] = v81[v83[3]] * v81[v83[1 + 3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[3 - 1]][v83[8 - 5]] = v81[v83[4 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3132 = v83[2];
									v81[v3132] = v81[v3132](v13(v81, v3132 + (3 - 2), v83[3]));
									v75 = v75 + (1681 - (619 + 1061));
									v83 = v71[v75];
									v3132 = v83[1 + 1];
									v3131 = v81[v83[3]];
									v81[v3132 + (1 - 0)] = v3131;
									v81[v3132] = v3131[v83[140 - (108 + 28)]];
									v75 = v75 + (1928 - (191 + 1736));
									v83 = v71[v75];
									v3132 = v83[765 - (757 + 6)];
									v81[v3132](v81[v3132 + 1 + 0]);
									v75 = v75 + (1256 - (337 + 918));
									v83 = v71[v75];
									v75 = v83[6 - 3];
								end
							elseif (v84 <= 181) then
								local v709;
								local v710;
								local v711;
								v81[v83[1 + 1]] = v62[v83[1 + 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v711 = v83[5 - 3];
								v710 = v81[v83[3]];
								v81[v711 + 1 + 0] = v710;
								v81[v711] = v710[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1678 - (754 + 922)]] = v83[637 - (487 + 147)];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1571 - (825 + 744)]] = v83[1 + 2];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[6 - 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v711 = v83[251 - (150 + 99)];
								v81[v711] = v81[v711]();
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1505 - (1335 + 168)]] = v83[942 - (256 + 683)];
								v75 = v75 + (319 - (33 + 285));
								v83 = v71[v75];
								v710 = v83[9 - 6];
								v709 = v81[v710];
								for v1486 = v710 + (1 - 0), v83[10 - 6] do
									v709 = v709 .. v81[v1486];
								end
								v81[v83[1 + 1]] = v709;
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[950 - (776 + 171)];
								v75 = v75 + (264 - (244 + 19));
								v83 = v71[v75];
								v711 = v83[2 - 0];
								v81[v711](v13(v81, v711 + (407 - (8 + 398)), v83[519 - (228 + 288)]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								do
									return;
								end
							elseif (v84 == (339 - 157)) then
								local v3182;
								local v3183;
								v3183 = v83[2];
								v81[v3183](v13(v81, v3183 + 1 + 0, v83[591 - (434 + 154)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[2 + 1]] = v81[v83[4 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3183 = v83[2];
								v3182 = v81[v83[3]];
								v81[v3183 + (3 - 2)] = v3182;
								v81[v3183] = v3182[v83[5 - 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[3 - 0];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[2 + 1] ~= (1665 - (810 + 855));
							else
								local v3196 = 0 + 0;
								local v3197;
								local v3198;
								while true do
									if (v3196 == 5) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[2 + 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v3196 = 6;
									end
									if (v3196 == 4) then
										v83 = v71[v75];
										v3198 = v83[1 + 1];
										v3197 = v81[v83[2 + 1]];
										v81[v3198 + (2 - 1)] = v3197;
										v81[v3198] = v3197[v83[4]];
										v3196 = 1619 - (463 + 1151);
									end
									if ((2481 > 2264) and (v3196 == (3 + 0))) then
										v62[v83[1978 - (29 + 1946)]] = v81[v83[1 + 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[517 - (337 + 178)]] = v62[v83[67 - (4 + 60)]];
										v75 = v75 + (3 - 2);
										v3196 = 4;
									end
									if (v3196 == (1 + 1)) then
										v83 = v71[v75];
										v3198 = v83[1118 - (425 + 691)];
										v81[v3198] = v81[v3198](v13(v81, v3198 + (1999 - (354 + 1644)), v83[3]));
										v75 = v75 + (842 - (499 + 342));
										v83 = v71[v75];
										v3196 = 2 + 1;
									end
									if (v3196 == (166 - (65 + 95))) then
										v81[v83[2 + 0]] = v83[1642 - (1403 + 236)];
										v75 = v75 + (1361 - (1117 + 243));
										v83 = v71[v75];
										v81[v83[2]] = v83[245 - (67 + 175)];
										v75 = v75 + 1 + 0;
										v3196 = 14 - 7;
									end
									if (v3196 == (731 - (387 + 344))) then
										v3197 = nil;
										v3198 = nil;
										v3198 = v83[976 - (654 + 320)];
										v3197 = v81[v83[4 - 1]];
										v81[v3198 + (432 - (276 + 155))] = v3197;
										v3196 = 2 - 1;
									end
									if (v3196 == (1 + 0)) then
										v81[v3198] = v3197[v83[4 + 0]];
										v75 = v75 + (775 - (65 + 709));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[1747 - (884 + 860)]];
										v75 = v75 + (1 - 0);
										v3196 = 2;
									end
									if (v3196 == (687 - (492 + 188))) then
										v83 = v71[v75];
										v3198 = v83[2 + 0];
										v81[v3198](v13(v81, v3198 + (3 - 2), v83[1 + 2]));
										break;
									end
								end
							end
						elseif (v84 <= (73 + 113)) then
							if (v84 <= (127 + 57)) then
								v81[v83[2 - 0]] = v81[v83[3]][v83[5 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[1 + 2]][v83[3 + 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[5 - 1]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[5 - 2]];
								v75 = v75 + (1252 - (1190 + 61));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1696 - (1448 + 245)]][v83[5 - 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[7 - 4]][v83[6 - 2]];
								v75 = v75 + (824 - (528 + 295));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1350 - (1224 + 123)]][v81[v83[4]]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[639 - (97 + 540)]] = v81[v83[3]][v83[1972 - (484 + 1484)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1554 - (1398 + 154)]] = v81[v83[3 + 0]][v83[4]];
							elseif (v84 > 185) then
								local v3199;
								v81[v83[4 - 2]] = v62[v83[11 - 8]];
								v75 = v75 + (531 - (354 + 176));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[7 - 4]][v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[2 + 1]][v83[3 + 1]];
								v75 = v75 + (1431 - (649 + 781));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[5 - 2]][v81[v83[11 - 7]]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[779 - (126 + 651)]] = v81[v83[5 - 2]][v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[8 - 5]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3199 = v83[1031 - (179 + 850)];
								v81[v3199](v81[v3199 + (785 - (34 + 750))]);
							else
								local v3214;
								v81[v83[307 - (302 + 3)]] = v62[v83[3 + 0]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[5 - 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v83[2 + 1];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2];
								v75 = v75 + (105 - (56 + 48));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3 + 0];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v3214 = v83[84 - (7 + 75)];
								v81[v3214] = v81[v3214](v13(v81, v3214 + 1 + 0, v83[3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[7 - 5]][v83[258 - (170 + 85)]] = v81[v83[353 - (288 + 61)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[2 + 1] ~= (0 + 0);
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v62[v83[740 - (330 + 407)]] = v81[v83[2]];
								v75 = v75 + (189 - (29 + 159));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v83[13 - 10];
							end
						elseif (v84 <= (329 - 141)) then
							if ((291 < 4681) and (v84 > (96 + 91))) then
								local v3232;
								local v3233;
								v81[v83[759 - (15 + 742)]] = v61[v83[3]];
								v75 = v75 + (451 - (414 + 36));
								v83 = v71[v75];
								v3233 = v83[1508 - (745 + 761)];
								v3232 = v81[v83[2 + 1]];
								v81[v3233 + 1 + 0] = v3232;
								v81[v3233] = v3232[v83[3 + 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v61[v83[1082 - (126 + 953)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1702 - (759 + 941)]] = v81[v83[2 + 1]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3233 = v83[1606 - (896 + 708)];
								v81[v3233] = v81[v3233](v13(v81, v3233 + 1 + 0, v83[3]));
								v75 = v75 + (1578 - (555 + 1022));
								v83 = v71[v75];
								if v81[v83[2]] then
									v75 = v75 + 1;
								else
									v75 = v83[1 + 2];
								end
							else
								local v3247 = 141 - (14 + 127);
								local v3248;
								local v3249;
								while true do
									if ((3338 > 1917) and (v3247 == (1 + 3))) then
										v81[v3249 + (796 - (141 + 654))] = v3248;
										v81[v3249] = v3248[v83[935 - (156 + 775)]];
										v75 = v75 + (1591 - (167 + 1423));
										v83 = v71[v75];
										v3247 = 13 - 8;
									end
									if (v3247 == (5 - 3)) then
										v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[6 - 3]][v83[3 + 1]];
										v3247 = 1883 - (1625 + 255);
									end
									if (v3247 == (7 + 0)) then
										v83 = v71[v75];
										v3249 = v83[1 + 1];
										v81[v3249](v13(v81, v3249 + 1, v83[1519 - (1026 + 490)]));
										break;
									end
									if ((v3247 == 5) or (2745 >= 3331)) then
										v81[v83[2 + 0]] = v62[v83[1737 - (16 + 1718)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3 + 0]][v83[11 - 7]];
										v3247 = 8 - 2;
									end
									if (v3247 == (578 - (168 + 410))) then
										v3248 = nil;
										v3249 = nil;
										v81[v83[1 + 1]] = v81[v83[13 - 10]][v83[811 - (134 + 673)]];
										v75 = v75 + 1 + 0;
										v3247 = 1 - 0;
									end
									if ((4477 > 1985) and (v3247 == (1914 - (1174 + 734)))) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[4 - 1]][v83[4]];
										v75 = v75 + (2 - 1);
										v3247 = 23 - 16;
									end
									if ((2 + 1) == v3247) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v3249 = v83[2 - 0];
										v3248 = v81[v83[1 + 2]];
										v3247 = 4;
									end
									if (v3247 == (3 - 2)) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[11 - 8]][v83[5 - 1]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v3247 = 2;
									end
								end
							end
						elseif (v84 > (30 + 159)) then
							local v3250;
							local v3251;
							local v3250, v3252;
							local v3253;
							local v3254;
							v81[v83[5 - 3]] = v62[v83[3 + 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v81[v83[515 - (289 + 223)]][v83[7 - 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v3254 = v83[1 + 1];
							v3253 = v81[v83[2 + 1]];
							v81[v3254 + (641 - (514 + 126))] = v3253;
							v81[v3254] = v3253[v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3254 = v83[2];
							v3250, v3252 = v74(v81[v3254](v81[v3254 + 1]));
							v76 = (v3252 + v3254) - (1 + 0);
							v3251 = 0 - 0;
							for v5867 = v3254, v76 do
								v3251 = v3251 + 1;
								v81[v5867] = v3250[v3251];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3254 = v83[2];
							v3250 = {v81[v3254](v13(v81, v3254 + 1, v76))};
							v3251 = 0;
							for v5870 = v3254, v83[3 + 1] do
								v3251 = v3251 + 1;
								v81[v5870] = v3250[v3251];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v75 = v83[1 + 2];
						else
							local v3266;
							v81[v83[4 - 2]] = v83[2 + 1];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3266 = v83[2 + 0];
							v81[v3266] = v81[v3266](v13(v81, v3266 + 1 + 0, v83[611 - (4 + 604)]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[6 - 4]] = v81[v83[10 - 7]];
							v75 = v75 + 1;
							v83 = v71[v75];
							for v5873 = v83[2], v83[13 - 10] do
								v81[v5873] = nil;
							end
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[1 + 2];
						end
					elseif (v84 <= (766 - 570)) then
						if (v84 <= (1638 - (344 + 1101))) then
							if (v84 <= (505 - 314)) then
								local v752;
								v81[v83[2]] = v81[v83[5 - 2]][v83[4 + 0]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v752 = v83[2];
								v81[v752] = v81[v752](v13(v81, v752 + (4 - 3), v83[3 - 0]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[303 - (57 + 244)]] = {};
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[8 - 5]];
								v75 = v75 + (1964 - (883 + 1080));
								v83 = v71[v75];
								v81[v83[2]] = v61[v83[203 - (138 + 62)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[12 - 9]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[86 - (62 + 21)]][v81[v83[4 + 0]]];
								v75 = v75 + (1450 - (1036 + 413));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v752 = v83[5 - 3];
								v81[v752] = v81[v752](v81[v752 + 1]);
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[4 - 1]][v83[7 - 3]];
							elseif ((v84 > (759 - 567)) or (643 == 1986)) then
								v81[v83[1474 - (649 + 823)]] = v62[v83[4 - 1]];
								v75 = v75 + (1564 - (1202 + 361));
								v83 = v71[v75];
								v81[v83[2]] = not v81[v83[10 - 7]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[3]] = v81[v83[3 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1711 - (263 + 1446)]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								if v81[v83[2 + 0]] then
									v75 = v75 + 1 + 0;
								else
									v75 = v83[746 - (387 + 356)];
								end
							else
								local v3284;
								local v3285;
								v81[v83[2 - 0]] = v81[v83[3]][v83[14 - 10]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[5 - 2]][v83[1720 - (646 + 1070)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3285 = v83[2];
								v3284 = v81[v83[1 + 2]];
								v81[v3285 + 1 + 0] = v3284;
								v81[v3285] = v3284[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v62[v83[1 + 2]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1100 - (288 + 809)]][v83[1657 - (471 + 1182)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1498 - (385 + 1110)]][v83[1613 - (1201 + 408)]];
								v75 = v75 + (1848 - (747 + 1100));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[614 - (269 + 342)] ~= 0;
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v3285 = v83[4 - 2];
								v81[v3285](v13(v81, v3285 + 1, v83[349 - (263 + 83)]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[6 - 4]] = v62[v83[824 - (659 + 162)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[217 - (109 + 106)]] = v81[v83[3]][v83[5 - 1]];
							end
						elseif (v84 <= 194) then
							local v769 = 1165 - (1157 + 8);
							local v770;
							local v771;
							while true do
								if (v769 == (515 - (179 + 332))) then
									v83 = v71[v75];
									v81[v83[839 - (705 + 132)]] = v81[v83[3 + 0]][v83[1 + 3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v771 = v83[7 - 5];
									v769 = 5;
								end
								if (v769 == (5 + 0)) then
									v770 = v81[v83[46 - (17 + 26)]];
									v81[v771 + (1963 - (1866 + 96))] = v770;
									v81[v771] = v770[v83[1 + 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v769 = 6;
								end
								if (v769 == (17 - 11)) then
									v771 = v83[3 - 1];
									v81[v771](v81[v771 + (2 - 1)]);
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[1 + 2];
									break;
								end
								if (v769 == (11 - 8)) then
									v75 = v75 + (1132 - (725 + 406));
									v83 = v71[v75];
									v771 = v83[4 - 2];
									v81[v771] = v81[v771](v13(v81, v771 + 1, v83[1 + 2]));
									v75 = v75 + (376 - (198 + 177));
									v769 = 10 - 6;
								end
								if ((v769 == 1) or (207 > 820)) then
									v81[v83[2 - 0]] = v62[v83[2 + 1]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v771 = v83[1 + 1];
									v770 = v81[v83[1 + 2]];
									v769 = 2 + 0;
								end
								if ((2581 <= 3648) and ((0 + 0) == v769)) then
									v770 = nil;
									v771 = nil;
									v62[v83[11 - 8]] = v81[v83[1722 - (1082 + 638)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v769 = 1;
								end
								if (v769 == (1364 - (1322 + 40))) then
									v81[v771 + (2 - 1)] = v770;
									v81[v771] = v770[v83[1652 - (435 + 1213)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[990 - (696 + 292)]] = v83[6 - 3];
									v769 = 13 - 10;
								end
							end
						elseif ((v84 > (873 - 678)) or (4347 <= 2866)) then
							local v3306 = v81[v83[4]];
							if not v3306 then
								v75 = v75 + (4 - 3);
							else
								local v6597 = 0;
								while true do
									if (v6597 == (1465 - (731 + 734))) then
										v81[v83[1573 - (1286 + 285)]] = v3306;
										v75 = v83[3];
										break;
									end
								end
							end
						else
							local v3307 = 0 - 0;
							local v3308;
							while true do
								if (v3307 == (5 + 5)) then
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[3 + 0]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[1263 - (1048 + 213)]] = v81[v83[5 - 2]][v83[1 + 3]];
									v75 = v75 + 1 + 0;
									v3307 = 7 + 4;
								end
								if (v3307 == (1359 - (223 + 1134))) then
									v83 = v71[v75];
									v3308 = v83[2];
									v81[v3308] = v81[v3308](v81[v3308 + (4 - 3)]);
									v75 = v75 + (1882 - (982 + 899));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v61[v83[3 + 0]];
									v3307 = 3;
								end
								if (v3307 == (1 - 0)) then
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[9 - 6]][v83[5 - 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1485 - (310 + 1173)]] = v81[v83[2 + 1]][v83[13 - 9]];
									v75 = v75 + 1;
									v3307 = 2;
								end
								if ((v3307 == (1451 - (968 + 483))) or (1635 >= 2690)) then
									v3308 = nil;
									v81[v83[226 - (37 + 187)]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]][v83[5 - 1]];
									v75 = v75 + 1;
									v3307 = 1;
								end
								if (v3307 == (508 - (204 + 290))) then
									v75 = v75 + (842 - (680 + 161));
									v83 = v71[v75];
									v75 = v83[1 + 2];
									break;
								end
								if (v3307 == (1074 - (979 + 89))) then
									v75 = v75 + (1875 - (802 + 1072));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[3 + 1]];
									v3307 = 7;
								end
								if (3 == v3307) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]][v83[11 - 7]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1996 - (1413 + 581)]] = v81[v83[1217 - (630 + 584)]][v83[12 - 8]];
									v3307 = 1132 - (184 + 944);
								end
								if ((8 + 3) == v3307) then
									v83 = v71[v75];
									v81[v83[955 - (927 + 26)]] = v83[8 - 5];
									v75 = v75 + (641 - (284 + 356));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[6 - 3];
									v75 = v75 + 1;
									v3307 = 10 + 2;
								end
								if ((3 + 1) == v3307) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[1131 - (211 + 917)]][v83[4 + 0]];
									v75 = v75 + (1796 - (1151 + 644));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[2 + 1]];
									v3307 = 8 - 3;
								end
								if ((4863 > 788) and ((1908 - (745 + 1155)) == v3307)) then
									v81[v3308] = v81[v3308](v81[v3308 + (2 - 1)]);
									v75 = v75 + (315 - (27 + 287));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[6 - 3];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v3307 = 23 - 14;
								end
								if (v3307 == 12) then
									v83 = v71[v75];
									v81[v83[218 - (148 + 68)]] = v83[1 + 2];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3308 = v83[2 + 0];
									v81[v3308] = v81[v3308](v13(v81, v3308 + 1, v83[3]));
									v3307 = 13 + 0;
								end
								if ((2454 >= 1741) and (v3307 == (1 + 4))) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1176 - (1064 + 110)]] = v81[v83[22 - (9 + 10)]][v83[1 + 3]];
									v75 = v75 + (1896 - (1219 + 676));
									v83 = v71[v75];
									v81[v83[1143 - (130 + 1011)]] = v83[1974 - (1639 + 332)];
									v3307 = 6;
								end
								if (v3307 == (17 - 8)) then
									v3308 = v83[1 + 1];
									v81[v3308] = v81[v3308](v13(v81, v3308 + 1 + 0, v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[250 - (229 + 19)]] = v81[v83[126 - (21 + 102)]] * v81[v83[1189 - (931 + 254)]];
									v75 = v75 + 1;
									v3307 = 2 + 8;
								end
								if (v3307 == 13) then
									v75 = v75 + (446 - (428 + 17));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[8 - 5]] * v81[v83[4]];
									v75 = v75 + (89 - (26 + 62));
									v83 = v71[v75];
									v81[v83[1082 - (173 + 907)]][v83[3 + 0]] = v81[v83[2 + 2]];
									v3307 = 14;
								end
								if (7 == v3307) then
									v75 = v75 + (132 - (71 + 60));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[3];
									v75 = v75 + (1229 - (774 + 454));
									v83 = v71[v75];
									v3308 = v83[1604 - (849 + 753)];
									v3307 = 8;
								end
							end
						end
					elseif (v84 <= (545 - 346)) then
						if (v84 <= 197) then
							local v772;
							local v773;
							local v774;
							v81[v83[4 - 2]] = v62[v83[3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v774 = v83[1218 - (861 + 355)];
							v773 = v81[v83[4 - 1]];
							v81[v774 + 1] = v773;
							v81[v774] = v773[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[8 - 5];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[1146 - (455 + 688)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[1347 - (481 + 863)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[2 + 1]][v83[1 + 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[1971 - (896 + 1072)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v773 = v83[7 - 4];
							v772 = v81[v773];
							for v1487 = v773 + 1 + 0, v83[9 - 5] do
								v772 = v772 .. v81[v1487];
							end
							v81[v83[790 - (50 + 738)]] = v772;
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v774 = v83[4 - 2];
							v81[v774](v13(v81, v774 + 1, v83[1556 - (1128 + 425)]));
						elseif ((407 <= 4682) and (v84 == (1 + 197))) then
							local v3309 = 456 - (398 + 58);
							local v3310;
							local v3311;
							local v3312;
							local v3313;
							local v3314;
							while true do
								if (v3309 == (712 - (194 + 518))) then
									v3310 = nil;
									v3311, v3312 = nil;
									v3313 = nil;
									v3314 = nil;
									v81[v83[377 - (42 + 333)]] = v62[v83[1447 - (1308 + 136)]];
									v75 = v75 + 1 + 0;
									v3309 = 121 - (56 + 64);
								end
								if ((702 - (251 + 445)) == v3309) then
									v83 = v71[v75];
									v81[v83[1 + 1]] = {};
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = {};
									break;
								end
								if (v3309 == (3 + 0)) then
									v83 = v71[v75];
									v3314 = v83[2];
									v3311, v3312 = v74(v81[v3314](v13(v81, v3314 + (1570 - (999 + 570)), v83[4 - 1])));
									v76 = (v3312 + v3314) - (2 - 1);
									v3310 = 0 - 0;
									for v9676 = v3314, v76 do
										v3310 = v3310 + 1;
										v81[v9676] = v3311[v3310];
									end
									v3309 = 1703 - (1476 + 223);
								end
								if (v3309 == (1841 - (597 + 1239))) then
									v3314 = v83[2];
									v81[v3314] = v81[v3314]();
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[887 - (590 + 294)]];
									v75 = v75 + 1;
									v3309 = 13 - 7;
								end
								if (v3309 == (793 - (433 + 356))) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v3314 = v83[1 + 1];
									v81[v3314] = v81[v3314](v13(v81, v3314 + (1 - 0), v76));
									v75 = v75 + (1257 - (791 + 465));
									v83 = v71[v75];
									v3309 = 1119 - (1048 + 66);
								end
								if ((v3309 == (1 + 1)) or (1110 >= 3142)) then
									v81[v3314 + (4 - 3)] = v3313;
									v81[v3314] = v3313[v83[2001 - (666 + 1331)]];
									v75 = v75 + (1901 - (854 + 1046));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[3 + 0];
									v75 = v75 + (2 - 1);
									v3309 = 3 + 0;
								end
								if (v3309 == (97 - (61 + 35))) then
									v83 = v71[v75];
									v81[v83[9 - 7]] = v62[v83[1 + 2]];
									v75 = v75 + (1819 - (1591 + 227));
									v83 = v71[v75];
									v3314 = v83[3 - 1];
									v3313 = v81[v83[794 - (173 + 618)]];
									v3309 = 1325 - (588 + 735);
								end
							end
						else
							local v3315 = v83[582 - (170 + 410)];
							local v3316 = {v81[v3315](v13(v81, v3315 + 1, v76))};
							local v3317 = 0 + 0;
							for v5905 = v3315, v83[3 + 1] do
								v3317 = v3317 + 1;
								v81[v5905] = v3316[v3317];
							end
						end
					elseif (v84 <= (498 - 297)) then
						if ((v84 > 200) or (1963 < 523)) then
							local v3318;
							local v3319;
							local v3320;
							v81[v83[2]] = v62[v83[3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3320 = v83[2 + 0];
							v3319 = v81[v83[555 - (362 + 190)]];
							v81[v3320 + (849 - (529 + 319))] = v3319;
							v81[v3320] = v3319[v83[2 + 2]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1202 - (829 + 371)]] = v83[4 - 1];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v62[v83[1679 - (700 + 976)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v3320 = v83[4 - 2];
							v3319 = v81[v83[3]];
							v81[v3320 + (1 - 0)] = v3319;
							v81[v3320] = v3319[v83[4 + 0]];
							v75 = v75 + (1642 - (1137 + 504));
							v83 = v71[v75];
							v81[v83[7 - 5]] = v83[6 - 3];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v3320 = v83[1 + 1];
							v81[v3320] = v81[v3320](v13(v81, v3320 + 1 + 0, v83[3]));
							v75 = v75 + (1615 - (327 + 1287));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[4 - 1]][v83[2 + 2]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1115 - (224 + 889)]] = v81[v83[3]][v83[1224 - (574 + 646)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[609 - (83 + 524)]] = v81[v83[771 - (577 + 191)]][v83[3 + 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3320 = v83[801 - (248 + 551)];
							v3319 = v81[v83[3]];
							v81[v3320 + (78 - (53 + 24))] = v3319;
							v81[v3320] = v3319[v83[4]];
							v75 = v75 + (134 - (12 + 121));
							v83 = v71[v75];
							v3320 = v83[5 - 3];
							v81[v3320] = v81[v3320](v81[v3320 + 1]);
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[608 - (164 + 442)]] = v83[1 + 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3319 = v83[8 - 5];
							v3318 = v81[v3319];
							for v5908 = v3319 + (2 - 1), v83[3 + 1] do
								v3318 = v3318 .. v81[v5908];
							end
							v81[v83[2 + 0]] = v3318;
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[3 + 0];
							v75 = v75 + (1248 - (585 + 662));
							v83 = v71[v75];
							v3320 = v83[2 + 0];
							v81[v3320](v13(v81, v3320 + 1 + 0, v83[3]));
							v75 = v75 + (581 - (126 + 454));
							v83 = v71[v75];
							do
								return;
							end
						else
							v81[v83[416 - (366 + 48)]] = v81[v83[1686 - (1633 + 50)]] + v83[4];
						end
					elseif ((1539 == 1539) and (v84 > 202)) then
						local v3358;
						local v3359;
						v3359 = v83[1103 - (892 + 209)];
						v81[v3359](v13(v81, v3359 + 1, v83[3 + 0]));
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2]][v83[3]] = v83[7 - 3];
						v75 = v75 + (661 - (495 + 165));
						v83 = v71[v75];
						v81[v83[5 - 3]][v83[7 - 4]] = v81[v83[4]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[3 - 1]] = v62[v83[2 + 1]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[584 - (431 + 151)]] = v81[v83[3 - 0]][v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[17 - (10 + 5)]] = v83[425 - (403 + 19)];
						v75 = v75 + (1772 - (454 + 1317));
						v83 = v71[v75];
						v81[v83[1 + 1]] = v83[1817 - (187 + 1627)];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v83[3];
						v75 = v75 + (1953 - (832 + 1120));
						v83 = v71[v75];
						v3359 = v83[5 - 3];
						v81[v3359] = v81[v3359](v13(v81, v3359 + 1, v83[1 + 2]));
						v75 = v75 + (1097 - (1001 + 95));
						v83 = v71[v75];
						v81[v83[31 - (4 + 25)]][v83[1164 - (904 + 257)]] = v81[v83[9 - 5]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 - 0]] = v62[v83[3]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[8 - 6]] = v81[v83[3]][v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v83[3 + 0];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1791 - (735 + 1054)]] = v83[1696 - (418 + 1275)];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v83[8 - 5];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v3359 = v83[2];
						v81[v3359] = v81[v3359](v13(v81, v3359 + 1, v83[1475 - (784 + 688)]));
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[4 - 2]][v83[1252 - (374 + 875)]] = v81[v83[9 - 5]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v62[v83[3]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[983 - (304 + 676)]][v83[2 + 2]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1360 - (517 + 841)]] = v83[869 - (356 + 510)];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2]] = v83[6 - 3];
						v75 = v75 + (1210 - (306 + 903));
						v83 = v71[v75];
						v81[v83[2]] = v83[1106 - (70 + 1033)];
						v75 = v75 + (4 - 3);
						v83 = v71[v75];
						v81[v83[2]] = v83[3];
						v75 = v75 + 1;
						v83 = v71[v75];
						v3359 = v83[2 + 0];
						v81[v3359] = v81[v3359](v13(v81, v3359 + 1 + 0, v83[2 + 1]));
						v75 = v75 + (805 - (523 + 281));
						v83 = v71[v75];
						v81[v83[924 - (241 + 681)]][v83[1101 - (358 + 740)]] = v81[v83[3 + 1]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[7 - 5]] = v62[v83[1044 - (1005 + 36)]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[705 - (533 + 169)]][v83[1 + 3]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2 + 0]] = v83[1 + 2];
						v75 = v75 + (1526 - (817 + 708));
						v83 = v71[v75];
						v81[v83[4 - 2]] = v83[3];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[1700 - (636 + 1062)]] = v83[11 - 8];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1660 - (1130 + 528)]] = v83[9 - 6];
						v75 = v75 + 1;
						v83 = v71[v75];
						v3359 = v83[2 + 0];
						v81[v3359] = v81[v3359](v13(v81, v3359 + (144 - (115 + 28)), v83[2 + 1]));
						v75 = v75 + (1382 - (1076 + 305));
						v83 = v71[v75];
						v81[v83[1771 - (1198 + 571)]][v83[1520 - (629 + 888)]] = v81[v83[4]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2]] = v62[v83[3]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[4 - 1]][v83[2 + 2]];
						v75 = v75 + (170 - (113 + 56));
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[3]][v83[1257 - (521 + 732)]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1540 - (99 + 1439)]][v83[2 + 1]] = v81[v83[12 - 8]];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[410 - (39 + 369)]][v83[1962 - (870 + 1089)]] = v83[799 - (564 + 231)];
						v75 = v75 + (1922 - (1893 + 28));
						v83 = v71[v75];
						v81[v83[2 + 0]] = v62[v83[529 - (140 + 386)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[2 + 1]][v83[2 + 2]];
						v75 = v75 + (1917 - (485 + 1431));
						v83 = v71[v75];
						v81[v83[2]] = v83[7 - 4];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1 + 1]] = v83[3 + 0];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[2]] = v83[1 + 2];
						v75 = v75 + (1182 - (945 + 236));
						v83 = v71[v75];
						v3359 = v83[4 - 2];
						v81[v3359] = v81[v3359](v13(v81, v3359 + 1 + 0, v83[6 - 3]));
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[4 - 2]][v83[3]] = v81[v83[2 + 2]];
						v75 = v75 + (514 - (383 + 130));
						v83 = v71[v75];
						v81[v83[905 - (643 + 260)]][v83[3]] = v83[4];
						v75 = v75 + (1448 - (109 + 1338));
						v83 = v71[v75];
						v81[v83[1 + 1]][v83[13 - 10]] = v83[748 - (338 + 406)];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[477 - (20 + 455)]] = v83[12 - 9] ~= (0 - 0);
						v75 = v75 + 1;
						v83 = v71[v75];
						v62[v83[78 - (39 + 36)]] = v81[v83[2 + 0]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[1708 - (609 + 1097)]] = v81[v83[3]][v83[662 - (543 + 115)]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v3359 = v83[2 + 0];
						v3358 = v81[v83[6 - 3]];
						v81[v3359 + (1 - 0)] = v3358;
						v81[v3359] = v3358[v83[11 - 7]];
					else
						v81[v83[1610 - (1559 + 49)]] = v81[v83[625 - (317 + 305)]][v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[5 - 3]] = v81[v83[3]][v83[16 - 12]];
						v75 = v75 + (828 - (509 + 318));
						v83 = v71[v75];
						v81[v83[1819 - (384 + 1433)]] = v62[v83[3 + 0]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[1 + 2]][v83[17 - 13]];
						v75 = v75 + (1535 - (198 + 1336));
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[1 + 2]][v83[1409 - (1149 + 256)]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2 - 0]] = v81[v83[1769 - (1280 + 486)]][v83[4]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2]][v83[4 - 1]] = v81[v83[4]];
					end
				elseif ((v84 <= (264 + 41)) or (2483 >= 2969)) then
					if (v84 <= (1862 - (786 + 822))) then
						if (v84 <= 228) then
							if (v84 <= (545 - 330)) then
								if ((914 >= 439) and (v84 <= (64 + 145))) then
									if (v84 <= (122 + 84)) then
										if ((v84 <= (186 + 18)) or (1214 >= 3416)) then
											local v797;
											local v798;
											v798 = v83[1462 - (1303 + 157)];
											v797 = v81[v83[2 + 1]];
											v81[v798 + (1416 - (505 + 910))] = v797;
											v81[v798] = v797[v83[10 - 6]];
											v75 = v75 + (869 - (548 + 320));
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[594 - (52 + 539)]];
											v75 = v75 + (556 - (378 + 177));
											v83 = v71[v75];
											v798 = v83[5 - 3];
											v81[v798] = v81[v798](v13(v81, v798 + (2 - 1), v83[2 + 1]));
											v75 = v75 + (208 - (108 + 99));
											v83 = v71[v75];
											v62[v83[2 + 1]] = v81[v83[2 - 0]];
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[5 - 2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v798 = v83[2 + 0];
											v797 = v81[v83[2 + 1]];
											v81[v798 + (2 - 1)] = v797;
											v81[v798] = v797[v83[8 - 4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v83[6 - 3];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[9 - 7]] = v83[3 + 0];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v83[842 - (823 + 16)];
											v75 = v75 + (279 - (19 + 259));
											v83 = v71[v75];
											v798 = v83[1822 - (1780 + 40)];
											v81[v798](v13(v81, v798 + 1, v83[6 - 3]));
										elseif (v84 > (504 - 299)) then
											if ((v83[3 - 1] < v81[v83[6 - 2]]) or (266 == 3552)) then
												v75 = v75 + 1;
											else
												v75 = v83[3];
											end
										else
											local v3446;
											local v3447;
											v3447 = v83[1 + 1];
											v81[v3447] = v81[v3447]();
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[8 - 6]][v83[1 + 2]] = v81[v83[15 - 11]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[4 - 2]] = v62[v83[8 - 5]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3447 = v83[2];
											v3446 = v81[v83[1183 - (825 + 355)]];
											v81[v3447 + 1] = v3446;
											v81[v3447] = v3446[v83[4]];
											v75 = v75 + (861 - (846 + 14));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v83[4 - 1];
											v75 = v75 + (371 - (237 + 133));
											v83 = v71[v75];
											v3447 = v83[1188 - (624 + 562)];
											v81[v3447] = v81[v3447](v13(v81, v3447 + (2 - 1), v83[3]));
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[3 + 0]][v83[806 - (700 + 102)]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[2]] = v83[3];
										end
									elseif (v84 <= (390 - 183)) then
										local v820 = 0 - 0;
										local v821;
										local v822;
										while true do
											if ((4639 >= 825) and (v820 == 6)) then
												v81[v822] = v81[v822](v13(v81, v822 + 1, v83[3 + 0]));
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v820 = 7;
											end
											if ((1889 <= 3613) and (v820 == (0 - 0))) then
												v821 = nil;
												v822 = nil;
												v62[v83[1 + 2]] = v81[v83[1278 - (735 + 541)]];
												v820 = 841 - (497 + 343);
											end
											if (v820 == (1791 - (995 + 788))) then
												v75 = v83[3];
												break;
											end
											if ((107 < 4383) and (v820 == (6 - 4))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v822 = v83[2];
												v820 = 4 - 1;
											end
											if ((v820 == (10 - 5)) or (3719 >= 3934)) then
												v75 = v75 + (199 - (37 + 161));
												v83 = v71[v75];
												v822 = v83[3 - 1];
												v820 = 16 - 10;
											end
											if (v820 == (1 + 0)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v62[v83[3]];
												v820 = 4 - 2;
											end
											if (v820 == (1275 - (357 + 915))) then
												v821 = v81[v83[678 - (50 + 625)]];
												v81[v822 + 1] = v821;
												v81[v822] = v821[v83[1884 - (1624 + 256)]];
												v820 = 8 - 4;
											end
											if (v820 == (5 - 1)) then
												v75 = v75 + (1524 - (180 + 1343));
												v83 = v71[v75];
												v81[v83[2]] = v83[3 + 0];
												v820 = 1347 - (1057 + 285);
											end
											if ((v820 == (1 + 6)) or (2111 == 11)) then
												v62[v83[6 - 3]] = v81[v83[2]];
												v75 = v75 + (1404 - (135 + 1268));
												v83 = v71[v75];
												v820 = 8;
											end
										end
									elseif ((4331 > 1057) and (v84 > 208)) then
										local v3465;
										local v3466;
										local v3465, v3467;
										local v3468;
										v81[v83[1423 - (1088 + 333)]] = not v81[v83[1685 - (1280 + 402)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v62[v83[3 + 0]] = v81[v83[1 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[19 - (11 + 6)]] = v61[v83[3 + 0]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[7 - 5]] = v61[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v3468 = v83[1738 - (1015 + 721)];
										v3465, v3467 = v74(v81[v3468](v81[v3468 + (2 - 1)]));
										v76 = (v3467 + v3468) - (243 - (169 + 73));
										v3466 = 0 - 0;
										for v5931 = v3468, v76 do
											v3466 = v3466 + (1897 - (1052 + 844));
											v81[v5931] = v3465[v3466];
										end
										v75 = v75 + 1;
										v83 = v71[v75];
										v3468 = v83[6 - 4];
										v3465 = {v81[v3468](v13(v81, v3468 + (1516 - (210 + 1305)), v76))};
										v3466 = 0;
										for v5934 = v3468, v83[2 + 2] do
											local v5935 = 0;
											while true do
												if ((1307 == 1307) and (v5935 == (0 - 0))) then
													v3466 = v3466 + (748 - (646 + 101));
													v81[v5934] = v3465[v3466];
													break;
												end
											end
										end
										v75 = v75 + 1;
										v83 = v71[v75];
										v75 = v83[379 - (12 + 364)];
									else
										local v3481 = 715 - (587 + 128);
										local v3482;
										local v3483;
										while true do
											if ((2970 < 3560) and (v3481 == (0 - 0))) then
												v3482 = nil;
												v3483 = nil;
												v3483 = v83[4 - 2];
												v3481 = 2 - 1;
											end
											if (v3481 == (234 - (196 + 31))) then
												v81[v3483](v13(v81, v3483 + 1 + 0, v83[540 - (227 + 310)]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3481 = 781 - (689 + 84);
											end
											if (v3481 == (1383 - (404 + 971))) then
												v75 = v83[6 - 3];
												break;
											end
											if ((v3481 == (1 + 3)) or (4965 <= 2997)) then
												v75 = v75 + (1398 - (764 + 633));
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[3 + 0]][v83[2 + 2]];
												v3481 = 211 - (114 + 92);
											end
											if ((2226 == 2226) and ((1 + 0) == v3481)) then
												v3482 = v81[v83[3]];
												v81[v3483 + 1] = v3482;
												v81[v3483] = v3482[v83[4]];
												v3481 = 531 - (4 + 525);
											end
											if (v3481 == (7 - 2)) then
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1315 - (636 + 677)]] = v83[9 - 6] ~= 0;
												v3481 = 1360 - (447 + 907);
											end
											if ((1801 - (303 + 1495)) == v3481) then
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[5 - 3]] = v81[v83[6 - 3]][v83[1820 - (1446 + 370)]];
												v3481 = 4;
											end
											if ((v3481 == 6) or (921 >= 4143)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v3483 = v83[553 - (245 + 306)];
												v3481 = 4 + 3;
											end
											if (v3481 == 2) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[10 - 7]];
												v3481 = 2 + 1;
											end
										end
									end
								elseif (v84 <= 212) then
									if (v84 <= (14 + 196)) then
										local v823;
										local v824;
										v824 = v83[1475 - (536 + 937)];
										v823 = v81[v83[3]];
										v81[v824 + 1] = v823;
										v81[v824] = v823[v83[10 - 6]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[155 - (143 + 9)];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v824 = v83[2];
										v81[v824] = v81[v824](v13(v81, v824 + 1, v83[1077 - (474 + 600)]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[7 - 4]][v83[12 - 8]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v824 = v83[5 - 3];
										v823 = v81[v83[3 + 0]];
										v81[v824 + (1 - 0)] = v823;
										v81[v824] = v823[v83[1 + 3]];
										v75 = v75 + (1489 - (49 + 1439));
										v83 = v71[v75];
										v824 = v83[2];
										v81[v824](v81[v824 + 1 + 0]);
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1992 - (769 + 1221)]] = v61[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1074 - (270 + 802)]] = v81[v83[1859 - (301 + 1555)]][v83[2 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[77 - (22 + 53)]] = v61[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[9 - 7]] = v81[v83[6 - 3]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1 + 2]][v83[9 - 5]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v824 = v83[2 + 0];
										v823 = v81[v83[3 + 0]];
										v81[v824 + 1 + 0] = v823;
										v81[v824] = v823[v83[96 - (41 + 51)]];
										v75 = v75 + (604 - (391 + 212));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[2 + 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v824 = v83[2 + 0];
										v81[v824] = v81[v824](v13(v81, v824 + (2 - 1), v83[5 - 2]));
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[4 - 2]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v824 = v83[7 - 5];
										v823 = v81[v83[3]];
										v81[v824 + 1 + 0] = v823;
										v81[v824] = v823[v83[4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[379 - (155 + 221)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v824 = v83[2];
										v81[v824] = v81[v824](v13(v81, v824 + 1, v83[1460 - (366 + 1091)]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v62[v83[3 + 0]] = v81[v83[288 - (90 + 196)]];
									elseif ((v84 > (1985 - (1710 + 64))) or (833 > 4024)) then
										local v3484;
										v81[v83[3 - 1]] = v62[v83[14 - 11]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[6 - 4]] = v81[v83[4 - 1]][v83[5 - 1]];
										v75 = v75 + (268 - (72 + 195));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[1181 - (28 + 1150)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[600 - (102 + 496)]] = v83[447 - (181 + 263)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[2 + 1];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v3484 = v83[2];
										v81[v3484] = v81[v3484](v13(v81, v3484 + 1 + 0, v83[3]));
										v75 = v75 + (1509 - (822 + 686));
										v83 = v71[v75];
										v81[v83[5 - 3]][v83[3]] = v81[v83[9 - 5]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v83[3] ~= 0;
										v75 = v75 + (862 - (252 + 609));
										v83 = v71[v75];
										v62[v83[1 + 2]] = v81[v83[2 + 0]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[960 - (578 + 380)]] = v83[1 + 2];
										v75 = v75 + (1717 - (1431 + 285));
										v83 = v71[v75];
										v75 = v83[2 + 1];
									else
										local v3503 = 0;
										local v3504;
										while true do
											if ((2718 > 2615) and (v3503 == 0)) then
												v3504 = v81[v83[7 - 3]];
												if v3504 then
													v75 = v75 + (1 - 0);
												else
													local v9727 = 0 - 0;
													while true do
														if (v9727 == 0) then
															v81[v83[3 - 1]] = v3504;
															v75 = v83[4 - 1];
															break;
														end
													end
												end
												break;
											end
										end
									end
								elseif (v84 <= (1325 - (1013 + 99))) then
									local v860;
									local v861;
									v861 = v83[3 - 1];
									v860 = v81[v83[960 - (449 + 508)]];
									v81[v861 + (1 - 0)] = v860;
									v81[v861] = v860[v83[4]];
									v75 = v75 + (1893 - (1562 + 330));
									v83 = v71[v75];
									v81[v83[1974 - (1870 + 102)]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v861 = v83[2];
									v81[v861] = v81[v861](v13(v81, v861 + 1 + 0, v83[3 - 0]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v62[v83[3 + 0]] = v81[v83[2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[3 + 0];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v62[v83[1 + 2]] = v81[v83[996 - (550 + 444)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]][v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3 - 0]][v83[584 - (544 + 36)]];
									v75 = v75 + (1232 - (70 + 1161));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[760 - (130 + 627)]][v81[v83[7 - 3]]];
								elseif (v84 == (525 - (121 + 190))) then
									local v3505;
									local v3506;
									local v3507;
									v81[v83[7 - 5]] = v62[v83[3 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3507 = v83[8 - 6];
									v3506 = v81[v83[325 - (255 + 67)]];
									v81[v3507 + 1 + 0] = v3506;
									v81[v3507] = v3506[v83[8 - 4]];
									v75 = v75 + (279 - (225 + 53));
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[1302 - (738 + 561)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v62[v83[3 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1613 - (1450 + 161)]] = v81[v83[1731 - (183 + 1545)]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1172 - (736 + 434)]] = v81[v83[3 + 0]][v83[18 - 14]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[41 - (32 + 7)]] = v81[v83[11 - 8]][v83[377 - (103 + 270)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]][v83[1457 - (1021 + 432)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[1416 - (153 + 1261)]] = v81[v83[1 + 2]][v83[2 + 2]];
									v75 = v75 + (889 - (800 + 88));
									v83 = v71[v75];
									v81[v83[2]] = v83[1 + 2];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v3506 = v83[824 - (358 + 463)];
									v3505 = v81[v3506];
									for v5936 = v3506 + (259 - (176 + 82)), v83[9 - 5] do
										v3505 = v3505 .. v81[v5936];
									end
									v81[v83[772 - (543 + 227)]] = v3505;
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3507 = v83[2];
									v81[v3507](v13(v81, v3507 + (3 - 2), v83[1789 - (1509 + 277)]));
									v75 = v75 + (1961 - (1453 + 507));
									v83 = v71[v75];
									do
										return;
									end
								else
									local v3537 = 0 + 0;
									local v3538;
									local v3539;
									while true do
										if ((4 == v3537) or (263 == 2006)) then
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v3539 = v83[7 - 5];
											v3537 = 1 + 4;
										end
										if (v3537 == (1 + 4)) then
											v81[v3539] = v81[v3539](v13(v81, v3539 + (2 - 1), v83[1034 - (22 + 1009)]));
											v75 = v75 + (4 - 3);
											v83 = v71[v75];
											v3537 = 6;
										end
										if (v3537 == (1940 - (245 + 1695))) then
											v3538 = nil;
											v3539 = nil;
											v81[v83[1037 - (611 + 424)]] = v81[v83[301 - (280 + 18)]][v83[3 + 1]];
											v3537 = 1 - 0;
										end
										if (v3537 == (4 - 2)) then
											v3538 = v81[v83[281 - (109 + 169)]];
											v81[v3539 + 1 + 0] = v3538;
											v81[v3539] = v3538[v83[2 + 2]];
											v3537 = 1 + 2;
										end
										if (v3537 == (1 + 0)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3539 = v83[2];
											v3537 = 7 - 5;
										end
										if ((170 <= 2405) and (v3537 == (7 - 4))) then
											v75 = v75 + (1343 - (875 + 467));
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[13 - 10];
											v3537 = 10 - 6;
										end
										if (v3537 == (19 - 13)) then
											if v81[v83[801 - (717 + 82)]] then
												v75 = v75 + (1021 - (693 + 327));
											else
												v75 = v83[1914 - (746 + 1165)];
											end
											break;
										end
									end
								end
							elseif ((v84 <= (1956 - (1473 + 262))) or (4527 < 739)) then
								if (v84 <= (208 + 10)) then
									if ((v84 <= 216) or (1768 == 4513)) then
										v81[v83[2]] = v81[v83[1 + 2]][v83[1877 - (874 + 999)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[7 - 4]][v83[4 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[12 - 9]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[4 - 1]][v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]][v83[3]] = v81[v83[3 + 1]];
										v75 = v75 + (459 - (388 + 70));
										v83 = v71[v75];
										v75 = v83[3];
									elseif ((3017 == 3017) and (v84 > (208 + 9))) then
										local v3540 = 0;
										local v3541;
										local v3542;
										local v3543;
										while true do
											if (v3540 == (6 + 0)) then
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[3];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[585 - (319 + 263)]];
												v75 = v75 + (3 - 2);
												v3540 = 12 - 5;
											end
											if (v3540 == (10 + 0)) then
												v83 = v71[v75];
												v3543 = v83[1 + 1];
												v81[v3543](v13(v81, v3543 + 1 + 0, v83[817 - (94 + 720)]));
												v75 = v75 + 1;
												v83 = v71[v75];
												do
													return;
												end
												break;
											end
											if (v3540 == (378 - (78 + 300))) then
												v3541 = nil;
												v3542 = nil;
												v3543 = nil;
												v81[v83[1919 - (774 + 1143)]] = v62[v83[2 + 1]];
												v75 = v75 + (192 - (18 + 173));
												v83 = v71[v75];
												v3540 = 2 - 1;
											end
											if (v3540 == 7) then
												v83 = v71[v75];
												v81[v83[2 - 0]] = v81[v83[7 - 4]][v83[4]];
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v81[v83[1487 - (677 + 808)]] = v81[v83[1 + 2]][v83[974 - (528 + 442)]];
												v75 = v75 + 1;
												v3540 = 23 - 15;
											end
											if ((3533 >= 2717) and (v3540 == (351 - (116 + 231)))) then
												v3543 = v83[2 + 0];
												v3542 = v81[v83[2 + 1]];
												v81[v3543 + (3 - 2)] = v3542;
												v81[v3543] = v3542[v83[1 + 3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v3540 = 1475 - (1242 + 228);
											end
											if ((v3540 == (7 - 4)) or (3626 == 383)) then
												v81[v83[846 - (320 + 524)]] = v62[v83[6 - 3]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[9 - 7]] = v81[v83[1 + 2]][v83[11 - 7]];
												v75 = v75 + (476 - (63 + 412));
												v83 = v71[v75];
												v3540 = 1868 - (1299 + 565);
											end
											if (v3540 == (5 - 3)) then
												v81[v83[1 + 1]] = v83[12 - 9];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[2 + 1];
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v3540 = 331 - (79 + 249);
											end
											if (v3540 == 9) then
												for v9681 = v3542 + 1, v83[10 - 6] do
													v3541 = v3541 .. v81[v9681];
												end
												v81[v83[2]] = v3541;
												v75 = v75 + (1631 - (305 + 1325));
												v83 = v71[v75];
												v81[v83[1730 - (1585 + 143)]] = v83[9 - 6];
												v75 = v75 + (1831 - (1727 + 103));
												v3540 = 10;
											end
											if (v3540 == (15 - 10)) then
												v3543 = v83[2 + 0];
												v81[v3543] = v81[v3543](v81[v3543 + 1]);
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[6 - 4]] = #v81[v83[277 - (135 + 139)]];
												v75 = v75 + 1;
												v3540 = 6 + 0;
											end
											if (1 == v3540) then
												v3543 = v83[2 - 0];
												v3542 = v81[v83[3 + 0]];
												v81[v3543 + 1 + 0] = v3542;
												v81[v3543] = v3542[v83[1 + 3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3540 = 5 - 3;
											end
											if (v3540 == (1712 - (1084 + 620))) then
												v83 = v71[v75];
												v81[v83[1055 - (404 + 649)]] = v83[817 - (318 + 496)];
												v75 = v75 + (1883 - (1730 + 152));
												v83 = v71[v75];
												v3542 = v83[9 - 6];
												v3541 = v81[v3542];
												v3540 = 31 - 22;
											end
										end
									else
										local v3544 = 1861 - (527 + 1334);
										local v3545;
										local v3546;
										local v3547;
										local v3548;
										while true do
											if (v3544 == (2 + 2)) then
												v76 = (v3547 + v3548) - (1947 - (464 + 1482));
												v3546 = 0 - 0;
												for v9682 = v3548, v76 do
													local v9683 = 0 + 0;
													while true do
														if ((2157 > 636) and (v9683 == (569 - (485 + 84)))) then
															v3546 = v3546 + 1;
															v81[v9682] = v3545[v3546];
															break;
														end
													end
												end
												v3544 = 5;
											end
											if ((v3544 == 1) or (755 <= 751)) then
												v3548 = nil;
												v81[v83[1 + 1]] = v81[v83[3 + 0]];
												v75 = v75 + 1 + 0;
												v3544 = 2;
											end
											if (v3544 == (0 + 0)) then
												v3545 = nil;
												v3546 = nil;
												v3545, v3547 = nil;
												v3544 = 1 + 0;
											end
											if ((v3544 == (12 - 7)) or (2489 == 4884)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v3548 = v83[1 + 1];
												v3544 = 16 - 10;
											end
											if (v3544 == (1003 - (359 + 642))) then
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[1 + 2]];
												v75 = v75 + 1 + 0;
												v3544 = 1347 - (564 + 780);
											end
											if ((2782 == 2782) and (v3544 == (10 - 7))) then
												v83 = v71[v75];
												v3548 = v83[1 + 1];
												v3545, v3547 = v74(v81[v3548](v81[v3548 + 1 + 0]));
												v3544 = 6 - 2;
											end
											if (v3544 == (10 - 3)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v75 = v83[7 - 4];
												break;
											end
											if (v3544 == 6) then
												v3545 = {v81[v3548](v13(v81, v3548 + 1, v76))};
												v3546 = 1426 - (909 + 517);
												for v9684 = v3548, v83[4] do
													local v9685 = 459 - (432 + 27);
													while true do
														if (0 == v9685) then
															v3546 = v3546 + 1;
															v81[v9684] = v3545[v3546];
															break;
														end
													end
												end
												v3544 = 7;
											end
										end
									end
								elseif ((2909 >= 2245) and (v84 <= (1955 - (69 + 1667)))) then
									local v892;
									local v893;
									local v894;
									v894 = v83[2];
									v81[v894] = v81[v894](v13(v81, v894 + 1 + 0, v83[125 - (16 + 106)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[1256 - (1178 + 74)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[450 - (312 + 135)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v893 = v83[1 + 2];
									v892 = v81[v893];
									for v1488 = v893 + 1, v83[13 - 9] do
										v892 = v892 .. v81[v1488];
									end
									v81[v83[2]] = v892;
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1831 - (492 + 1337)]] = v83[1 + 2];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v894 = v83[1392 - (814 + 576)];
									v81[v894](v13(v81, v894 + (1 - 0), v83[7 - 4]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									do
										return;
									end
								elseif ((4909 > 846) and (v84 > 220)) then
									local v3549;
									v3549 = v83[5 - 3];
									v81[v3549] = v81[v3549](v81[v3549 + (2 - 1)]);
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[7 - 4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = {};
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[8 - 5]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1362 - (978 + 381)];
								else
									local v3558;
									v81[v83[1 + 1]] = v83[1 + 2];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[2 + 1];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v3558 = v83[2 + 0];
									v81[v3558] = v81[v3558](v13(v81, v3558 + 1, v83[6 - 3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]][v83[3]] = v81[v83[3 + 1]];
								end
							elseif ((v84 <= 224) or (4397 <= 26)) then
								if (v84 <= 222) then
									local v906;
									local v907;
									v907 = v83[2];
									v906 = v81[v83[2 + 1]];
									v81[v907 + 1] = v906;
									v81[v907] = v906[v83[1 + 3]];
									v75 = v75 + (570 - (397 + 172));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[3];
									v75 = v75 + (1118 - (267 + 850));
									v83 = v71[v75];
									v907 = v83[2 + 0];
									v81[v907] = v81[v907](v13(v81, v907 + (3 - 2), v83[997 - (41 + 953)]));
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[822 - (817 + 3)]] = v81[v83[1388 - (867 + 518)]][v83[11 - 7]];
									v75 = v75 + (331 - (256 + 74));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[3]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[189 - (111 + 76)]] = v81[v83[3 + 0]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1053 - (100 + 951)]] = v81[v83[628 - (369 + 256)]][v83[17 - 13]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v907 = v83[65 - (25 + 38)];
									v81[v907] = v81[v907](v13(v81, v907 + (1037 - (890 + 146)), v83[7 - 4]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[3]] = v81[v83[2 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[1587 - (549 + 1035)]] = v81[v83[2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v62[v83[1 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v907 = v83[2];
									v906 = v81[v83[964 - (546 + 415)]];
									v81[v907 + (1025 - (175 + 849))] = v906;
									v81[v907] = v906[v83[1668 - (734 + 930)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1417 - (1093 + 322)]] = v62[v83[11 - 8]];
									v75 = v75 + (1302 - (1256 + 45));
									v83 = v71[v75];
									v907 = v83[1847 - (66 + 1779)];
									v906 = v81[v83[1776 - (920 + 853)]];
									v81[v907 + 1] = v906;
									v81[v907] = v906[v83[62 - (6 + 52)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[6 - 3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v907 = v83[2 + 0];
									v81[v907] = v81[v907](v13(v81, v907 + 1 + 0, v83[90 - (11 + 76)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[7 - 4]][v83[826 - (560 + 262)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1859 - (12 + 1845)]] = v81[v83[3 + 0]][v83[1321 - (1278 + 39)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[8 - 4]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[2 + 1]];
									v75 = v75 + (1537 - (385 + 1151));
									v83 = v71[v75];
									v81[v83[1452 - (240 + 1210)]] = {};
									v75 = v75 + (1666 - (816 + 849));
									v83 = v71[v75];
									v81[v83[1856 - (99 + 1755)]] = v62[v83[3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[786 - (424 + 360)]] = v81[v83[1377 - (41 + 1333)]][v83[4]];
									v75 = v75 + (546 - (161 + 384));
									v83 = v71[v75];
									v81[v83[933 - (355 + 576)]] = v81[v83[690 - (348 + 339)]][v83[4]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[14 - 11]][v83[472 - (285 + 183)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[1974 - (928 + 1042)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1578 - (545 + 1031)]] = v81[v83[8 - 5]][v83[4]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v62[v83[928 - (345 + 580)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[313 - (136 + 173)]];
									v75 = v75 + (1904 - (1448 + 455));
									v83 = v71[v75];
									v81[v83[2]] = v83[8 - 5];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[2 + 1];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1563 - (1137 + 424)]] = v83[1930 - (372 + 1555)];
									v75 = v75 + (382 - (174 + 207));
									v83 = v71[v75];
									v907 = v83[1 + 1];
									v81[v907] = v81[v907](v13(v81, v907 + 1 + 0, v83[1 + 2]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[73 - (65 + 6)]] = v81[v83[1314 - (1041 + 270)]] * v81[v83[6 - 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[9 - 6]] = v81[v83[1714 - (222 + 1488)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v907 = v83[2 + 0];
									v81[v907] = v81[v907](v13(v81, v907 + (1523 - (1023 + 499)), v83[4 - 1]));
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v907 = v83[2 + 0];
									v906 = v81[v83[8 - 5]];
									v81[v907 + 1 + 0] = v906;
									v81[v907] = v906[v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v907 = v83[809 - (134 + 673)];
									v81[v907](v81[v907 + (1058 - (810 + 247))]);
									v75 = v75 + (1461 - (753 + 707));
									v83 = v71[v75];
									v75 = v83[3];
								elseif ((v84 > (526 - 303)) or (539 > 4966)) then
									local v3569;
									v81[v83[3 - 1]] = v62[v83[3]];
									v75 = v75 + (601 - (462 + 138));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3 + 0]][v83[1 + 3]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v83[663 - (642 + 18)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[980 - (155 + 823)]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1455 - (799 + 654)]] = v83[6 - 3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v3569 = v83[2 - 0];
									v81[v3569] = v81[v3569](v13(v81, v3569 + (634 - (527 + 106)), v83[5 - 2]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]][v83[3]] = v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[3 + 0]] = v83[4];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[3 + 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v75 = v83[736 - (589 + 144)];
								else
									v81[v83[2 + 0]] = v62[v83[3]];
								end
							elseif (v84 <= (10 + 216)) then
								if ((1787 <= 4036) and (v84 == 225)) then
									local v3592;
									v81[v83[530 - (179 + 349)]] = v81[v83[12 - 9]][v83[10 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[2 + 1];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v3592 = v83[2];
									v81[v3592] = v81[v3592](v81[v3592 + 1 + 0]);
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[1 + 2]] = v81[v83[490 - (242 + 244)]];
									v75 = v75 + (408 - (303 + 104));
									v83 = v71[v75];
									v81[v83[6 - 4]] = v62[v83[2 + 1]];
									v75 = v75 + (644 - (411 + 232));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[11 - 7]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1 + 2];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[484 - (164 + 317)];
									v75 = v75 + (100 - (65 + 34));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[2 + 1];
								else
									v81[v83[320 - (61 + 257)]] = v81[v83[1882 - (398 + 1481)]] / v83[8 - 4];
								end
							elseif (v84 > (519 - 292)) then
								local v3612 = 0 + 0;
								local v3613;
								local v3614;
								while true do
									if ((727 < 3643) and (v3612 == 7)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v3614 = v83[688 - (338 + 348)];
										v3612 = 1386 - (401 + 977);
									end
									if (v3612 == (4 - 2)) then
										v3613 = v81[v83[3 + 0]];
										v81[v3614 + (46 - (17 + 28))] = v3613;
										v81[v3614] = v3613[v83[189 - (27 + 158)]];
										v3612 = 8 - 5;
									end
									if (v3612 == (0 + 0)) then
										v3613 = nil;
										v3614 = nil;
										v81[v83[1 + 1]] = v62[v83[1 + 2]];
										v3612 = 1;
									end
									if (v3612 == (1302 - (372 + 921))) then
										do
											return;
										end
										break;
									end
									if (v3612 == 1) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v3614 = v83[485 - (350 + 133)];
										v3612 = 2 + 0;
									end
									if ((v3612 == (3 + 5)) or (858 >= 2455)) then
										v81[v3614](v13(v81, v3614 + 1 + 0, v83[1541 - (1432 + 106)]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v3612 = 13 - 4;
									end
									if (v3612 == (5 + 1)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1448 - (1075 + 371)]] = v83[3];
										v3612 = 26 - 19;
									end
									if ((9 - 5) == v3612) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[10 - 7]];
										v3612 = 5 + 0;
									end
									if (v3612 == (5 + 0)) then
										v75 = v75 + (1548 - (234 + 1313));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[912 - (597 + 311)]];
										v3612 = 33 - (13 + 14);
									end
									if ((4512 > 2388) and (v3612 == 3)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[1056 - (713 + 340)];
										v3612 = 9 - 5;
									end
								end
							else
								local v3615;
								local v3616;
								v81[v83[2 + 0]][v83[3]] = v83[9 - 5];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[353 - (265 + 86)]] = v62[v83[9 - 6]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3616 = v83[873 - (747 + 124)];
								v3615 = v81[v83[1459 - (692 + 764)]];
								v81[v3616 + (3 - 2)] = v3615;
								v81[v3616] = v3615[v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3616 = v83[7 - 5];
								v81[v3616] = v81[v3616](v81[v3616 + 1 + 0]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[6 - 3]] = v81[v83[2]];
								v75 = v75 + (1031 - (283 + 747));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3];
							end
						elseif (v84 <= (1146 - (816 + 89))) then
							if (v84 <= (905 - 671)) then
								if (v84 <= (42 + 189)) then
									if (v84 <= (1307 - (709 + 369))) then
										local v970 = 0 - 0;
										local v971;
										local v972;
										while true do
											if (v970 == (4 - 2)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v972 = v83[3 - 1];
												v81[v972] = v81[v972](v81[v972 + 1 + 0]);
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v970 = 3 + 0;
											end
											if ((1055 == 1055) and (v970 == (1 + 3))) then
												v81[v83[701 - (478 + 221)]] = v62[v83[3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[774 - (607 + 165)]] = v62[v83[3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v970 = 5;
											end
											if ((1244 - (1108 + 136)) == v970) then
												v971 = nil;
												v972 = nil;
												v972 = v83[5 - 3];
												v971 = v81[v83[6 - 3]];
												v81[v972 + (2 - 1)] = v971;
												v81[v972] = v971[v83[640 - (352 + 284)]];
												v970 = 1 + 0;
											end
											if ((2279 > 1333) and (v970 == (892 - (352 + 539)))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[7 - 5]] = v62[v83[2 + 1]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[4 - 2]] = v81[v83[769 - (714 + 52)]][v83[4 + 0]];
												v970 = 1815 - (1482 + 331);
											end
											if (v970 == 5) then
												v81[v83[1203 - (766 + 435)]] = v81[v83[1 + 2]][v83[1823 - (62 + 1757)]];
												v75 = v75 + (1369 - (833 + 535));
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
												break;
											end
											if (v970 == 3) then
												v81[v83[140 - (5 + 133)]] = v62[v83[3]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[522 - (393 + 127)]] = v81[v83[3]][v83[1060 - (705 + 351)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v970 = 1 + 3;
											end
										end
									elseif (v84 > 230) then
										v81[v83[1 + 1]] = v81[v83[3]] + v81[v83[4 + 0]];
									else
										local v3633 = 1157 - (414 + 743);
										local v3634;
										local v3635;
										while true do
											if ((1402 <= 3836) and (v3633 == (3 + 0))) then
												v3635 = v83[474 - (65 + 407)];
												v81[v3635] = v81[v3635](v13(v81, v3635 + (1 - 0), v83[3]));
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[2]][v83[14 - 11]] = v81[v83[14 - 10]];
												v75 = v75 + (1545 - (116 + 1428));
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[12 - 9]];
												v75 = v75 + (1303 - (79 + 1223));
												v3633 = 4 + 0;
											end
											if (v3633 == (399 - (353 + 35))) then
												v3635 = v83[2];
												v81[v3635] = v81[v3635](v13(v81, v3635 + 1, v83[5 - 2]));
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1942 - (490 + 1450)]][v83[1349 - (778 + 568)]] = v81[v83[4 + 0]];
												v75 = v75 + (1295 - (914 + 380));
												v83 = v71[v75];
												v81[v83[1 + 1]] = v62[v83[535 - (126 + 406)]];
												v75 = v75 + (1191 - (655 + 535));
												v3633 = 2 + 10;
											end
											if (v3633 == (29 - 19)) then
												v81[v83[2]] = v83[7 - 4];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[1301 - (711 + 587)];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[885 - (168 + 715)]] = v83[5 - 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v3633 = 7 + 4;
											end
											if (v3633 == 9) then
												v81[v83[2 - 0]] = v62[v83[295 - (232 + 60)]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[39 - (22 + 15)]] = v81[v83[6 - 3]][v83[2 + 2]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1175 - (797 + 376)]] = v83[3 + 0];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3633 = 10;
											end
											if ((v3633 == (2 + 0)) or (82 > 4474)) then
												v81[v83[8 - 6]] = v83[2 + 1];
												v75 = v75 + (4 - 3);
												v83 = v71[v75];
												v81[v83[5 - 3]] = v83[10 - 7];
												v75 = v75 + (1378 - (1071 + 306));
												v83 = v71[v75];
												v81[v83[5 - 3]] = v83[1194 - (412 + 779)];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v3633 = 6 - 3;
											end
											if ((v3633 == (627 - (427 + 185))) or (3876 < 2241)) then
												v83 = v71[v75];
												v3635 = v83[1653 - (1444 + 207)];
												v81[v3635] = v81[v3635](v13(v81, v3635 + (2 - 1), v83[3]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[4 - 2]][v83[3]] = v81[v83[4]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[641 - (261 + 378)]][v83[3]] = v83[1 + 3];
												v3633 = 2 + 14;
											end
											if (v3633 == (44 - 31)) then
												v83 = v71[v75];
												v81[v83[3 - 1]][v83[351 - (22 + 326)]] = v83[13 - 9];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[1216 - (836 + 378)]] = v62[v83[2 + 1]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[7 - 4]][v83[6 - 2]];
												v75 = v75 + (3 - 2);
												v3633 = 14;
											end
											if (v3633 == (1 + 7)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v3635 = v83[1289 - (742 + 545)];
												v81[v3635] = v81[v3635](v13(v81, v3635 + 1, v83[6 - 3]));
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[2]][v83[1204 - (334 + 867)]] = v81[v83[9 - 5]];
												v75 = v75 + (1405 - (317 + 1087));
												v83 = v71[v75];
												v3633 = 3 + 6;
											end
											if ((4930 > 3201) and (v3633 == (26 - 9))) then
												v75 = v75 + (671 - (97 + 573));
												v83 = v71[v75];
												v81[v83[7 - 5]] = v81[v83[1 + 2]][v83[4]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3635 = v83[2];
												v3634 = v81[v83[3]];
												v81[v3635 + (2 - 1)] = v3634;
												v81[v3635] = v3634[v83[3 + 1]];
												break;
											end
											if ((v3633 == (1340 - (1234 + 101))) or (2497 > 4157)) then
												v83 = v71[v75];
												v81[v83[2]] = v83[4 - 1];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3635 = v83[8 - 6];
												v81[v3635] = v81[v3635](v13(v81, v3635 + (2 - 1), v83[1203 - (711 + 489)]));
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[7 - 5]][v83[3]] = v81[v83[4 + 0]];
												v3633 = 6;
											end
											if ((0 - 0) == v3633) then
												v3634 = nil;
												v3635 = nil;
												v3635 = v83[4 - 2];
												v81[v3635](v13(v81, v3635 + (643 - (483 + 159)), v83[3 + 0]));
												v75 = v75 + (318 - (200 + 117));
												v83 = v71[v75];
												v81[v83[49 - (5 + 42)]][v83[9 - 6]] = v83[4];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v3633 = 4 - 3;
											end
											if ((542 - (298 + 238)) == v3633) then
												v75 = v75 + (1822 - (1370 + 451));
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[1264 - (493 + 768)]][v83[1181 - (622 + 555)]];
												v75 = v75 + (620 - (581 + 38));
												v83 = v71[v75];
												v81[v83[2]] = v83[2 + 1];
												v3633 = 7;
											end
											if ((3663 > 1798) and (v3633 == (16 - 9))) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[8 - 6]] = v83[3];
												v75 = v75 + (1923 - (567 + 1355));
												v83 = v71[v75];
												v81[v83[1566 - (801 + 763)]] = v83[1 + 2];
												v75 = v75 + (405 - (251 + 153));
												v83 = v71[v75];
												v81[v83[904 - (709 + 193)]] = v83[1890 - (737 + 1150)];
												v3633 = 4 + 4;
											end
											if ((184 < 3810) and (v3633 == (1046 - (755 + 277)))) then
												v83 = v71[v75];
												v81[v83[463 - (182 + 279)]] = v83[363 - (323 + 37)];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[3];
												v75 = v75 + (1016 - (992 + 23));
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[8 - 5];
												v75 = v75 + (646 - (269 + 376));
												v3633 = 32 - 17;
											end
											if (v3633 == (487 - (169 + 302))) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[1 + 1]][v83[1330 - (623 + 704)]] = v83[2 + 2];
												v75 = v75 + (818 - (420 + 397));
												v83 = v71[v75];
												v81[v83[2]] = v83[1 + 2] ~= (0 + 0);
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v62[v83[8 - 5]] = v81[v83[9 - 7]];
												v3633 = 67 - 50;
											end
											if ((1 + 0) == v3633) then
												v81[v83[1 + 1]][v83[8 - 5]] = v81[v83[9 - 5]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[4 - 2]] = v62[v83[1061 - (440 + 618)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[3]][v83[4]];
												v75 = v75 + (1036 - (593 + 442));
												v83 = v71[v75];
												v3633 = 1 + 1;
											end
											if (v3633 == (17 - 5)) then
												v83 = v71[v75];
												v81[v83[1046 - (801 + 243)]] = v81[v83[3]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[5 - 3]] = v81[v83[3 - 0]][v83[4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[3 - 1]][v83[3]] = v81[v83[4 + 0]];
												v75 = v75 + (123 - (41 + 81));
												v3633 = 45 - 32;
											end
											if (v3633 == (510 - (145 + 361))) then
												v83 = v71[v75];
												v81[v83[2 + 0]] = v81[v83[5 - 2]][v83[160 - (28 + 128)]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v83[4 - 1];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v81[v83[1 + 1]] = v83[3];
												v75 = v75 + (86 - (33 + 52));
												v3633 = 8 - 3;
											end
										end
									end
								elseif (v84 <= 232) then
									local v973;
									local v974;
									v81[v83[2 + 0]] = v62[v83[14 - 11]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v974 = v83[6 - 4];
									v973 = v81[v83[2 + 1]];
									v81[v974 + 1] = v973;
									v81[v974] = v973[v83[1350 - (1135 + 211)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[11 - 8];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v974 = v83[1097 - (380 + 715)];
									v81[v974] = v81[v974](v13(v81, v974 + 1 + 0, v83[1971 - (462 + 1506)]));
									v75 = v75 + (1823 - (1182 + 640));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[10 - 6]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v974 = v83[1 + 1];
									v973 = v81[v83[13 - 10]];
									v81[v974 + 1] = v973;
									v81[v974] = v973[v83[2 + 2]];
									v75 = v75 + (344 - (323 + 20));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v974 = v83[2 + 0];
									v81[v974] = v81[v974](v13(v81, v974 + (2 - 1), v83[3]));
									v75 = v75 + (1175 - (769 + 405));
									v83 = v71[v75];
									v62[v83[11 - 8]] = v81[v83[2]];
									v75 = v75 + (86 - (9 + 76));
									v83 = v71[v75];
									v75 = v83[257 - (244 + 10)];
								elseif (v84 == (33 + 200)) then
									local v3636 = 0;
									local v3637;
									while true do
										if ((v3636 == (1310 - (601 + 704))) or (4661 <= 1137)) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v61[v83[525 - (23 + 499)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[310 - (35 + 271)]];
											v75 = v75 + (1 - 0);
											v3636 = 7 - 1;
										end
										if (((3 + 4) == v3636) or (1661 == 2204)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[8 - 6]][v83[1 + 2]] = v81[v83[3 + 1]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[6 - 4]] = v83[1 + 2];
											break;
										end
										if (v3636 == (2 + 0)) then
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[8 - 5]][v83[11 - 7]];
											v75 = v75 + (1876 - (1136 + 739));
											v83 = v71[v75];
											v81[v83[2]] = v61[v83[11 - 8]];
											v75 = v75 + 1;
											v3636 = 5 - 2;
										end
										if (v3636 == 3) then
											v83 = v71[v75];
											v81[v83[576 - (125 + 449)]] = v62[v83[7 - 4]];
											v75 = v75 + (880 - (96 + 783));
											v83 = v71[v75];
											v81[v83[1030 - (888 + 140)]] = v81[v83[3]][v83[3 + 1]];
											v75 = v75 + (63 - (41 + 21));
											v3636 = 591 - (570 + 17);
										end
										if ((2 + 4) == v3636) then
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[2 + 1]] + v81[v83[2 + 2]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v3637 = v83[3 - 1];
											v81[v3637] = v81[v3637](v13(v81, v3637 + (3 - 2), v83[7 - 4]));
											v3636 = 7;
										end
										if (v3636 == (0 + 0)) then
											v3637 = nil;
											v81[v83[1 + 1]][v83[3]] = v83[759 - (321 + 434)];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v61[v83[3]];
											v75 = v75 + 1 + 0;
											v3636 = 1287 - (137 + 1149);
										end
										if (v3636 == (8 - 4)) then
											v83 = v71[v75];
											v81[v83[2]] = v61[v83[1826 - (566 + 1257)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[680 - (391 + 286)]][v83[4]];
											v75 = v75 + (1375 - (384 + 990));
											v3636 = 618 - (505 + 108);
										end
										if ((3185 >= 2052) and (v3636 == 1)) then
											v83 = v71[v75];
											v81[v83[2 + 0]] = v61[v83[1300 - (549 + 748)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[1 + 2]] - v81[v83[4 + 0]];
											v75 = v75 + (3 - 2);
											v3636 = 1 + 1;
										end
									end
								elseif not v81[v83[2 + 0]] then
									v75 = v75 + 1;
								else
									v75 = v83[8 - 5];
								end
							elseif (v84 <= (482 - 245)) then
								if ((962 <= 4845) and (v84 <= (550 - 315))) then
									local v995;
									local v996;
									v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[11 - 7]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v996 = v83[4 - 2];
									v995 = v81[v83[3]];
									v81[v996 + (693 - (205 + 487))] = v995;
									v81[v996] = v995[v83[11 - 7]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[10 - 7];
									v75 = v75 + (1427 - (309 + 1117));
									v83 = v71[v75];
									v996 = v83[2 + 0];
									v81[v996] = v81[v996](v13(v81, v996 + (1 - 0), v83[3 + 0]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[78 - (50 + 26)]] = v81[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[3 + 0];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v75 = v83[1821 - (520 + 1298)];
								elseif (v84 > (1296 - (420 + 640))) then
									local v3638;
									local v3639;
									v3639 = v83[3 - 1];
									v3638 = v81[v83[3]];
									v81[v3639 + (1 - 0)] = v3638;
									v81[v3639] = v3638[v83[1586 - (15 + 1567)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]];
									v75 = v75 + (1985 - (110 + 1874));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[785 - (101 + 681)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[5 - 3]] = {};
									v75 = v75 + (544 - (120 + 423));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[10 - 6]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[47 - (41 + 4)]] = v81[v83[1086 - (246 + 837)]][v83[4]];
									v75 = v75 + (907 - (492 + 414));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[1053 - (829 + 220)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[9 - 6]][v83[7 - 3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3639 = v83[3 - 1];
									v81[v3639] = v81[v3639](v13(v81, v3639 + (1496 - (345 + 1150)), v83[1360 - (1017 + 340)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]][v83[11 - 8]] = v81[v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3639 = v83[2];
									v81[v3639] = v81[v3639](v13(v81, v3639 + (1840 - (1279 + 560)), v83[5 - 2]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[1466 - (140 + 1323)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3639 = v83[1990 - (1607 + 381)];
									v3638 = v81[v83[4 - 1]];
									v81[v3639 + (2 - 1)] = v3638;
									v81[v3639] = v3638[v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3639 = v83[2];
									v81[v3639](v81[v3639 + (195 - (162 + 32))]);
									v75 = v75 + (605 - (440 + 164));
									v83 = v71[v75];
									v75 = v83[6 - 3];
								else
									local v3666;
									local v3667;
									local v3666, v3668;
									local v3669;
									v81[v83[2]] = v62[v83[6 - 3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v61[v83[4 - 1]];
									v75 = v75 + (957 - (553 + 403));
									v83 = v71[v75];
									v81[v83[7 - 5]] = v62[v83[4 - 1]];
									v75 = v75 + (342 - (111 + 230));
									v83 = v71[v75];
									v3669 = v83[2];
									v3666, v3668 = v74(v81[v3669](v81[v3669 + (1 - 0)]));
									v76 = (v3668 + v3669) - 1;
									v3667 = 0 - 0;
									for v5964 = v3669, v76 do
										v3667 = v3667 + 1 + 0;
										v81[v5964] = v3666[v3667];
									end
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3669 = v83[340 - (85 + 253)];
									v3666 = {v81[v3669](v13(v81, v3669 + 1, v76))};
									v3667 = 1849 - (1558 + 291);
									for v5967 = v3669, v83[1 + 3] do
										v3667 = v3667 + (2 - 1);
										v81[v5967] = v3666[v3667];
									end
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v75 = v83[1085 - (985 + 97)];
								end
							elseif (v84 <= (594 - 355)) then
								if (v84 == 238) then
									local v3679;
									local v3680;
									local v3681;
									v81[v83[2]] = v62[v83[616 - (424 + 189)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3681 = v83[1025 - (19 + 1004)];
									v3680 = v81[v83[3 + 0]];
									v81[v3681 + 1] = v3680;
									v81[v3681] = v3680[v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1348 - (231 + 1114)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1047 - (114 + 931)]] = v62[v83[3 + 0]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[65 - (17 + 46)]] = v81[v83[2 + 1]][v83[11 - 7]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[4]];
									v75 = v75 + (1037 - (931 + 105));
									v83 = v71[v75];
									v81[v83[1130 - (718 + 410)]] = v81[v83[1208 - (361 + 844)]][v83[1914 - (1760 + 150)]];
									v75 = v75 + (1568 - (917 + 650));
									v83 = v71[v75];
									v81[v83[183 - (104 + 77)]] = v81[v83[7 - 4]][v83[1 + 3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[3];
									v75 = v75 + (265 - (53 + 211));
									v83 = v71[v75];
									v3680 = v83[3];
									v3679 = v81[v3680];
									for v5970 = v3680 + 1, v83[3 + 1] do
										v3679 = v3679 .. v81[v5970];
									end
									v81[v83[4 - 2]] = v3679;
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[1303 - (282 + 1018)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3681 = v83[516 - (162 + 352)];
									v81[v3681](v13(v81, v3681 + 1, v83[1 + 2]));
									v75 = v75 + (930 - (22 + 907));
									v83 = v71[v75];
									do
										return;
									end
								else
									local v3711;
									local v3712;
									v3712 = v83[441 - (280 + 159)];
									v81[v3712] = v81[v3712](v13(v81, v3712 + 1, v83[1583 - (1064 + 516)]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v62[v83[3 + 0]] = v81[v83[2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[1 + 2]];
									v75 = v75 + (1906 - (1293 + 612));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]][v83[4 - 0]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1753 - (782 + 969)]] = v83[8 - 5];
									v75 = v75 + (1669 - (1085 + 583));
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3712 = v83[1462 - (229 + 1231)];
									v81[v3712] = v81[v3712](v13(v81, v3712 + (2 - 1), v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[9 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[147 - (48 + 97)]] = v62[v83[1849 - (676 + 1170)]];
									v75 = v75 + (1973 - (830 + 1142));
									v83 = v71[v75];
									v81[v83[97 - (41 + 54)]] = v81[v83[12 - 9]][v83[1070 - (536 + 530)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v3712 = v83[2];
									v3711 = v81[v83[12 - 9]];
									v81[v3712 + (1256 - (1129 + 126))] = v3711;
									v81[v3712] = v3711[v83[4]];
								end
							elseif (v84 == (162 + 78)) then
								v81[v83[454 - (282 + 170)]] = v83[2 + 1];
							else
								v75 = v83[3 + 0];
							end
						elseif (v84 <= 247) then
							if ((v84 <= (21 + 223)) or (4425 <= 3431)) then
								if ((v84 <= (1161 - 919)) or (4157 < 1832)) then
									local v1012;
									local v1013;
									v81[v83[1225 - (610 + 613)]] = v83[3];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v1013 = v83[1610 - (1182 + 426)];
									v81[v1013] = v81[v1013](v13(v81, v1013 + 1 + 0, v83[2 + 1]));
									v75 = v75 + (1235 - (1210 + 24));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[1360 - (307 + 1050)]];
									v75 = v75 + (815 - (693 + 121));
									v83 = v71[v75];
									v1013 = v83[286 - (267 + 17)];
									v1012 = v81[v83[62 - (22 + 37)]];
									v81[v1013 + 1] = v1012;
									v81[v1013] = v1012[v83[7 - 3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1450 - (391 + 1056)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1013 = v83[1578 - (1117 + 459)];
									v81[v1013] = v81[v1013](v13(v81, v1013 + (2 - 1), v83[3]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v62[v83[464 - (65 + 396)]] = v81[v83[4 - 2]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1 + 2];
								elseif (v84 > (1944 - (620 + 1081))) then
									local v3738;
									local v3739;
									local v3740;
									v3740 = v83[2];
									v3739 = v81[v83[1 + 2]];
									v81[v3740 + 1] = v3739;
									v81[v3740] = v3739[v83[1884 - (845 + 1035)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1571 - (1348 + 221)]] = v83[3];
									v75 = v75 + (1042 - (320 + 721));
									v83 = v71[v75];
									v81[v83[1959 - (1284 + 673)]] = v62[v83[3]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[11 - 7]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[3]][v81[v83[15 - 11]]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[364 - (170 + 191)]][v83[1746 - (209 + 1533)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1418 - (1049 + 367)]] = v81[v83[6 - 3]][v83[14 - 10]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[8 - 5]][v83[4 + 0]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3739 = v83[226 - (167 + 56)];
									v3738 = v81[v3739];
									for v5971 = v3739 + (2 - 1), v83[4] do
										v3738 = v3738 .. v81[v5971];
									end
									v81[v83[2]] = v3738;
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3 - 0];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3740 = v83[882 - (752 + 128)];
									v81[v3740](v13(v81, v3740 + 1 + 0, v83[1 + 2]));
								else
									local v3769;
									v81[v83[2]][v83[3]] = v81[v83[22 - (7 + 11)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3769 = v83[133 - (87 + 44)];
									v81[v3769] = v81[v3769](v13(v81, v3769 + (2 - 1), v83[3]));
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[7 - 5]] = v81[v83[1538 - (656 + 879)]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[9 - 5]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[1084 - (529 + 553)]] = {};
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									for v5972 = v83[939 - (613 + 324)], v83[1323 - (585 + 735)] do
										v81[v5972] = nil;
									end
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[3 - 1]] = {};
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									for v5974 = v83[5 - 3], v83[8 - 5] do
										v81[v5974] = nil;
									end
									v75 = v75 + (16 - (6 + 9));
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[7 - 4] ~= 0;
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									for v5976 = v83[5 - 3], v83[463 - (59 + 401)] do
										v81[v5976] = nil;
									end
								end
							elseif (v84 <= (1034 - (743 + 46))) then
								local v1033;
								local v1034;
								local v1033, v1035;
								local v1036;
								v81[v83[2 + 0]] = v62[v83[6 - 3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v61[v83[540 - (285 + 252)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[477 - (146 + 329)]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1036 = v83[1 + 1];
								v1033, v1035 = v74(v81[v1036](v81[v1036 + 1 + 0]));
								v76 = (v1035 + v1036) - 1;
								v1034 = 1470 - (417 + 1053);
								for v1489 = v1036, v76 do
									v1034 = v1034 + 1;
									v81[v1489] = v1033[v1034];
								end
								v75 = v75 + (1873 - (1251 + 621));
								v83 = v71[v75];
								v1036 = v83[2];
								v1033 = {v81[v1036](v13(v81, v1036 + 1, v76))};
								v1034 = 0 + 0;
								for v1492 = v1036, v83[17 - 13] do
									v1034 = v1034 + (237 - (213 + 23));
									v81[v1492] = v1033[v1034];
								end
								v75 = v75 + (745 - (617 + 127));
								v83 = v71[v75];
								v75 = v83[695 - (181 + 511)];
							elseif ((v84 == 246) or (588 > 1360)) then
								local v3780 = 0;
								while true do
									if (v3780 == (382 - (187 + 193))) then
										v83 = v71[v75];
										v81[v83[1291 - (107 + 1182)]] = v81[v83[1987 - (1623 + 361)]] * v81[v83[1 + 3]];
										v75 = v75 + (1822 - (325 + 1496));
										v83 = v71[v75];
										v3780 = 3;
									end
									if (v3780 == (359 - (235 + 121))) then
										v81[v83[2]] = v62[v83[3 + 0]];
										break;
									end
									if (v3780 == (2 - 1)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[6 - 3]] * v81[v83[53 - (28 + 21)]];
										v75 = v75 + (2 - 1);
										v3780 = 2;
									end
									if (v3780 == (0 + 0)) then
										v81[v83[689 - (630 + 57)]] = v81[v83[2 + 1]][v83[15 - 11]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3]];
										v3780 = 1;
									end
								end
							else
								local v3781;
								v81[v83[2]] = v62[v83[1 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[890 - (21 + 867)]] = v81[v83[10 - 7]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3781 = v83[1769 - (1555 + 212)];
								v81[v3781] = v81[v3781](v81[v3781 + 1 + 0]);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v62[v83[3 + 0]] = v81[v83[2 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								do
									return;
								end
							end
						elseif (v84 <= (112 + 138)) then
							if ((v84 <= (720 - 472)) or (1460 > 2386)) then
								v81[v83[2]] = -v81[v83[6 - 3]];
							elseif (v84 == (390 - 141)) then
								local v3791;
								local v3792;
								v3792 = v83[2];
								v3791 = v81[v83[8 - 5]];
								v81[v3792 + (2 - 1)] = v3791;
								v81[v3792] = v3791[v83[3 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3792 = v83[2];
								v81[v3792] = v81[v3792](v13(v81, v3792 + 1 + 0, v83[3]));
								v75 = v75 + (942 - (903 + 38));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[389 - (74 + 312)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3792 = v83[1322 - (837 + 483)];
								v3791 = v81[v83[3]];
								v81[v3792 + 1] = v3791;
								v81[v3792] = v3791[v83[6 - 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3792 = v83[2];
								v81[v3792](v81[v3792 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v61[v83[1544 - (1455 + 86)]];
								v75 = v75 + (825 - (803 + 21));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[7 - 4]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[2 + 1];
							elseif (v81[v83[1 + 1]] ~= v81[v83[8 - 4]]) then
								v75 = v75 + 1 + 0;
							else
								v75 = v83[7 - 4];
							end
						elseif ((v84 <= (186 + 66)) or (902 >= 1534)) then
							if (v84 > (1150 - (497 + 402))) then
								local v3812;
								v81[v83[990 - (578 + 410)]] = v81[v83[10 - 7]];
								v75 = v75 + (1544 - (464 + 1079));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1699 - (1398 + 298)]][v83[5 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3812 = v83[2 + 0];
								v81[v3812] = v81[v3812](v81[v3812 + (1 - 0)]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1292 - (561 + 729)]] = v81[v83[1 + 2]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1161 - (104 + 1055)]] = v83[3];
							else
								local v3824 = 1673 - (308 + 1365);
								while true do
									if (v3824 == 3) then
										if v81[v83[549 - (500 + 47)]] then
											v75 = v75 + (1 - 0);
										else
											v75 = v83[3];
										end
										break;
									end
									if (v3824 == (0 + 0)) then
										v81[v83[1952 - (186 + 1764)]] = v62[v83[3 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = not v81[v83[7 - 4]];
										v3824 = 1;
									end
									if (v3824 == (1 + 0)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v62[v83[2 + 1]] = v81[v83[1176 - (1133 + 41)]];
										v75 = v75 + (2 - 1);
										v3824 = 3 - 1;
									end
									if ((v3824 == 2) or (3370 < 201)) then
										v83 = v71[v75];
										v81[v83[1895 - (1786 + 107)]] = v62[v83[3]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v3824 = 1532 - (344 + 1185);
									end
								end
							end
						elseif ((535 == 535) and (v84 == (32 + 221))) then
							local v3825;
							local v3826;
							v81[v83[2]] = v81[v83[3]][v83[1 + 3]];
							v75 = v75 + (696 - (72 + 623));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[7 - 4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[6 - 4]] = v81[v83[1895 - (1093 + 799)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v3826 = v83[2 + 0];
							v81[v3826] = v81[v3826](v13(v81, v3826 + 1, v83[3 + 0]));
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[1057 - (721 + 334)]] = v81[v83[1865 - (1322 + 540)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v61[v83[1375 - (575 + 797)]];
							v75 = v75 + (1130 - (274 + 855));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[6 - 2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[3]][v83[4]];
							v75 = v75 + (1810 - (986 + 823));
							v83 = v71[v75];
							v3826 = v83[2 + 0];
							v3825 = v81[v83[1016 - (872 + 141)]];
							v81[v3826 + 1 + 0] = v3825;
							v81[v3826] = v3825[v83[13 - 9]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[540 - (139 + 399)]] = v81[v83[3 + 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v3826 = v83[2];
							v81[v3826](v13(v81, v3826 + 1, v83[3]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1704 - (1038 + 664)]] = v83[3];
						else
							local v3850 = 0 + 0;
							while true do
								if (v3850 == (0 + 0)) then
									v81[v83[1 + 1]] = v61[v83[3 - 0]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v3850 = 1 + 0;
								end
								if ((v3850 == (1 + 1)) or (1152 == 2235)) then
									v81[v83[5 - 3]] = v81[v83[3]][v83[578 - (388 + 186)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v3850 = 3;
								end
								if (v3850 == (490 - (421 + 65))) then
									if v81[v83[3 - 1]] then
										v75 = v75 + 1 + 0;
									else
										v75 = v83[3 + 0];
									end
									break;
								end
								if ((1264 - (604 + 659)) == v3850) then
									v81[v83[2]] = v81[v83[1507 - (1267 + 237)]][v83[185 - (112 + 69)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v3850 = 2;
								end
								if (((487 - (319 + 165)) == v3850) or (1000 > 3545)) then
									v81[v83[1 + 1]] = v81[v83[1356 - (634 + 719)]][v83[1043 - (248 + 791)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v3850 = 4 + 0;
								end
							end
						end
					elseif ((v84 <= (1364 - (888 + 197))) or (4074 < 445)) then
						if (v84 <= (991 - 725)) then
							if (v84 <= (562 - 302)) then
								if (v84 <= (978 - 721)) then
									if (v84 <= (833 - 578)) then
										local v1047 = 0 + 0;
										local v1048;
										local v1049;
										local v1050;
										local v1051;
										local v1052;
										while true do
											if ((v1047 == 2) or (1685 == 2529)) then
												v1051 = v81[v83[1 + 2]];
												v81[v1052 + (3 - 2)] = v1051;
												v81[v1052] = v1051[v83[8 - 4]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1052 = v83[2 - 0];
												v1047 = 1969 - (1355 + 611);
											end
											if (v1047 == (1 + 0)) then
												v75 = v75 + (1002 - (497 + 504));
												v83 = v71[v75];
												v81[v83[2 - 0]] = v81[v83[2 + 1]][v83[2 + 2]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v1052 = v83[2 + 0];
												v1047 = 2;
											end
											if ((v1047 == (9 - 6)) or (826 <= 805)) then
												v1048, v1050 = v74(v81[v1052](v81[v1052 + (1 - 0)]));
												v76 = (v1050 + v1052) - (1258 - (1159 + 98));
												v1049 = 1443 - (418 + 1025);
												for v6601 = v1052, v76 do
													local v6602 = 0 - 0;
													while true do
														if ((0 - 0) == v6602) then
															v1049 = v1049 + 1;
															v81[v6601] = v1048[v1049];
															break;
														end
													end
												end
												v75 = v75 + (1794 - (297 + 1496));
												v83 = v71[v75];
												v1047 = 6 - 2;
											end
											if ((151 == 151) and (v1047 == 4)) then
												v1052 = v83[945 - (547 + 396)];
												v1048 = {v81[v1052](v13(v81, v1052 + 1 + 0, v76))};
												v1049 = 0 - 0;
												for v6603 = v1052, v83[1747 - (999 + 744)] do
													local v6604 = 0 + 0;
													while true do
														if (v6604 == (500 - (324 + 176))) then
															v1049 = v1049 + (1511 - (1171 + 339));
															v81[v6603] = v1048[v1049];
															break;
														end
													end
												end
												v75 = v75 + (948 - (492 + 455));
												v83 = v71[v75];
												v1047 = 5;
											end
											if ((3589 >= 1455) and (v1047 == (1476 - (805 + 671)))) then
												v1048 = nil;
												v1049 = nil;
												v1048, v1050 = nil;
												v1051 = nil;
												v1052 = nil;
												v81[v83[1315 - (265 + 1048)]] = v62[v83[1579 - (252 + 1324)]];
												v1047 = 1 + 0;
											end
											if (v1047 == (1575 - (544 + 1026))) then
												v75 = v83[3 + 0];
												break;
											end
										end
									elseif ((v84 == (486 - 230)) or (3622 < 2767)) then
										local v3851;
										v81[v83[664 - (217 + 445)]] = v62[v83[3 + 0]];
										v75 = v75 + (941 - (492 + 448));
										v83 = v71[v75];
										v81[v83[1434 - (1152 + 280)]] = v81[v83[3]][v83[5 - 1]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[1 + 2];
										v75 = v75 + (846 - (175 + 670));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[1656 - (1411 + 242)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + (694 - (678 + 15));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[813 - (593 + 217)];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v3851 = v83[2 + 0];
										v81[v3851] = v81[v3851](v13(v81, v3851 + (1 - 0), v83[3]));
										v75 = v75 + (491 - (112 + 378));
										v83 = v71[v75];
										v81[v83[2]][v83[1550 - (952 + 595)]] = v81[v83[400 - (23 + 373)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]][v83[6 - 3]] = v83[10 - 6];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1786 - (1102 + 682)]] = v83[3];
									else
										local v3871 = v83[1 + 1];
										do
											return v13(v81, v3871, v3871 + v83[1 + 2]);
										end
									end
								elseif (v84 <= (1641 - (118 + 1265))) then
									v81[v83[1101 - (725 + 374)]] = v81[v83[2 + 1]][v83[3 + 1]];
									v75 = v75 + (1999 - (1142 + 856));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3 - 0]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]][v83[648 - (104 + 540)]];
									v75 = v75 + (963 - (496 + 466));
									v83 = v71[v75];
									v62[v83[2 + 1]] = v81[v83[2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[727 - (657 + 67)];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v75 = v83[1749 - (127 + 1619)];
								elseif ((4061 > 1279) and (v84 > (909 - 650))) then
									local v3872 = 1190 - (1069 + 121);
									local v3873;
									local v3874;
									while true do
										if (v3872 == 1) then
											v3874 = v83[1 + 1];
											v3873 = v81[v83[3 + 0]];
											v81[v3874 + 1] = v3873;
											v81[v3874] = v3873[v83[15 - 11]];
											v75 = v75 + (2 - 1);
											v3872 = 2;
										end
										if ((3825 >= 2660) and (v3872 == 2)) then
											v83 = v71[v75];
											v81[v83[1192 - (27 + 1163)]] = v83[5 - 2];
											v75 = v75 + (1160 - (371 + 788));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v62[v83[6 - 3]];
											v3872 = 2 + 1;
										end
										if (v3872 == (22 - 16)) then
											do
												return;
											end
											break;
										end
										if (v3872 == (2 + 3)) then
											v83 = v71[v75];
											v3874 = v83[5 - 3];
											v81[v3874](v13(v81, v3874 + 1, v83[1 + 2]));
											v75 = v75 + (430 - (139 + 290));
											v83 = v71[v75];
											v3872 = 6;
										end
										if (v3872 == 3) then
											v75 = v75 + (1336 - (639 + 696));
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[6 - 3]][v83[6 - 2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3872 = 508 - (156 + 348);
										end
										if ((v3872 == (894 - (488 + 402))) or (1470 >= 2824)) then
											v81[v83[204 - (186 + 16)]] = v81[v83[3]][v83[327 - (119 + 204)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2 - 0]] = v83[10 - 7];
											v75 = v75 + 1 + 0;
											v3872 = 13 - 8;
										end
										if ((4256 == 4256) and (v3872 == (0 + 0))) then
											v3873 = nil;
											v3874 = nil;
											v81[v83[1761 - (1709 + 50)]] = v62[v83[3]];
											v75 = v75 + (1330 - (249 + 1080));
											v83 = v71[v75];
											v3872 = 1;
										end
									end
								else
									local v3875 = 0 + 0;
									while true do
										if (v3875 == (451 - (155 + 296))) then
											v62[v83[3 + 0]] = v81[v83[2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3875 = 1 - 0;
										end
										if (v3875 == (2 - 0)) then
											v81[v83[2 + 0]] = v81[v83[9 - 6]][v83[2 + 2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3875 = 6 - 3;
										end
										if (v3875 == 3) then
											v81[v83[1 + 1]] = v81[v83[8 - 5]][v83[8 - 4]];
											v75 = v75 + (699 - (604 + 94));
											v83 = v71[v75];
											v3875 = 1 + 3;
										end
										if ((1804 - (500 + 1303)) == v3875) then
											v81[v83[2]] = v62[v83[1523 - (916 + 604)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3875 = 1 + 1;
										end
										if ((v3875 == (15 - 11)) or (826 == 2564)) then
											v81[v83[2 + 0]] = v81[v83[3 + 0]][v81[v83[4]]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3875 = 5;
										end
										if ((1480 - (754 + 721)) == v3875) then
											v81[v83[508 - (181 + 325)]] = v83[4 - 1];
											break;
										end
									end
								end
							elseif (v84 <= 263) then
								if (v84 <= (38 + 223)) then
									local v1064;
									local v1065;
									v1065 = v83[1412 - (413 + 997)];
									v81[v1065](v13(v81, v1065 + (2 - 1), v83[3 - 0]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[1 + 2]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v1065 = v83[2];
									v1064 = v81[v83[6 - 3]];
									v81[v1065 + (1742 - (708 + 1033))] = v1064;
									v81[v1065] = v1064[v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[1 + 2];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v1065 = v83[2];
									v81[v1065](v13(v81, v1065 + 1 + 0, v83[1 + 2]));
									v75 = v75 + (1658 - (505 + 1152));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1065 = v83[2];
									v1064 = v81[v83[3 + 0]];
									v81[v1065 + 1] = v1064;
									v81[v1065] = v1064[v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
								elseif ((1269 == 1269) and (v84 == (377 - 115))) then
									v81[v83[7 - 5]] = v29(v72[v83[3]], nil, v62);
								else
									local v3877 = 0 - 0;
									local v3878;
									local v3879;
									while true do
										if (v3877 == (1523 - (53 + 1470))) then
											v3878 = nil;
											v3879 = nil;
											v3879 = v83[2];
											v3878 = v81[v83[3]];
											v3877 = 1005 - (482 + 522);
										end
										if (v3877 == 3) then
											v81[v83[648 - (496 + 150)]] = v62[v83[3]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v3879 = v83[87 - (32 + 53)];
											v3877 = 1814 - (956 + 854);
										end
										if (v3877 == (1 + 3)) then
											v3878 = v81[v83[5 - 2]];
											v81[v3879 + 1 + 0] = v3878;
											v81[v3879] = v3878[v83[4]];
											v75 = v75 + (2 - 1);
											v3877 = 1898 - (1192 + 701);
										end
										if (v3877 == (1623 - (326 + 1295))) then
											v3879 = v83[1814 - (1595 + 217)];
											v81[v3879](v81[v3879 + (217 - (93 + 123))]);
											v75 = v75 + (1837 - (848 + 988));
											v83 = v71[v75];
											v3877 = 1563 - (546 + 1014);
										end
										if ((v3877 == (13 - 7)) or (3272 == 587)) then
											v83 = v71[v75];
											v75 = v83[3];
											break;
										end
										if (v3877 == (1 + 0)) then
											v81[v3879 + (75 - (53 + 21))] = v3878;
											v81[v3879] = v3878[v83[295 - (167 + 124)]];
											v75 = v75 + (181 - (4 + 176));
											v83 = v71[v75];
											v3877 = 2;
										end
										if ((2798 > 767) and ((11 - 6) == v3877)) then
											v83 = v71[v75];
											v3879 = v83[5 - 3];
											v81[v3879](v81[v3879 + (3 - 2)]);
											v75 = v75 + 1 + 0;
											v3877 = 6;
										end
									end
								end
							elseif (v84 <= (74 + 190)) then
								local v1083 = 0 + 0;
								local v1084;
								local v1085;
								while true do
									if (v1083 == (2 + 0)) then
										v1084 = v81[v83[3]];
										v81[v1085 + (1 - 0)] = v1084;
										v81[v1085] = v1084[v83[4]];
										v1083 = 3;
									end
									if (v1083 == 1) then
										v75 = v75 + (120 - (93 + 26));
										v83 = v71[v75];
										v1085 = v83[2 + 0];
										v1083 = 2;
									end
									if (v1083 == 7) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1085 = v83[2];
										v1083 = 5 + 3;
									end
									if (v1083 == 5) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[1657 - (220 + 1434)]][v83[12 - 8]];
										v1083 = 12 - 6;
									end
									if (v1083 == (0 - 0)) then
										v1084 = nil;
										v1085 = nil;
										v81[v83[1604 - (906 + 696)]] = v62[v83[6 - 3]];
										v1083 = 1;
									end
									if ((2 + 2) == v1083) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[681 - (178 + 501)]] = v62[v83[14 - 11]];
										v1083 = 2 + 3;
									end
									if (v1083 == 3) then
										v75 = v75 + (1028 - (444 + 583));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v83[3 + 0];
										v1083 = 433 - (407 + 22);
									end
									if (v1083 == (17 - 8)) then
										do
											return;
										end
										break;
									end
									if (v1083 == (1238 - (1139 + 93))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v1083 = 7;
									end
									if (v1083 == (1352 - (237 + 1107))) then
										v81[v1085](v13(v81, v1085 + 1 + 0, v83[14 - (4 + 7)]));
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1083 = 9;
									end
								end
							elseif (v84 > (778 - (8 + 505))) then
								local v3880;
								v81[v83[2 + 0]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[937 - (662 + 273)]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3 + 0]][v83[4]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v3880 = v83[246 - (127 + 117)];
								v81[v3880](v13(v81, v3880 + (208 - (105 + 102)), v83[1 + 2]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								do
									return v81[v83[1 + 1]];
								end
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[3];
							else
								local v3893 = 0 - 0;
								local v3894;
								local v3895;
								while true do
									if (((16 - 11) == v3893) or (4194 < 1089)) then
										v75 = v75 + (747 - (588 + 158));
										v83 = v71[v75];
										v81[v83[1082 - (126 + 954)]] = v81[v83[9 - 6]][v83[4]];
										v3893 = 6;
									end
									if (v3893 == (343 - (52 + 291))) then
										v3894 = nil;
										v3895 = nil;
										v81[v83[280 - (76 + 202)]] = v62[v83[3 + 0]];
										v3893 = 847 - (504 + 342);
									end
									if ((1873 == 1873) and (v3893 == 7)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v3895 = v83[2 + 0];
										v3893 = 8;
									end
									if ((v3893 == (22 - 14)) or (3510 <= 1598)) then
										v81[v3895](v13(v81, v3895 + 1, v83[2 + 1]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v3893 = 9 + 0;
									end
									if ((682 <= 1498) and (v3893 == (486 - (387 + 93)))) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[2 + 1];
										v3893 = 7;
									end
									if (v3893 == 9) then
										do
											return;
										end
										break;
									end
									if ((v3893 == (8 - 5)) or (4169 < 3012)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[941 - (36 + 903)]] = v83[5 - 2];
										v3893 = 1 + 3;
									end
									if (v3893 == (264 - (220 + 42))) then
										v3894 = v81[v83[11 - 8]];
										v81[v3895 + (1506 - (300 + 1205))] = v3894;
										v81[v3895] = v3894[v83[4]];
										v3893 = 9 - 6;
									end
									if (v3893 == (923 - (728 + 194))) then
										v75 = v75 + (658 - (445 + 212));
										v83 = v71[v75];
										v3895 = v83[7 - 5];
										v3893 = 2;
									end
									if (v3893 == (3 + 1)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3 + 0]];
										v3893 = 1362 - (167 + 1190);
									end
								end
							end
						elseif (v84 <= 272) then
							if (v84 <= 269) then
								if ((3175 == 3175) and (v84 <= (911 - (315 + 329)))) then
									local v1086 = 0;
									local v1087;
									local v1088;
									while true do
										if (v1086 == (0 + 0)) then
											v1087 = nil;
											v1088 = nil;
											v81[v83[1 + 1]][v83[653 - (545 + 105)]] = v83[4];
											v1086 = 1 + 0;
										end
										if (v1086 == (1 + 1)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1088 = v83[2];
											v1086 = 7 - 4;
										end
										if (v1086 == (1 - 0)) then
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[1191 - (1044 + 145)]] = v62[v83[7 - 4]];
											v1086 = 1252 - (122 + 1128);
										end
										if (v1086 == 7) then
											v81[v83[2]] = v83[1818 - (371 + 1444)];
											v75 = v75 + (17 - (14 + 2));
											v83 = v71[v75];
											v1086 = 2 + 6;
										end
										if (v1086 == (3 + 0)) then
											v1087 = v81[v83[5 - 2]];
											v81[v1088 + (1 - 0)] = v1087;
											v81[v1088] = v1087[v83[3 + 1]];
											v1086 = 4;
										end
										if ((864 >= 264) and (v1086 == 6)) then
											v62[v83[4 - 1]] = v81[v83[6 - 4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1086 = 17 - 10;
										end
										if ((3879 > 1632) and (v1086 == (16 - 11))) then
											v81[v1088] = v81[v1088](v81[v1088 + (4 - 3)]);
											v75 = v75 + 1;
											v83 = v71[v75];
											v1086 = 2 + 4;
										end
										if (v1086 == (1 + 3)) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v1088 = v83[7 - 5];
											v1086 = 8 - 3;
										end
										if (8 == v1086) then
											v75 = v83[152 - (50 + 99)];
											break;
										end
									end
								elseif (v84 > (707 - (123 + 316))) then
									if v81[v83[3 - 1]] then
										v75 = v75 + (1583 - (1507 + 75));
									else
										v75 = v83[597 - (145 + 449)];
									end
								else
									local v3896 = 1111 - (241 + 870);
									local v3897;
									local v3898;
									while true do
										if ((1696 >= 1517) and (v3896 == (3 + 0))) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v3898 = v83[7 - 5];
											v3896 = 8 - 4;
										end
										if ((86 < 3416) and (v3896 == (759 - (627 + 130)))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[147 - (82 + 63)]] = v62[v83[3 + 0]];
											v3896 = 1287 - (386 + 898);
										end
										if (v3896 == (2 + 2)) then
											v81[v3898] = v81[v3898](v13(v81, v3898 + (3 - 2), v83[3 + 0]));
											v75 = v75 + 1;
											v83 = v71[v75];
											v3896 = 4 + 1;
										end
										if ((4806 >= 2463) and (v3896 == 7)) then
											v75 = v83[972 - (659 + 310)];
											break;
										end
										if (0 == v3896) then
											v3897 = nil;
											v3898 = nil;
											v3898 = v83[2 + 0];
											v3896 = 1;
										end
										if (v3896 == 6) then
											v81[v83[2]] = v83[606 - (364 + 239)];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v3896 = 7;
										end
										if (v3896 == (19 - 14)) then
											v62[v83[5 - 2]] = v81[v83[6 - 4]];
											v75 = v75 + (194 - (30 + 163));
											v83 = v71[v75];
											v3896 = 6;
										end
										if (v3896 == (2 - 1)) then
											v3897 = v81[v83[558 - (213 + 342)]];
											v81[v3898 + (2 - 1)] = v3897;
											v81[v3898] = v3897[v83[1422 - (843 + 575)]];
											v3896 = 704 - (347 + 355);
										end
									end
								end
							elseif (v84 <= (730 - 460)) then
								local v1089;
								local v1090;
								v1090 = v83[469 - (386 + 81)];
								v81[v1090](v13(v81, v1090 + 1, v83[3]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[2 + 1] ~= (0 + 0);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v62[v83[1660 - (610 + 1047)]] = v81[v83[2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1090 = v83[2];
								v1089 = v81[v83[566 - (304 + 259)]];
								v81[v1090 + (2 - 1)] = v1089;
								v81[v1090] = v1089[v83[969 - (306 + 659)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2];
							elseif ((2516 == 2516) and (v84 == (2010 - (315 + 1424)))) then
								local v3899 = 588 - (27 + 561);
								local v3900;
								local v3901;
								while true do
									if (v3899 == (2 + 2)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1929 - (1904 + 23)]] = v62[v83[1 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v3899 = 2003 - (1852 + 146);
									end
									if ((1244 <= 4138) and (v3899 == (2 - 1))) then
										v83 = v71[v75];
										v81[v83[7 - 5]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v3901 = v83[188 - (18 + 168)];
										v3899 = 2 + 0;
									end
									if (v3899 == 5) then
										v81[v83[2 - 0]] = v81[v83[3]][v83[6 - 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v83[3 - 0];
										v75 = v75 + (639 - (399 + 239));
										v3899 = 22 - 16;
									end
									if (v3899 == (1410 - (779 + 629))) then
										v3900 = v81[v83[1 + 2]];
										v81[v3901 + 1] = v3900;
										v81[v3901] = v3900[v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v3899 = 1772 - (855 + 914);
									end
									if (v3899 == (25 - (15 + 7))) then
										v81[v83[2 + 0]] = v83[1705 - (646 + 1056)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v3901 = v83[2];
										v81[v3901] = v81[v3901](v13(v81, v3901 + 1 + 0, v83[3]));
										v3899 = 7 - 3;
									end
									if (v3899 == (1866 - (1443 + 423))) then
										v3900 = nil;
										v3901 = nil;
										v3901 = v83[2];
										v81[v3901](v81[v3901 + 1 + 0]);
										v75 = v75 + (2 - 1);
										v3899 = 1 + 0;
									end
									if ((v3899 == (2 + 4)) or (4572 == 1054)) then
										v83 = v71[v75];
										v81[v83[4 - 2]] = v62[v83[1509 - (271 + 1235)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[6 - 4]] = v81[v83[3]][v83[12 - 8]];
										break;
									end
								end
							else
								local v3902;
								local v3903;
								v3903 = v83[2];
								v3902 = v81[v83[3]];
								v81[v3903 + (3 - 2)] = v3902;
								v81[v3903] = v3902[v83[1048 - (463 + 581)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[1178 - (599 + 576)]];
								v75 = v75 + (1513 - (316 + 1196));
								v83 = v71[v75];
								v3903 = v83[1305 - (970 + 333)];
								v3902 = v81[v83[3]];
								v81[v3903 + 1 + 0] = v3902;
								v81[v3903] = v3902[v83[3 + 1]];
								v75 = v75 + (962 - (538 + 423));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[13 - 10];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v3903 = v83[1 + 1];
								v81[v3903] = v81[v3903](v13(v81, v3903 + (1355 - (1061 + 293)), v83[532 - (153 + 376)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[707 - (173 + 532)]] = v81[v83[5 - 2]][v83[11 - 7]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[2 + 1]][v83[9 - 5]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1539 - (561 + 975)]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[8 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = {};
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v62[v83[126 - (115 + 8)]];
								v75 = v75 + (1557 - (1476 + 80));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[845 - (648 + 194)]][v83[4]];
								v75 = v75 + (256 - (111 + 144));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[4 - 1]][v83[5 - 1]];
								v75 = v75 + (318 - (275 + 42));
								v83 = v71[v75];
								v81[v83[184 - (104 + 78)]] = v81[v83[9 - 6]][v83[4]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1939 - (813 + 1123)]][v83[1 + 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[3 + 0]][v83[1797 - (144 + 1649)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[554 - (125 + 426)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[84 - (51 + 31)]] = v81[v83[10 - 7]][v83[4 + 0]];
								v75 = v75 + (290 - (174 + 115));
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2];
								v75 = v75 + (1699 - (941 + 757));
								v83 = v71[v75];
								v81[v83[1164 - (696 + 466)]] = v83[3];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[3 - 1]] = v83[4 - 1];
								v75 = v75 + (1352 - (165 + 1186));
								v83 = v71[v75];
								v3903 = v83[2 + 0];
								v81[v3903] = v81[v3903](v13(v81, v3903 + (4 - 3), v83[2 + 1]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3 + 0]] * v81[v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]][v83[1040 - (853 + 184)]] = v81[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3903 = v83[36 - (14 + 20)];
								v81[v3903] = v81[v3903](v13(v81, v3903 + 1 + 0, v83[769 - (35 + 731)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3903 = v83[1 + 1];
								v3902 = v81[v83[1 + 2]];
								v81[v3903 + 1 + 0] = v3902;
								v81[v3903] = v3902[v83[4 + 0]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v3903 = v83[3 - 1];
								v81[v3903](v81[v3903 + 1 + 0]);
								v75 = v75 + (148 - (26 + 121));
								v83 = v71[v75];
								v75 = v83[114 - (95 + 16)];
							end
						elseif (v84 <= 275) then
							if (v84 <= (917 - 644)) then
								local v1102;
								v81[v83[2]] = v62[v83[3 - 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1102 = v83[553 - (423 + 128)];
								v81[v1102] = v81[v1102]();
								v75 = v75 + (1575 - (1331 + 243));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v62[v83[7 - 4]];
								v75 = v75 + (1635 - (284 + 1350));
								v83 = v71[v75];
								v81[v83[2]][v83[1 + 2]] = v81[v83[32 - (10 + 18)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v75 = v83[1310 - (73 + 1234)];
							elseif ((v84 > (1011 - (503 + 234))) or (2474 == 3712)) then
								local v3950;
								local v3951;
								v81[v83[1903 - (425 + 1476)]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1058 - (856 + 200)]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3951 = v83[1613 - (734 + 877)];
								v3950 = v81[v83[2 + 1]];
								v81[v3951 + (1482 - (514 + 967))] = v3950;
								v81[v3951] = v3950[v83[6 - 2]];
								v75 = v75 + (648 - (325 + 322));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[1833 - (1668 + 162)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v3951 = v83[234 - (43 + 189)];
								v81[v3951] = v81[v3951](v13(v81, v3951 + 1, v83[5 - 2]));
								v75 = v75 + (1659 - (694 + 964));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[5 - 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[339 - (57 + 280)]] = v81[v83[1957 - (414 + 1540)]] * v81[v83[904 - (561 + 339)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1553 - (1342 + 208)]] * v81[v83[6 - 2]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[9 - 6]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1848 - (1139 + 707)]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (541 - (335 + 205));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[4 - 1]][v83[11 - 7]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3951 = v83[2];
								v3950 = v81[v83[7 - 4]];
								v81[v3951 + (1063 - (622 + 440))] = v3950;
								v81[v3951] = v3950[v83[7 - 3]];
								v75 = v75 + (753 - (672 + 80));
								v83 = v71[v75];
								v81[v83[1128 - (601 + 525)]] = v83[1821 - (1515 + 303)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3951 = v83[2 - 0];
								v81[v3951] = v81[v3951](v13(v81, v3951 + 1, v83[8 - 5]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[964 - (144 + 818)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (28 - (5 + 22));
								v83 = v71[v75];
								v81[v83[863 - (446 + 415)]] = v83[216 - (204 + 9)];
							else
								local v3986;
								v81[v83[1260 - (479 + 779)]] = v62[v83[6 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[117 - (61 + 54)]] = v81[v83[1808 - (1235 + 570)]][v83[972 - (217 + 751)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[114 - (94 + 16)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[4]];
								v75 = v75 + (1546 - (1188 + 357));
								v83 = v71[v75];
								v3986 = v83[811 - (580 + 229)];
								v81[v3986] = v81[v3986](v81[v3986 + (511 - (82 + 428))]);
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								if v81[v83[498 - (259 + 237)]] then
									v75 = v75 + 1;
								else
									v75 = v83[11 - 8];
								end
							end
						elseif (v84 <= (1633 - (215 + 1141))) then
							if (v84 == (600 - 324)) then
								local v3997;
								local v3998;
								v81[v83[672 - (405 + 265)]] = v81[v83[1986 - (1136 + 847)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1737 - (230 + 1504)]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[1885 - (913 + 969)]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v3998 = v83[1 + 1];
								v3997 = v81[v83[1396 - (1277 + 116)]];
								v81[v3998 + 1] = v3997;
								v81[v3998] = v3997[v83[1191 - (1178 + 9)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v3998 = v83[1842 - (1018 + 822)];
								v81[v3998] = v81[v3998](v13(v81, v3998 + (2 - 1), v83[3 + 0]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v3998 = v83[2 + 0];
								v3997 = v81[v83[2 + 1]];
								v81[v3998 + (382 - (111 + 270))] = v3997;
								v81[v3998] = v3997[v83[1200 - (1082 + 114)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v62[v83[498 - (257 + 238)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v3998 = v83[2];
								v81[v3998] = v81[v3998](v13(v81, v3998 + 1, v83[1857 - (831 + 1023)]));
								v75 = v75 + (122 - (6 + 115));
								v83 = v71[v75];
								v62[v83[4 - 1]] = v81[v83[4 - 2]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[2 + 1];
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[7 - 4];
							else
								local v4026 = 0 - 0;
								local v4027;
								local v4028;
								while true do
									if (v4026 == 4) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1202 - (608 + 592)]] = v81[v83[6 - 3]];
										v75 = v75 + 1 + 0;
										v4026 = 1946 - (24 + 1917);
									end
									if (v4026 == 6) then
										v83 = v71[v75];
										if not v81[v83[4 - 2]] then
											v75 = v75 + (1526 - (521 + 1004));
										else
											v75 = v83[3];
										end
										break;
									end
									if (v4026 == (2 - 0)) then
										v4028 = v83[2];
										v81[v4028] = v81[v4028](v81[v4028 + 1 + 0]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4026 = 297 - (87 + 207);
									end
									if (v4026 == 1) then
										v81[v4028 + 1] = v4027;
										v81[v4028] = v4027[v83[1 + 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4026 = 2;
									end
									if ((v4026 == (0 - 0)) or (4187 == 3483)) then
										v4027 = nil;
										v4028 = nil;
										v4028 = v83[1597 - (625 + 970)];
										v4027 = v81[v83[2 + 1]];
										v4026 = 350 - (122 + 227);
									end
									if ((2 + 3) == v4026) then
										v83 = v71[v75];
										v4028 = v83[1117 - (706 + 409)];
										v81[v4028] = v81[v4028](v13(v81, v4028 + 1, v83[2 + 1]));
										v75 = v75 + (2 - 1);
										v4026 = 3 + 3;
									end
									if (v4026 == (6 - 3)) then
										v4028 = v83[448 - (433 + 13)];
										v4027 = v81[v83[3 + 0]];
										v81[v4028 + (982 - (824 + 157))] = v4027;
										v81[v4028] = v4027[v83[364 - (120 + 240)]];
										v4026 = 1 + 3;
									end
								end
							end
						elseif (v84 > (181 + 97)) then
							local v4029;
							local v4030;
							v62[v83[3]] = v81[v83[2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1034 - (291 + 741)]] = v62[v83[1 + 2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v4030 = v83[1 + 1];
							v4029 = v81[v83[1495 - (810 + 682)]];
							v81[v4030 + (494 - (16 + 477))] = v4029;
							v81[v4030] = v4029[v83[4]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1368 - (658 + 708)]] = v83[2 + 1];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v4030 = v83[2];
							v81[v4030] = v81[v4030](v13(v81, v4030 + 1 + 0, v83[650 - (483 + 164)]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[4 - 1]][v83[552 - (151 + 397)]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v4030 = v83[1225 - (1005 + 218)];
							v4029 = v81[v83[658 - (294 + 361)]];
							v81[v4030 + (1061 - (150 + 910))] = v4029;
							v81[v4030] = v4029[v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v4030 = v83[2 + 0];
							v81[v4030](v81[v4030 + 1 + 0]);
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[8 - 6]] = v83[3 + 0];
						else
							local v4052;
							local v4053;
							v4053 = v83[2];
							v4052 = v81[v83[9 - 6]];
							v81[v4053 + 1] = v4052;
							v81[v4053] = v4052[v83[1 + 3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1802 - (756 + 1044)]] = v62[v83[833 - (738 + 92)]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v4053 = v83[2];
							v81[v4053] = v81[v4053](v13(v81, v4053 + 1, v83[1415 - (569 + 843)]));
							v75 = v75 + (1429 - (262 + 1166));
							v83 = v71[v75];
							v62[v83[654 - (410 + 241)]] = v81[v83[1186 - (388 + 796)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1010 - (534 + 474)]] = v83[3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v75 = v83[1102 - (642 + 457)];
						end
					elseif ((v84 <= (629 - 337)) or (1972 == 3140)) then
						if (v84 <= 285) then
							if ((75 <= 4446) and (v84 <= (1758 - (384 + 1092)))) then
								if (v84 <= (2009 - (1190 + 539))) then
									local v1113 = 753 - (91 + 662);
									local v1114;
									while true do
										if (v1113 == (0 + 0)) then
											v1114 = nil;
											v81[v83[7 - 5]] = v62[v83[1050 - (116 + 931)]];
											v75 = v75 + 1 + 0;
											v1113 = 1 + 0;
										end
										if ((1825 <= 4462) and ((1 + 3) == v1113)) then
											v83 = v71[v75];
											v81[v83[7 - 5]] = v81[v83[3]][v83[10 - 6]];
											v75 = v75 + (178 - (18 + 159));
											v1113 = 14 - 9;
										end
										if (v1113 == (7 - 2)) then
											v83 = v71[v75];
											v1114 = v83[4 - 2];
											v81[v1114](v81[v1114 + 1]);
											break;
										end
										if ((2802 > 2653) and (v1113 == (3 - 0))) then
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[322 - (111 + 208)]][v81[v83[4 + 0]]];
											v75 = v75 + (593 - (364 + 228));
											v1113 = 9 - 5;
										end
										if (v1113 == (3 - 1)) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[4]];
											v75 = v75 + 1;
											v1113 = 2 + 1;
										end
										if (v1113 == (1 - 0)) then
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[380 - (121 + 256)]][v83[17 - 13]];
											v75 = v75 + (2 - 1);
											v1113 = 2;
										end
									end
								elseif (v84 == (39 + 242)) then
									local v4067 = 0;
									local v4068;
									while true do
										if (v4067 == (2 + 0)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1760 - (549 + 1209)]] = v61[v83[3 - 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1383 - (643 + 738)]] = v81[v83[3]][v83[4]];
											v4067 = 3 + 0;
										end
										if (v4067 == (2 - 1)) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[1 + 1]] = {};
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[2 - 0]] = v62[v83[1110 - (1038 + 69)]];
											v4067 = 338 - (157 + 179);
										end
										if (v4067 == (1130 - (204 + 926))) then
											v4068 = nil;
											v81[v83[1959 - (184 + 1773)]] = v81[v83[722 - (111 + 608)]][v83[3 + 1]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v4068 = v83[2];
											v81[v4068] = v81[v4068](v13(v81, v4068 + 1 + 0, v83[2 + 1]));
											v4067 = 1 + 0;
										end
										if (v4067 == (17 - 13)) then
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v4068 = v83[6 - 4];
											v81[v4068] = v81[v4068](v81[v4068 + 1]);
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v4067 = 1673 - (1328 + 340);
										end
										if (v4067 == (13 - 8)) then
											v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[4]];
											break;
										end
										if ((1907 > 1035) and (v4067 == 3)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1016 - (782 + 232)]] = v81[v83[2 + 1]][v81[v83[1307 - (397 + 906)]]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[602 - (360 + 240)]] = v81[v83[3 - 0]][v83[4]];
											v4067 = 4 + 0;
										end
									end
								else
									local v4069;
									local v4070;
									v4070 = v83[24 - (13 + 9)];
									v4069 = v81[v83[4 - 1]];
									v81[v4070 + (2 - 1)] = v4069;
									v81[v4070] = v4069[v83[1578 - (272 + 1302)]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[7 - 4];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v4070 = v83[3 - 1];
									v81[v4070] = v81[v4070](v13(v81, v4070 + (22 - (8 + 13)), v83[3 + 0]));
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[91 - (28 + 60)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + (954 - (133 + 820));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[100 - (9 + 88)];
								end
							elseif (v84 <= (533 - (98 + 152))) then
								v81[v83[2 + 0]] = v81[v83[7 - 4]][v83[17 - 13]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[291 - (44 + 244)]][v81[v83[1393 - (207 + 1182)]]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v62[v83[3 + 0]] = v81[v83[918 - (904 + 12)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[11 - 8]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[255 - (241 + 12)]] = v81[v83[3 + 0]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1256 - (1187 + 67)]] = v81[v83[275 - (56 + 216)]][v83[6 - 2]];
								v75 = v75 + (1480 - (1194 + 285));
								v83 = v71[v75];
								v81[v83[1702 - (401 + 1299)]] = v81[v83[1558 - (1522 + 33)]][v83[10 - 6]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1824 - (1108 + 714)]] = v81[v83[3]][v83[678 - (357 + 317)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (468 - (73 + 394));
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[1 + 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v75 = v83[254 - (247 + 4)];
							elseif (v84 == (912 - (435 + 193))) then
								local v4086 = 0;
								local v4087;
								local v4088;
								while true do
									if (v4086 == (474 - (428 + 45))) then
										v75 = v75 + (1221 - (158 + 1062));
										v83 = v71[v75];
										v4088 = v83[1379 - (858 + 519)];
										v4087 = v81[v83[5 - 2]];
										v81[v4088 + (1458 - (711 + 746))] = v4087;
										v81[v4088] = v4087[v83[4]];
										v4086 = 1 + 1;
									end
									if (v4086 == (1 + 1)) then
										v75 = v75 + (678 - (229 + 448));
										v83 = v71[v75];
										v81[v83[743 - (357 + 384)]] = v62[v83[1 + 2]];
										v75 = v75 + (1581 - (984 + 596));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[924 - (465 + 456)]][v83[4 + 0]];
										v4086 = 3;
									end
									if (v4086 == (7 - 4)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[3 + 0]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v83[5 - 2] ~= 0;
										v4086 = 3 + 1;
									end
									if (v4086 == (0 + 0)) then
										v4087 = nil;
										v4088 = nil;
										v81[v83[2]] = v81[v83[219 - (172 + 44)]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[382 - (170 + 209)]][v83[4]];
										v4086 = 2 - 1;
									end
									if ((13 - 8) == v4086) then
										v81[v83[2 + 0]] = v62[v83[959 - (244 + 712)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
										break;
									end
									if (v4086 == 4) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4088 = v83[2];
										v81[v4088](v13(v81, v4088 + 1, v83[7 - 4]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4086 = 5;
									end
								end
							else
								local v4089;
								v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[15 - 11]];
								v75 = v75 + (1247 - (769 + 477));
								v83 = v71[v75];
								v4089 = v83[2];
								v81[v4089] = v81[v4089](v13(v81, v4089 + 1, v83[3 - 0]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = {};
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[2 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v61[v83[5 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[3]][v83[4 + 0]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[641 - (526 + 112)]][v81[v83[7 - 3]]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[660 - (318 + 340)]] = v81[v83[626 - (274 + 349)]][v83[8 - 4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v4089 = v83[2];
								v81[v4089] = v81[v4089](v81[v4089 + (2 - 1)]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1455 - (1429 + 23)]][v83[4]];
							end
						elseif ((v84 <= (1147 - 859)) or (2007 < 347)) then
							if (v84 <= (124 + 162)) then
								local v1137;
								local v1138;
								v81[v83[2 + 0]] = v62[v83[5 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1138 = v83[1 + 1];
								v1137 = v81[v83[4 - 1]];
								v81[v1138 + 1] = v1137;
								v81[v1138] = v1137[v83[1510 - (1140 + 366)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1138 = v83[5 - 3];
								v81[v1138] = v81[v1138](v13(v81, v1138 + 1 + 0, v83[1 + 2]));
								v75 = v75 + (386 - (271 + 114));
								v83 = v71[v75];
								v81[v83[9 - 7]] = v81[v83[862 - (240 + 619)]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[860 - (509 + 348)]][v83[10 - 6]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1380 - (1014 + 364)]] = v81[v83[7 - 4]][v83[5 - 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3 + 0]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v83[1727 - (1565 + 159)];
							elseif ((3276 < 3803) and (v84 == (235 + 52))) then
								local v4107 = 0 - 0;
								local v4108;
								local v4109;
								while true do
									if ((3089 > 1241) and ((3 + 5) == v4107)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[4 - 1]][v83[4]];
										v75 = v75 + (1864 - (1445 + 418));
										v4107 = 28 - 19;
									end
									if (v4107 == (7 + 0)) then
										v75 = v75 + (1414 - (26 + 1387));
										v83 = v71[v75];
										v4109 = v83[2];
										v81[v4109] = v81[v4109](v13(v81, v4109 + 1 + 0, v83[1 + 2]));
										v4107 = 8 + 0;
									end
									if (1 == v4107) then
										v81[v4109 + (804 - (355 + 448))] = v4108;
										v81[v4109] = v4108[v83[265 - (246 + 15)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4107 = 1 + 1;
									end
									if (v4107 == (4 + 6)) then
										v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1121 - (391 + 728)]] = v81[v83[1098 - (594 + 501)]][v83[3 + 1]];
										v4107 = 1148 - (730 + 407);
									end
									if ((325 < 2728) and (v4107 == (6 + 3))) then
										v83 = v71[v75];
										v81[v83[3 - 1]] = v62[v83[7 - 4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4107 = 6 + 4;
									end
									if ((v4107 == (1904 - (438 + 1463))) or (1042 >= 2758)) then
										v81[v4109] = v81[v4109](v13(v81, v4109 + 1 + 0, v83[2 + 1]));
										v75 = v75 + (1618 - (900 + 717));
										v83 = v71[v75];
										v81[v83[1138 - (820 + 316)]] = v81[v83[3]][v83[8 - 4]];
										v4107 = 4;
									end
									if (v4107 == (1809 - (719 + 1079))) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										if ((1303 > 1267) and (v81[v83[2]] == v81[v83[5 - 1]])) then
											v75 = v75 + 1 + 0;
										else
											v75 = v83[3];
										end
										break;
									end
									if (v4107 == (1 + 3)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[205 - (148 + 55)]] = v81[v83[1456 - (914 + 539)]][v83[3 + 1]];
										v75 = v75 + 1;
										v4107 = 565 - (253 + 307);
									end
									if ((v4107 == 6) or (4576 < 3600)) then
										v81[v4109] = v4108[v83[1070 - (926 + 140)]];
										v75 = v75 + (1059 - (331 + 727));
										v83 = v71[v75];
										v81[v83[2]] = v83[1385 - (1014 + 368)];
										v4107 = 1584 - (1035 + 542);
									end
									if (v4107 == (80 - (44 + 34))) then
										v81[v83[3 - 1]] = v83[1 + 2];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4109 = v83[2];
										v4107 = 1 + 2;
									end
									if (((0 - 0) == v4107) or (4852 == 1302)) then
										v4108 = nil;
										v4109 = nil;
										v4109 = v83[3 - 1];
										v4108 = v81[v83[2 + 1]];
										v4107 = 669 - (355 + 313);
									end
									if (v4107 == (3 + 2)) then
										v83 = v71[v75];
										v4109 = v83[2];
										v4108 = v81[v83[6 - 3]];
										v81[v4109 + (1 - 0)] = v4108;
										v4107 = 6 + 0;
									end
								end
							else
								local v4110 = 1865 - (762 + 1103);
								local v4111;
								local v4112;
								while true do
									if ((4666 > 289) and (v4110 == 7)) then
										v81[v4112] = v4111[v83[2 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4110 = 8;
									end
									if ((v4110 == (4 + 5)) or (384 >= 1393)) then
										v83 = v71[v75];
										v81[v83[1569 - (1491 + 76)]] = v83[3];
										break;
									end
									if ((v4110 == 1) or (4607 < 3479)) then
										v4111 = v81[v83[2 + 1]];
										v81[v4112 + 1 + 0] = v4111;
										v81[v4112] = v4111[v83[766 - (94 + 668)]];
										v4110 = 2;
									end
									if (v4110 == 8) then
										v4112 = v83[1411 - (36 + 1373)];
										v81[v4112](v81[v4112 + (1102 - (58 + 1043))]);
										v75 = v75 + (4 - 3);
										v4110 = 13 - 4;
									end
									if (v4110 == 4) then
										v62[v83[7 - 4]] = v81[v83[5 - 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4110 = 19 - 14;
									end
									if (((228 - (35 + 193)) == v4110) or (924 > 1389)) then
										v4111 = nil;
										v4112 = nil;
										v4112 = v83[9 - 7];
										v4110 = 653 - (242 + 410);
									end
									if ((1500 - (1285 + 210)) == v4110) then
										v81[v83[1741 - (1179 + 560)]] = v62[v83[1 + 2]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v4110 = 11 - 5;
									end
									if ((v4110 == (1218 - (262 + 954))) or (2580 >= 3061)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v4112 = v83[7 - 5];
										v4110 = 7 - 4;
									end
									if (v4110 == 6) then
										v4112 = v83[2 + 0];
										v4111 = v81[v83[10 - 7]];
										v81[v4112 + 1 + 0] = v4111;
										v4110 = 3 + 4;
									end
									if (v4110 == 3) then
										v81[v4112] = v81[v4112](v81[v4112 + 1]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4110 = 4;
									end
								end
							end
						elseif (v84 <= 290) then
							if ((v84 == (2131 - (1696 + 146))) or (4382 == 3325)) then
								local v4113;
								v81[v83[1908 - (1835 + 71)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (635 - (58 + 576));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[6 - 3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4113 = v83[82 - (27 + 53)];
								v81[v4113] = v81[v4113](v81[v4113 + (1730 - (22 + 1707))]);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v62[v83[3]] = v81[v83[892 - (627 + 263)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v83[3];
							else
								local v4125 = 0 - 0;
								local v4126;
								local v4127;
								while true do
									if (v4125 == (2 - 1)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[3]];
										v4125 = 2;
									end
									if (v4125 == (1186 - (255 + 931))) then
										v4126 = nil;
										v4127 = nil;
										v81[v83[2]] = v81[v83[8 - 5]];
										v4125 = 1;
									end
									if (v4125 == (1396 - (507 + 881))) then
										v81[v4127](v13(v81, v4127 + (1 - 0), v83[3]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v4125 = 9;
									end
									if ((350 < 2272) and (v4125 == 9)) then
										v81[v83[3 - 1]] = v62[v83[3]];
										break;
									end
									if (v4125 == 3) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[6 - 4]] = v81[v83[1606 - (475 + 1128)]][v83[8 - 4]];
										v4125 = 5 - 1;
									end
									if (v4125 == (23 - 16)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4127 = v83[2];
										v4125 = 365 - (110 + 247);
									end
									if ((2259 <= 4442) and ((1250 - (1109 + 137)) == v4125)) then
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v4127 = v83[2];
										v4125 = 3 + 2;
									end
									if ((v4125 == (6 + 0)) or (1810 == 4028)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1 + 2]];
										v4125 = 6 + 1;
									end
									if ((2111 < 4709) and ((2 + 3) == v4125)) then
										v4126 = v81[v83[8 - 5]];
										v81[v4127 + 1 + 0] = v4126;
										v81[v4127] = v4126[v83[3 + 1]];
										v4125 = 6 + 0;
									end
									if (v4125 == (1 + 1)) then
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[4 + 0]];
										v4125 = 11 - 8;
									end
								end
							end
						elseif (v84 > (496 - (192 + 13))) then
							local v4128;
							local v4129;
							v4129 = v83[759 - (585 + 172)];
							v4128 = v81[v83[3]];
							v81[v4129 + 1] = v4128;
							v81[v4129] = v4128[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v4129 = v83[4 - 2];
							v81[v4129] = v81[v4129](v81[v4129 + (797 - (76 + 720))]);
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v62[v83[135 - (45 + 87)]] = v81[v83[2 - 0]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v62[v83[3]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v4129 = v83[2 + 0];
							v4128 = v81[v83[2 + 1]];
							v81[v4129 + 1] = v4128;
							v81[v4129] = v4128[v83[1287 - (61 + 1222)]];
							v75 = v75 + (1504 - (628 + 875));
							v83 = v71[v75];
							v4129 = v83[2 + 0];
							v81[v4129](v81[v4129 + (1 - 0)]);
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v75 = v83[1925 - (590 + 1332)];
						else
							v81[v83[3 - 1]] = v81[v83[9 - 6]] - v83[9 - 5];
						end
					elseif (v84 <= 298) then
						if (v84 <= (1921 - (173 + 1453))) then
							if ((v84 <= (1141 - (237 + 611))) or (4277 == 2886)) then
								local v1160;
								local v1161;
								v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[15 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[7 - 4]][v83[379 - (129 + 246)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v1161 = v83[1094 - (83 + 1009)];
								v1160 = v81[v83[3]];
								v81[v1161 + (874 - (506 + 367))] = v1160;
								v81[v1161] = v1160[v83[19 - 15]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[361 - (72 + 286)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1161 = v83[2];
								v81[v1161](v13(v81, v1161 + (135 - (107 + 27)), v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v75 = v83[4 - 1];
							elseif (v84 > (1402 - 1108)) then
								local v4146;
								local v4147;
								v81[v83[2 + 0]] = v81[v83[3]][v83[7 - 3]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[397 - (304 + 91)]] = v81[v83[3 + 0]][v83[15 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4147 = v83[2 - 0];
								v4146 = v81[v83[1563 - (648 + 912)]];
								v81[v4147 + (2 - 1)] = v4146;
								v81[v4147] = v4146[v83[11 - 7]];
								v75 = v75 + (446 - (206 + 239));
								v83 = v71[v75];
								v81[v83[1422 - (956 + 464)]] = v83[271 - (159 + 109)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4147 = v83[681 - (239 + 440)];
								v81[v4147] = v81[v4147](v13(v81, v4147 + (2 - 1), v83[1 + 2]));
								v75 = v75 + 1;
								v83 = v71[v75];
								if (v81[v83[1730 - (1664 + 64)]] or (49 > 3268)) then
									v75 = v75 + 1 + 0;
								else
									v75 = v83[2 + 1];
								end
							else
								local v4161;
								local v4162;
								v4162 = v83[4 - 2];
								v81[v4162](v13(v81, v4162 + 1 + 0, v83[1 + 2]));
								v75 = v75 + (1515 - (1421 + 93));
								v83 = v71[v75];
								v4162 = v83[7 - 5];
								v4161 = v81[v83[1151 - (1049 + 99)]];
								v81[v4162 + 1] = v4161;
								v81[v4162] = v4161[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4162 = v83[1250 - (871 + 377)];
								v81[v4162](v13(v81, v4162 + 1 + 0, v83[1780 - (1238 + 539)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[574 - (206 + 366)]] = v83[3];
								v75 = v75 + (527 - (489 + 37));
								v83 = v71[v75];
								v62[v83[6 - 3]] = v81[v83[1 + 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v4162 = v83[1 + 1];
								v4161 = v81[v83[2 + 1]];
								v81[v4162 + (1 - 0)] = v4161;
								v81[v4162] = v4161[v83[14 - 10]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[5 - 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[1290 - (254 + 1033)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1764 - (1099 + 663)]] = v83[810 - (504 + 303)] ~= 0;
							end
						elseif (v84 <= (217 + 79)) then
							local v1176 = 0 - 0;
							local v1177;
							while true do
								if (v1176 == 2) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[242 - (155 + 84)];
									v75 = v75 + (3 - 2);
									v1176 = 9 - 6;
								end
								if ((2479 < 2562) and (v1176 == 4)) then
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[1428 - (557 + 868)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1176 = 612 - (33 + 574);
								end
								if (v1176 == (1566 - (839 + 726))) then
									v81[v83[3 - 1]] = v83[9 - 6];
									v75 = v75 + (332 - (124 + 207));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[11 - 8];
									v1176 = 2;
								end
								if ((4735 >= 651) and (v1176 == (11 - 4))) then
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[3];
									break;
								end
								if (v1176 == (0 - 0)) then
									v1177 = nil;
									v81[v83[2]] = v81[v83[1 + 2]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1176 = 1 + 0;
								end
								if (v1176 == (13 - 8)) then
									v81[v83[2]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[9 - 5]];
									v1176 = 1 + 5;
								end
								if ((v1176 == (8 - 2)) or (4481 <= 3664)) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v83[1 + 2];
									v75 = v75 + (2 - 1);
									v1176 = 9 - 2;
								end
								if (v1176 == (1013 - (15 + 995))) then
									v83 = v71[v75];
									v1177 = v83[2];
									v81[v1177] = v81[v1177](v13(v81, v1177 + (1 - 0), v83[3 + 0]));
									v75 = v75 + 1;
									v1176 = 1 + 3;
								end
							end
						elseif ((v84 > (74 + 223)) or (632 >= 771)) then
							local v4184;
							local v4185;
							v4185 = v83[2];
							v4184 = v81[v83[3]];
							v81[v4185 + (38 - (34 + 3))] = v4184;
							v81[v4185] = v4184[v83[12 - 8]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[3];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v4185 = v83[623 - (477 + 144)];
							do
								return v81[v4185](v13(v81, v4185 + (971 - (797 + 173)), v83[1264 - (161 + 1100)]));
							end
							v75 = v75 + (1337 - (1150 + 186));
							v83 = v71[v75];
							v4185 = v83[2 + 0];
							do
								return v13(v81, v4185, v76);
							end
							v75 = v75 + 1;
							v83 = v71[v75];
							do
								return;
							end
						else
							local v4196;
							local v4197;
							v81[v83[2 + 0]] = v83[32 - (12 + 17)];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v4197 = v83[1 + 1];
							v81[v4197] = v81[v4197](v13(v81, v4197 + 1, v83[284 - (68 + 213)]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1 + 2]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2]] = v83[3 + 0] ~= (1382 - (349 + 1033));
							v75 = v75 + (355 - (68 + 286));
							v83 = v71[v75];
							v62[v83[1 + 2]] = v81[v83[3 - 1]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v62[v83[3]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v4197 = v83[5 - 3];
							v4196 = v81[v83[4 - 1]];
							v81[v4197 + 1] = v4196;
							v81[v4197] = v4196[v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + (1198 - (1064 + 133));
							v83 = v71[v75];
							v4197 = v83[2];
							v81[v4197] = v81[v4197](v13(v81, v4197 + (3 - 2), v83[7 - 4]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v62[v83[3 + 0]] = v81[v83[2]];
						end
					elseif ((v84 <= (169 + 132)) or (431 >= 1215)) then
						if (v84 <= (881 - 582)) then
							local v1178;
							local v1179;
							v81[v83[1635 - (670 + 963)]] = v81[v83[1 + 2]][v83[1103 - (1034 + 65)]];
							v75 = v75 + (50 - (5 + 44));
							v83 = v71[v75];
							v1179 = v83[2];
							v1178 = v81[v83[1 + 2]];
							v81[v1179 + (46 - (25 + 20))] = v1178;
							v81[v1179] = v1178[v83[5 - 1]];
							v75 = v75 + (1976 - (1535 + 440));
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[3];
							v75 = v75 + (620 - (477 + 142));
							v83 = v71[v75];
							v1179 = v83[1346 - (1324 + 20)];
							v81[v1179] = v81[v1179](v13(v81, v1179 + 1 + 0, v83[11 - 8]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1620 - (818 + 800)]] = v83[232 - (163 + 66)];
						elseif (v84 > 300) then
							local v4216;
							local v4217;
							v4217 = v83[9 - 7];
							v81[v4217](v13(v81, v4217 + (88 - (40 + 47)), v83[638 - (146 + 489)]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v4217 = v83[1389 - (499 + 888)];
							v4216 = v81[v83[3]];
							v81[v4217 + 1 + 0] = v4216;
							v81[v4217] = v4216[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[5 - 2];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2]] = {};
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2]] = v83[747 - (522 + 222)];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1487 - (72 + 1413)]] = v83[3];
							v75 = v75 + (1204 - (216 + 987));
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[14 - 11];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[1414 - (1300 + 111)];
							v75 = v75 + (1082 - (1055 + 26));
							v83 = v71[v75];
							v81[v83[645 - (475 + 168)]] = v83[1370 - (302 + 1065)];
						else
							local v4236 = v83[2 + 0];
							v81[v4236](v13(v81, v4236 + 1 + 0, v83[3 + 0]));
						end
					elseif ((v84 <= (1621 - (917 + 401))) or (1900 >= 4003)) then
						if ((v84 > 302) or (1492 == 1542)) then
							local v4237 = v83[2];
							local v4238, v4239 = v74(v81[v4237](v81[v4237 + (1271 - (631 + 639))]));
							v76 = (v4239 + v4237) - (1701 - (654 + 1046));
							local v4240 = 0 + 0;
							for v6083 = v4237, v76 do
								local v6084 = 1599 - (1007 + 592);
								while true do
									if (v6084 == (0 - 0)) then
										v4240 = v4240 + (1 - 0);
										v81[v6083] = v4238[v4240];
										break;
									end
								end
							end
						else
							v81[v83[2 + 0]] = v81[v83[12 - 9]][v83[11 - 7]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[324 - (26 + 296)]] = v61[v83[3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[7 - 5]] = v81[v83[2 + 1]][v81[v83[821 - (418 + 399)]]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[710 - (314 + 393)]][v83[15 - 11]];
							v75 = v75 + (171 - (82 + 88));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[150 - (95 + 52)]][v83[1 + 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v62[v83[8 - 5]];
							v75 = v75 + (834 - (8 + 825));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[1643 - (471 + 1169)]][v83[4 + 0]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[9 - 7]] = v81[v83[8 - 5]][v83[3 + 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[447 - (365 + 78)]];
							v75 = v75 + (224 - (200 + 23));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[381 - (373 + 6)]] = v81[v83[11 - 8]][v83[7 - 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[924 - (519 + 403)]] = v61[v83[1524 - (1435 + 86)]];
							v75 = v75 + (178 - (97 + 80));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[705 - (366 + 336)]] * v81[v83[4]];
							v75 = v75 + (606 - (4 + 601));
							v83 = v71[v75];
							v81[v83[2 + 0]][v83[671 - (128 + 540)]] = v81[v83[573 - (341 + 228)]];
							v75 = v75 + (1789 - (231 + 1557));
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[13 - 10];
						end
					elseif (v84 > (187 + 117)) then
						local v4266 = 1351 - (1329 + 22);
						local v4267;
						local v4268;
						while true do
							if ((v4266 == 1) or (2845 <= 1549)) then
								v81[v4268] = v4267[v83[4]];
								v75 = v75 + (704 - (27 + 676));
								v83 = v71[v75];
								v81[v83[7 - 5]] = v83[11 - 8];
								v75 = v75 + (1692 - (219 + 1472));
								v4266 = 2;
							end
							if (v4266 == (2 + 4)) then
								v83 = v71[v75];
								if (v81[v83[2 + 0]] or (2035 >= 4974)) then
									v75 = v75 + (389 - (162 + 226));
								else
									v75 = v83[4 - 1];
								end
								break;
							end
							if ((0 + 0) == v4266) then
								v4267 = nil;
								v4268 = nil;
								v4268 = v83[4 - 2];
								v4267 = v81[v83[893 - (224 + 666)]];
								v81[v4268 + 1] = v4267;
								v4266 = 1681 - (345 + 1335);
							end
							if (v4266 == (5 + 0)) then
								v81[v4268] = v81[v4268](v13(v81, v4268 + (2 - 1), v83[11 - 8]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[367 - (18 + 347)]] = v81[v83[3]];
								v75 = v75 + (973 - (556 + 416));
								v4266 = 1705 - (797 + 902);
							end
							if (v4266 == (1 + 2)) then
								v4268 = v83[8 - 6];
								v4267 = v81[v83[3]];
								v81[v4268 + 1] = v4267;
								v81[v4268] = v4267[v83[13 - 9]];
								v75 = v75 + (1073 - (632 + 440));
								v4266 = 6 - 2;
							end
							if (v4266 == (1211 - (705 + 504))) then
								v83 = v71[v75];
								v4268 = v83[2 - 0];
								v81[v4268] = v81[v4268](v13(v81, v4268 + (2 - 1), v83[1920 - (1300 + 617)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v4266 = 13 - 10;
							end
							if ((4221 > 328) and (v4266 == 4)) then
								v83 = v71[v75];
								v81[v83[2]] = v83[1925 - (36 + 1886)];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v4268 = v83[2];
								v4266 = 621 - (305 + 311);
							end
						end
					else
						local v4269;
						local v4270;
						v81[v83[2 + 0]] = v81[v83[1458 - (1093 + 362)]][v83[1102 - (734 + 364)]];
						v75 = v75 + (1009 - (374 + 634));
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[1120 - (331 + 786)]][v83[1100 - (759 + 337)]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v4270 = v83[566 - (255 + 309)];
						v4269 = v81[v83[3]];
						v81[v4270 + (494 - (484 + 9))] = v4269;
						v81[v4270] = v4269[v83[4 + 0]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2 + 0]] = v62[v83[5 - 2]];
						v75 = v75 + (1451 - (341 + 1109));
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[663 - (483 + 176)]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[2 + 1]][v83[3 + 1]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1282 - (47 + 1233)]] = v83[3 + 0] ~= 0;
						v75 = v75 + (615 - (421 + 193));
						v83 = v71[v75];
						v4270 = v83[7 - 5];
						v81[v4270](v13(v81, v4270 + (1 - 0), v83[3]));
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[8 - 6]] = v62[v83[2 + 1]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[4]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[1846 - (463 + 1381)]] = v81[v83[3 + 0]][v83[1 + 3]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v4270 = v83[2];
						v4269 = v81[v83[6 - 3]];
						v81[v4270 + (1 - 0)] = v4269;
						v81[v4270] = v4269[v83[1165 - (696 + 465)]];
						v75 = v75 + (561 - (14 + 546));
						v83 = v71[v75];
						v81[v83[1 + 1]] = v62[v83[3]];
						v75 = v75 + (1441 - (413 + 1027));
						v83 = v71[v75];
						v81[v83[1818 - (1382 + 434)]] = v81[v83[8 - 5]][v83[1528 - (86 + 1438)]];
						v75 = v75 + (722 - (692 + 29));
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[3]][v83[12 - 8]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v83[2 + 1] ~= (0 + 0);
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v4270 = v83[6 - 4];
						v81[v4270](v13(v81, v4270 + (2 - 1), v83[61 - (11 + 47)]));
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2 + 0]] = v62[v83[3]];
						v75 = v75 + (450 - (287 + 162));
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[3]][v83[3 + 1]];
						v75 = v75 + (1630 - (10 + 1619));
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[3 + 0]][v83[2 + 2]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v4270 = v83[1272 - (403 + 867)];
						v4269 = v81[v83[355 - (310 + 42)]];
						v81[v4270 + 1 + 0] = v4269;
						v81[v4270] = v4269[v83[3 + 1]];
						v75 = v75 + (1446 - (1170 + 275));
						v83 = v71[v75];
						v81[v83[2 + 0]] = v62[v83[10 - 7]];
						v75 = v75 + (684 - (424 + 259));
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[3]][v83[4]];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[1066 - (289 + 775)]] = v81[v83[7 - 4]][v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[4 - 2]] = v83[11 - 8] ~= (0 - 0);
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v4270 = v83[2];
						v81[v4270](v13(v81, v4270 + 1, v83[13 - 10]));
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1892 - (946 + 944)]] = v62[v83[7 - 4]];
						v75 = v75 + (4 - 3);
						v83 = v71[v75];
						v81[v83[2 + 0]] = v81[v83[3 - 0]][v83[1447 - (949 + 494)]];
						v75 = v75 + (1231 - (505 + 725));
						v83 = v71[v75];
						v81[v83[5 - 3]] = v81[v83[3]][v83[2 + 2]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v4270 = v83[2];
						v4269 = v81[v83[3]];
						v81[v4270 + (3 - 2)] = v4269;
						v81[v4270] = v4269[v83[4]];
						v75 = v75 + (1952 - (1928 + 23));
						v83 = v71[v75];
						v81[v83[2]] = v62[v83[1 + 2]];
						v75 = v75 + (4 - 3);
						v83 = v71[v75];
						v81[v83[2 - 0]] = v81[v83[4 - 1]][v83[12 - 8]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[238 - (40 + 196)]] = v81[v83[1020 - (845 + 172)]][v83[1285 - (423 + 858)]];
						v75 = v75 + (1703 - (1520 + 182));
						v83 = v71[v75];
						v81[v83[1468 - (196 + 1270)]] = v83[1809 - (763 + 1043)] ~= (0 - 0);
						v75 = v75 + 1;
						v83 = v71[v75];
						v4270 = v83[1277 - (1144 + 131)];
						v81[v4270](v13(v81, v4270 + (1 - 0), v83[532 - (458 + 71)]));
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[5 - 3]] = v83[4 - 1];
					end
				elseif (v84 <= (291 + 65)) then
					if ((v84 <= (319 + 11)) or (4277 == 1762)) then
						if (v84 <= (2090 - (775 + 998))) then
							if (v84 <= (455 - (78 + 66))) then
								if (v84 <= (273 + 35)) then
									if (v84 <= 306) then
										local v1195;
										local v1196;
										v81[v83[5 - 3]] = v83[1047 - (437 + 607)];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1196 = v83[33 - (30 + 1)];
										v81[v1196] = v81[v1196](v13(v81, v1196 + (812 - (786 + 25)), v83[11 - 8]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1196 = v83[2];
										v1195 = v81[v83[3]];
										v81[v1196 + 1] = v1195;
										v81[v1196] = v1195[v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v83[1 + 2];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1196 = v83[66 - (9 + 55)];
										v81[v1196] = v81[v1196](v13(v81, v1196 + (766 - (256 + 509)), v83[1963 - (1497 + 463)]));
										v75 = v75 + (957 - (567 + 389));
										v83 = v71[v75];
										if v81[v83[2]] then
											v75 = v75 + 1;
										else
											v75 = v83[63 - (14 + 46)];
										end
									elseif (v84 == (560 - 253)) then
										local v4328;
										local v4329;
										v81[v83[2 - 0]] = v81[v83[3]][v83[5 - 1]];
										v75 = v75 + (817 - (301 + 515));
										v83 = v71[v75];
										v4329 = v83[539 - (45 + 492)];
										v4328 = v81[v83[1 + 2]];
										v81[v4329 + (2 - 1)] = v4328;
										v81[v4329] = v4328[v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4329 = v83[2 + 0];
										v81[v4329] = v81[v4329](v81[v4329 + 1 + 0]);
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[645 - (228 + 415)]] = v81[v83[2 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[9 - 5]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[256 - (147 + 107)]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1034 - (925 + 107)]] = v83[475 - (375 + 97)];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[8 - 5];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1576 - (298 + 1276)]] = v83[1783 - (1225 + 555)];
									else
										local v4352 = 0 + 0;
										local v4353;
										local v4354;
										while true do
											if (0 == v4352) then
												v4353 = nil;
												v4354 = nil;
												v81[v83[2 - 0]] = v81[v83[292 - (75 + 214)]][v83[4]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v4352 = 452 - (366 + 85);
											end
											if (v4352 == (856 - (380 + 473))) then
												v4353 = v81[v83[2 + 1]];
												v81[v4354 + (1 - 0)] = v4353;
												v81[v4354] = v4353[v83[1573 - (934 + 635)]];
												v75 = v75 + (681 - (266 + 414));
												v83 = v71[v75];
												v4352 = 4;
											end
											if (v4352 == (5 + 0)) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[3]][v83[549 - (62 + 483)]];
												v75 = v75 + (1635 - (904 + 730));
												v83 = v71[v75];
												v4352 = 10 - 4;
											end
											if (v4352 == 1) then
												v81[v83[1 + 1]] = v81[v83[1229 - (371 + 855)]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v81[v83[1214 - (749 + 463)]] = v62[v83[4 - 1]];
												v75 = v75 + 1 + 0;
												v4352 = 3 - 1;
											end
											if ((4503 >= 1172) and ((10 - 6) == v4352)) then
												v4354 = v83[2 - 0];
												v81[v4354] = v81[v4354](v81[v4354 + 1]);
												v75 = v75 + (3 - 2);
												v83 = v71[v75];
												v81[v83[2]] = v62[v83[2 + 1]];
												v4352 = 17 - 12;
											end
											if (v4352 == (1 + 1)) then
												v83 = v71[v75];
												v81[v83[2]] = v81[v83[3]][v83[10 - 6]];
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v4354 = v83[6 - 4];
												v4352 = 1 + 2;
											end
											if (v4352 == (18 - 12)) then
												v81[v83[2]] = v83[1 + 2];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[3 - 1]] = v62[v83[47 - (5 + 39)]];
												break;
											end
										end
									end
								elseif (v84 <= 309) then
									local v1209 = 1276 - (20 + 1256);
									local v1210;
									local v1211;
									while true do
										if (v1209 == (2 + 2)) then
											v81[v83[658 - (616 + 40)]] = v83[3];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v1209 = 5 + 0;
										end
										if (((2 - 0) == v1209) or (2977 == 3237)) then
											v1211 = v83[5 - 3];
											v1210 = v81[v83[657 - (82 + 572)]];
											v81[v1211 + 1 + 0] = v1210;
											v1209 = 3;
										end
										if (v1209 == (0 - 0)) then
											v1210 = nil;
											v1211 = nil;
											v1211 = v83[712 - (349 + 361)];
											v1209 = 703 - (552 + 150);
										end
										if (v1209 == (803 - (521 + 281))) then
											v81[v1211](v13(v81, v1211 + (119 - (15 + 103)), v83[1412 - (974 + 435)]));
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v1209 = 5 - 3;
										end
										if (v1209 == (5 + 0)) then
											v81[v83[2]] = v83[1 + 2];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1209 = 6 + 0;
										end
										if (v1209 == (1108 - (925 + 177))) then
											v81[v83[2]] = v83[8 - 5] ~= (19 - (12 + 7));
											break;
										end
										if (v1209 == (3 + 0)) then
											v81[v1211] = v1210[v83[10 - 6]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v1209 = 4;
										end
									end
								elseif (v84 > (153 + 157)) then
									local v4355;
									local v4356;
									v4356 = v83[4 - 2];
									v4355 = v81[v83[11 - 8]];
									v81[v4356 + 1] = v4355;
									v81[v4356] = v4355[v83[6 - 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + (367 - (198 + 168));
									v83 = v71[v75];
									v4356 = v83[2 + 0];
									v81[v4356] = v81[v4356](v13(v81, v4356 + (2 - 1), v83[10 - 7]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[5 - 2]];
									v75 = v75 + (61 - (4 + 56));
									v83 = v71[v75];
									for v6100 = v83[4 - 2], v83[9 - 6] do
										v81[v6100] = nil;
									end
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[2 + 1];
								else
									local v4369 = 0;
									local v4370;
									local v4371;
									while true do
										if (v4369 == 8) then
											v81[v4371] = v4370[v83[5 - 1]];
											v75 = v75 + (1899 - (1270 + 628));
											v83 = v71[v75];
											v4369 = 1331 - (570 + 752);
										end
										if ((998 <= 4483) and (v4369 == 2)) then
											v75 = v75 + (1462 - (958 + 503));
											v83 = v71[v75];
											v4371 = v83[2];
											v4369 = 3;
										end
										if ((456 <= 1199) and (v4369 == (0 - 0))) then
											v4370 = nil;
											v4371 = nil;
											v62[v83[3]] = v81[v83[2 + 0]];
											v4369 = 3 - 2;
										end
										if ((v4369 == (5 - 2)) or (3407 > 3565)) then
											v4370 = v81[v83[2 + 1]];
											v81[v4371 + 1 + 0] = v4370;
											v81[v4371] = v4370[v83[4]];
											v4369 = 11 - 7;
										end
										if (v4369 == (15 - 8)) then
											v4371 = v83[2];
											v4370 = v81[v83[932 - (799 + 130)]];
											v81[v4371 + 1 + 0] = v4370;
											v4369 = 3 + 5;
										end
										if (v4369 == (42 - 33)) then
											v4371 = v83[1 + 1];
											v81[v4371](v81[v4371 + (2 - 1)]);
											break;
										end
										if ((4494 > 1518) and (v4369 == (1441 - (772 + 664)))) then
											v81[v4371](v81[v4371 + 1 + 0]);
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v4369 = 1079 - (46 + 1027);
										end
										if (v4369 == (1359 - (467 + 886))) then
											v81[v83[2 - 0]] = v62[v83[5 - 2]];
											v75 = v75 + (684 - (582 + 101));
											v83 = v71[v75];
											v4369 = 752 - (574 + 171);
										end
										if (v4369 == (4 + 0)) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v4371 = v83[369 - (66 + 301)];
											v4369 = 5;
										end
										if (v4369 == (482 - (423 + 58))) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1082 - (141 + 939)]] = v62[v83[3]];
											v4369 = 683 - (532 + 149);
										end
									end
								end
							elseif (v84 <= (160 + 154)) then
								if ((v84 <= (1230 - (592 + 326))) or (2140 >= 3566)) then
									local v1212;
									local v1213;
									v1213 = v83[7 - 5];
									v1212 = v81[v83[3]];
									v81[v1213 + (4 - 3)] = v1212;
									v81[v1213] = v1212[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[827 - (467 + 358)]] = v62[v83[13 - 10]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[2 + 1]][v83[12 - 8]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v1213 = v83[1828 - (233 + 1593)];
									v81[v1213] = v81[v1213](v81[v1213 + (1 - 0)]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[764 - (28 + 734)]] = v62[v83[4 - 1]];
									v75 = v75 + (1132 - (337 + 794));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[3]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[706 - (342 + 360)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1002 - (440 + 559)]][v83[4]];
								elseif (v84 == 313) then
									local v4372;
									local v4373;
									local v4374;
									local v4375;
									local v4376;
									local v4377;
									local v4378;
									v81[v83[2]] = v62[v83[581 - (150 + 428)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v4378 = v83[2];
									v4377 = v81[v83[1 + 2]];
									v81[v4378 + (158 - (15 + 142))] = v4377;
									v81[v4378] = v4377[v83[1 + 3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1679 - (757 + 919)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v4378 = v83[2];
									v81[v4378] = v81[v4378](v13(v81, v4378 + 1, v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v81[v83[3 + 0]][v83[10 - 6]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v4378 = v83[2];
									v4377 = v81[v83[54 - (8 + 43)]];
									v81[v4378 + 1] = v4377;
									v81[v4378] = v4377[v83[10 - 6]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]];
									v75 = v75 + (297 - (236 + 60));
									v83 = v71[v75];
									v4378 = v83[1 + 1];
									v81[v4378] = v81[v4378](v13(v81, v4378 + 1 + 0, v83[3]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v62[v83[3]] = v81[v83[1 + 1]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v4378 = v83[6 - 4];
									v4376 = {};
									for v6102 = 1 + 0, #v80 do
										v4375 = v80[v6102];
										for v6608 = 0 - 0, #v4375 do
											v4374 = v4375[v6608];
											v4373 = v4374[1 + 0];
											v4372 = v4374[270 - (35 + 233)];
											if ((v4373 == v81) and (v4372 >= v4378)) then
												v4376[v4372] = v4373[v4372];
												v4374[1898 - (547 + 1350)] = v4376;
											end
										end
									end
									v75 = v75 + 1;
									v83 = v71[v75];
									v75 = v83[5 - 2];
								else
									local v4399;
									local v4400;
									v81[v83[8 - 6]] = v81[v83[3]][v83[606 - (593 + 9)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1398 - (298 + 1097)]][v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v4400 = v83[9 - 7];
									v4399 = v81[v83[7 - 4]];
									v81[v4400 + (835 - (479 + 355))] = v4399;
									v81[v4400] = v4399[v83[400 - (175 + 221)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v81[v83[2 + 1]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[8 - 5]][v83[1329 - (471 + 854)]];
									v75 = v75 + (808 - (55 + 752));
									v83 = v71[v75];
									v81[v83[387 - (97 + 288)]] = v83[3] ~= 0;
									v75 = v75 + (1436 - (317 + 1118));
									v83 = v71[v75];
									v4400 = v83[2];
									v81[v4400](v13(v81, v4400 + 1, v83[3]));
									v75 = v75 + (1890 - (198 + 1691));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[603 - (263 + 337)]];
									v75 = v75 + (1011 - (577 + 433));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[989 - (185 + 801)]][v83[518 - (270 + 244)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[3 + 0]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v4400 = v83[3 - 1];
									v4399 = v81[v83[2 + 1]];
									v81[v4400 + (2 - 1)] = v4399;
									v81[v4400] = v4399[v83[6 - 2]];
									v75 = v75 + (1264 - (653 + 610));
									v83 = v71[v75];
									v81[v83[1782 - (1358 + 422)]] = v62[v83[1154 - (123 + 1028)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[619 - (469 + 148)]] = v81[v83[2 + 1]][v83[10 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v81[v83[13 - 10]][v83[2 + 2]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[1433 - (187 + 1243)] ~= 0;
									v75 = v75 + (1905 - (1011 + 893));
									v83 = v71[v75];
									v4400 = v83[2];
									v81[v4400](v13(v81, v4400 + 1 + 0, v83[1 + 2]));
									v75 = v75 + (1482 - (1349 + 132));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1419 - (921 + 495)];
									v75 = v75 + (757 - (112 + 644));
									v83 = v71[v75];
									v75 = v83[6 - 3];
								end
							elseif (v84 <= (176 + 139)) then
								local v1234;
								local v1235;
								v1235 = v83[280 - (140 + 138)];
								v1234 = v81[v83[3 + 0]];
								v81[v1235 + (265 - (74 + 190))] = v1234;
								v81[v1235] = v1234[v83[1356 - (233 + 1119)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v1235 = v83[2];
								v81[v1235](v13(v81, v1235 + (1 - 0), v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[508 - (248 + 257)]][v83[6 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1493 - (1472 + 19)]] = v81[v83[3 + 0]][v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[274 - (120 + 152)]][v83[3 + 0]] = v81[v83[9 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v75 = v83[3];
							elseif (v84 > 316) then
								local v4435;
								local v4436;
								v81[v83[1218 - (401 + 815)]] = v81[v83[2 + 1]][v83[10 - 6]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[9 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3 + 0]][v83[764 - (51 + 709)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v4436 = v83[2];
								v4435 = v81[v83[3]];
								v81[v4436 + (110 - (33 + 76))] = v4435;
								v81[v4436] = v4435[v83[5 - 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[553 - (154 + 396)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v4436 = v83[2 + 0];
								v81[v4436] = v81[v4436](v13(v81, v4436 + 1, v83[1 + 2]));
								v75 = v75 + (1513 - (24 + 1488));
								v83 = v71[v75];
								v4436 = v83[6 - 4];
								v4435 = v81[v83[430 - (246 + 181)]];
								v81[v4436 + 1 + 0] = v4435;
								v81[v4436] = v4435[v83[4 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[3 + 0]];
								v75 = v75 + (1860 - (413 + 1446));
								v83 = v71[v75];
								v4436 = v83[2 - 0];
								v81[v4436] = v81[v4436](v13(v81, v4436 + 1 + 0, v83[1979 - (29 + 1947)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v62[v83[3]] = v81[v83[2]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[4 - 2]] = v62[v83[2 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4436 = v83[4 - 2];
								v4435 = v81[v83[1 + 2]];
								v81[v4436 + 1] = v4435;
								v81[v4436] = v4435[v83[9 - 5]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[8 - 5];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[405 - (74 + 328)];
								v75 = v75 + (654 - (144 + 509));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[2 + 1];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4436 = v83[1 + 1];
								v81[v4436](v13(v81, v4436 + (1364 - (319 + 1044)), v83[11 - 8]));
								v75 = v75 + (631 - (14 + 616));
								v83 = v71[v75];
								v81[v83[580 - (303 + 275)]] = v62[v83[1853 - (1659 + 191)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								if v81[v83[1 + 1]] then
									v75 = v75 + (569 - (205 + 363));
								else
									v75 = v83[5 - 2];
								end
							else
								local v4472;
								v81[v83[576 - (147 + 427)]] = v62[v83[4 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v81[v83[1 + 2]][v83[6 - 2]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1230 - (1108 + 120)]] = v83[10 - 7];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[653 - (303 + 348)]] = v83[3];
								v75 = v75 + (312 - (242 + 69));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + (214 - (172 + 41));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[141 - (40 + 98)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v4472 = v83[5 - 3];
								v81[v4472] = v81[v4472](v13(v81, v4472 + (798 - (161 + 636)), v83[14 - 11]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]][v83[3 + 0]] = v81[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[2 + 1]];
								v75 = v75 + (630 - (123 + 506));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[3]][v83[4]];
							end
						elseif (v84 <= 323) then
							if (v84 <= 320) then
								if (v84 <= (2220 - (296 + 1606))) then
									local v1252 = 0 + 0;
									local v1253;
									local v1254;
									while true do
										if ((1825 < 4227) and (v1252 == (8 - 4))) then
											v1253 = v81[v83[3 + 0]];
											v81[v1254 + 1 + 0] = v1253;
											v81[v1254] = v1253[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1621 - (863 + 756)]] = v83[1427 - (39 + 1385)];
											v1252 = 764 - (52 + 707);
										end
										if (2 == v1252) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[447 - (358 + 87)]] = v81[v83[1 + 2]][v83[13 - 9]];
											v75 = v75 + (1335 - (27 + 1307));
											v83 = v71[v75];
											v81[v83[3 - 1]] = v62[v83[3]];
											v1252 = 3 + 0;
										end
										if ((v1252 == (0 - 0)) or (2150 < 717)) then
											v1253 = nil;
											v1254 = nil;
											v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v81[v83[8 - 5]][v83[267 - (152 + 111)]];
											v1252 = 1 + 0;
										end
										if (v1252 == (8 - 3)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1254 = v83[7 - 5];
											v81[v1254] = v81[v1254](v13(v81, v1254 + (2 - 1), v83[3]));
											break;
										end
										if ((3217 > 1382) and (v1252 == (1 + 0))) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[283 - (32 + 249)]] = v81[v83[1057 - (793 + 261)]][v83[11 - 7]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[3 - 1]] = v81[v83[230 - (109 + 118)]][v83[1 + 3]];
											v1252 = 597 - (115 + 480);
										end
										if ((212 < 3106) and (v1252 == (1 + 2))) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[1416 - (547 + 866)]][v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1254 = v83[264 - (259 + 3)];
											v1252 = 4;
										end
									end
								elseif ((1635 >= 1043) and (v84 > (155 + 164))) then
									local v4492;
									v81[v83[2]] = v81[v83[3]][v83[8 - 4]];
									v75 = v75 + (1420 - (891 + 528));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[3];
									v75 = v75 + 1;
									v83 = v71[v75];
									v4492 = v83[1 + 1];
									v81[v4492] = v81[v4492](v81[v4492 + (4 - 3)]);
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v62[v83[3]] = v81[v83[3 - 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[1 + 2];
									v75 = v75 + 1;
									v83 = v71[v75];
									v75 = v83[1 + 2];
								else
									local v4504 = 0 - 0;
									local v4505;
									local v4506;
									while true do
										if ((1952 - (1144 + 807)) == v4504) then
											for v9691 = 1, #v80 do
												local v9692 = 0 + 0;
												local v9693;
												while true do
													if (v9692 == (0 - 0)) then
														v9693 = v80[v9691];
														for v9768 = 0 + 0, #v9693 do
															local v9769 = v9693[v9768];
															local v9770 = v9769[1 - 0];
															local v9771 = v9769[1114 - (930 + 182)];
															if ((v9770 == v81) and (v9771 >= v4505)) then
																v4506[v9771] = v9770[v9771];
																v9769[1835 - (1429 + 405)] = v4506;
															end
														end
														break;
													end
												end
											end
											break;
										end
										if ((162 < 1869) and (v4504 == 0)) then
											v4505 = v83[779 - (641 + 136)];
											v4506 = {};
											v4504 = 2 - 1;
										end
									end
								end
							elseif (v84 <= (201 + 120)) then
								local v1255 = 0 - 0;
								local v1256;
								local v1257;
								while true do
									if (v1255 == (1 + 2)) then
										v81[v83[715 - (87 + 626)]] = v62[v83[4 - 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1257 = v83[1287 - (1261 + 24)];
										v1256 = v81[v83[3]];
										v81[v1257 + 1] = v1256;
										v1255 = 4 + 0;
									end
									if ((1741 <= 4712) and (v1255 == 6)) then
										v83 = v71[v75];
										v81[v83[7 - 5]] = v83[2 + 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v75 = v83[3 + 0];
										break;
									end
									if (v1255 == (1 + 1)) then
										v81[v1257] = v81[v1257](v13(v81, v1257 + (3 - 2), v83[13 - 10]));
										v75 = v75 + (858 - (822 + 35));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1788 - (360 + 1425)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1255 = 8 - 5;
									end
									if (v1255 == 5) then
										v1257 = v83[2 + 0];
										v81[v1257] = v81[v1257](v13(v81, v1257 + (297 - (283 + 13)), v83[5 - 2]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[2 + 1]];
										v75 = v75 + 1 + 0;
										v1255 = 9 - 3;
									end
									if ((1034 - (810 + 220)) == v1255) then
										v81[v1257] = v1256[v83[7 - 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[214 - (195 + 16)];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1255 = 22 - 17;
									end
									if ((v1255 == (1 + 0)) or (413 >= 4580)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v83[1 + 2];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1257 = v83[587 - (92 + 493)];
										v1255 = 1 + 1;
									end
									if (v1255 == (0 + 0)) then
										v1256 = nil;
										v1257 = nil;
										v1257 = v83[1160 - (75 + 1083)];
										v1256 = v81[v83[10 - 7]];
										v81[v1257 + (1 - 0)] = v1256;
										v81[v1257] = v1256[v83[19 - 15]];
										v1255 = 1;
									end
								end
							elseif (v84 > (145 + 177)) then
								local v4507;
								v81[v83[2]] = v81[v83[2 + 1]][v83[18 - 14]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[2 + 1]][v83[1379 - (159 + 1216)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[3 + 0]][v83[11 - 7]];
								v75 = v75 + (1616 - (418 + 1197));
								v83 = v71[v75];
								v81[v83[966 - (632 + 332)]] = v81[v83[1601 - (964 + 634)]][v83[8 - 4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4507 = v83[2 + 0];
								v81[v4507] = v81[v4507](v13(v81, v4507 + 1 + 0, v83[3 - 0]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[6 - 3]];
								v75 = v75 + (1652 - (1559 + 92));
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[4 + 0]];
								v75 = v75 + (38 - (9 + 28));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]];
							else
								local v4523;
								local v4524, v4525;
								local v4526;
								local v4527;
								v4527 = v83[1954 - (922 + 1030)];
								v4526 = v81[v83[386 - (345 + 38)]];
								v81[v4527 + 1 + 0] = v4526;
								v81[v4527] = v4526[v83[4 + 0]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[562 - (546 + 14)]] = v83[1070 - (7 + 1060)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4527 = v83[7 - 5];
								v81[v4527] = v81[v4527](v13(v81, v4527 + 1, v83[403 - (256 + 144)]));
								v75 = v75 + (123 - (7 + 115));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[537 - (21 + 513)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1279 - (59 + 1218)]] = v81[v83[5 - 2]][v83[7 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[3]][v83[190 - (155 + 31)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4527 = v83[1993 - (1417 + 574)];
								v4526 = v81[v83[155 - (112 + 40)]];
								v81[v4527 + (1 - 0)] = v4526;
								v81[v4527] = v4526[v83[4 + 0]];
								v75 = v75 + (685 - (326 + 358));
								v83 = v71[v75];
								v81[v83[834 - (4 + 828)]] = v62[v83[8 - 5]];
								v75 = v75 + (1718 - (85 + 1632));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[1142 - (1096 + 43)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v4527 = v83[420 - (176 + 242)];
								v4524, v4525 = v74(v81[v4527](v81[v4527 + (913 - (313 + 599))]));
								v76 = (v4525 + v4527) - (640 - (402 + 237));
								v4523 = 0;
								for v6166 = v4527, v76 do
									v4523 = v4523 + 1 + 0;
									v81[v6166] = v4524[v4523];
								end
								v75 = v75 + 1;
								v83 = v71[v75];
								v4527 = v83[1058 - (551 + 505)];
								v81[v4527](v13(v81, v4527 + 1, v76));
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v75 = v83[3];
							end
						elseif ((94 <= 4655) and (v84 <= (869 - 543))) then
							if (v84 <= (757 - (268 + 165))) then
								local v1258;
								v81[v83[2]] = v81[v83[1 + 2]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[1776 - (238 + 1534)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v1258 = v83[920 - (302 + 616)];
								v81[v1258] = v81[v1258](v81[v1258 + 1 + 0]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1830 - (1054 + 774)]] = v81[v83[3 + 0]];
								v75 = v75 + (1326 - (240 + 1085));
								v83 = v71[v75];
								if not v81[v83[1229 - (1220 + 7)]] then
									v75 = v75 + 1;
								else
									v75 = v83[3 + 0];
								end
							elseif (v84 == (2294 - (1819 + 150))) then
								local v4556;
								local v4557;
								v81[v83[2 + 0]] = v62[v83[3 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1 + 2]][v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[1367 - (229 + 1135)]][v83[8 - 4]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[786 - (289 + 493)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v4557 = v83[2];
								v4556 = v81[v83[1 + 2]];
								v81[v4557 + (3 - 2)] = v4556;
								v81[v4557] = v4556[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[6 - 3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4557 = v83[1 + 1];
								v81[v4557] = v81[v4557](v13(v81, v4557 + 1, v83[1291 - (1170 + 118)]));
								v75 = v75 + (1810 - (817 + 992));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[6 - 3]][v83[18 - 14]];
								v75 = v75 + (1173 - (852 + 320));
								v83 = v71[v75];
								v4557 = v83[2 + 0];
								v4556 = v81[v83[804 - (731 + 70)]];
								v81[v4557 + 1] = v4556;
								v81[v4557] = v4556[v83[5 - 1]];
							else
								local v4579 = 598 - (17 + 581);
								local v4580;
								local v4581;
								while true do
									if ((4930 >= 1944) and (v4579 == (1333 - (470 + 853)))) then
										v75 = v75 + (65 - (30 + 34));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[5 - 2]][v83[4]];
										v75 = v75 + (221 - (180 + 40));
										v83 = v71[v75];
										v81[v83[5 - 3]] = v83[181 - (11 + 167)] ~= (1639 - (127 + 1512));
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4579 = 37 - 26;
									end
									if (v4579 == (2 + 1)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4581 = v83[2];
										v81[v4581](v13(v81, v4581 + (2 - 1), v83[2 + 1]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[891 - (304 + 584)]];
										v75 = v75 + 1;
										v4579 = 8 - 4;
									end
									if (v4579 == (16 - 9)) then
										v83 = v71[v75];
										v4581 = v83[2 - 0];
										v81[v4581](v13(v81, v4581 + 1 + 0, v83[14 - 11]));
										v75 = v75 + (1662 - (997 + 664));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4579 = 7 + 1;
									end
									if ((4833 >= 783) and (v4579 == 11)) then
										v4581 = v83[986 - (231 + 753)];
										v81[v4581](v13(v81, v4581 + (1 - 0), v83[3]));
										v75 = v75 + (1579 - (615 + 963));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[3 + 0];
										v75 = v75 + 1;
										v83 = v71[v75];
										v75 = v83[4 - 1];
										break;
									end
									if ((1989 > 220) and (v4579 == 2)) then
										v83 = v71[v75];
										v81[v83[1806 - (863 + 941)]] = v81[v83[841 - (461 + 377)]][v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[1275 - (455 + 817)]][v83[3 + 1]];
										v75 = v75 + (833 - (123 + 709));
										v83 = v71[v75];
										v81[v83[2]] = v83[1 + 2] ~= (1694 - (618 + 1076));
										v4579 = 4 - 1;
									end
									if (v4579 == 4) then
										v83 = v71[v75];
										v81[v83[8 - 6]] = v81[v83[3]][v83[4 + 0]];
										v75 = v75 + (945 - (657 + 287));
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[1854 - (1256 + 595)]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4581 = v83[76 - (59 + 15)];
										v4579 = 4 + 1;
									end
									if ((1 + 0) == v4579) then
										v4581 = v83[1 + 1];
										v4580 = v81[v83[755 - (406 + 346)]];
										v81[v4581 + (2 - 1)] = v4580;
										v81[v4581] = v4580[v83[15 - 11]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[193 - (127 + 64)]] = v62[v83[3]];
										v75 = v75 + 1;
										v4579 = 947 - (70 + 875);
									end
									if (v4579 == (9 - 3)) then
										v81[v83[4 - 2]] = v81[v83[2 + 1]][v83[4 + 0]];
										v75 = v75 + (1590 - (1039 + 550));
										v83 = v71[v75];
										v81[v83[204 - (35 + 167)]] = v81[v83[3]][v83[1217 - (103 + 1110)]];
										v75 = v75 + (1115 - (540 + 574));
										v83 = v71[v75];
										v81[v83[6 - 4]] = v83[3] ~= 0;
										v75 = v75 + (1395 - (1283 + 111));
										v4579 = 359 - (204 + 148);
									end
									if (v4579 == (13 - 4)) then
										v81[v4581 + 1 + 0] = v4580;
										v81[v4581] = v4580[v83[2 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[552 - (58 + 492)]] = v62[v83[12 - 9]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[3]][v83[4]];
										v4579 = 46 - 36;
									end
									if ((v4579 == 8) or (4672 < 3429)) then
										v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[787 - (531 + 252)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[3]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4581 = v83[2];
										v4580 = v81[v83[1789 - (928 + 858)]];
										v4579 = 15 - 6;
									end
									if (v4579 == 5) then
										v4580 = v81[v83[3]];
										v81[v4581 + (773 - (108 + 664))] = v4580;
										v81[v4581] = v4580[v83[6 - 2]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3 + 0]];
										v75 = v75 + (836 - (732 + 103));
										v83 = v71[v75];
										v4579 = 6;
									end
									if ((628 - (351 + 277)) == v4579) then
										v4580 = nil;
										v4581 = nil;
										v81[v83[682 - (538 + 142)]] = v81[v83[13 - 10]][v83[1831 - (189 + 1638)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[1225 - (348 + 875)]] = v81[v83[1219 - (1202 + 14)]][v83[639 - (619 + 16)]];
										v75 = v75 + (680 - (445 + 234));
										v83 = v71[v75];
										v4579 = 2 - 1;
									end
								end
							end
						elseif (v84 <= (829 - (295 + 206))) then
							if (v84 == 327) then
								v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[151 - (84 + 63)]];
								v75 = v75 + (1373 - (913 + 459));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[785 - (700 + 82)]][v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[445 - (362 + 81)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (180 - (133 + 46));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[1528 - (1219 + 306)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1959 - (1012 + 945)]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[759 - (481 + 276)]] = v81[v83[6 - 3]][v83[10 - 6]];
								v75 = v75 + (124 - (49 + 74));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[7 - 4];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[2 + 1];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[8 - 6]] = v83[3];
							else
								local v4602 = 0 - 0;
								local v4603;
								local v4604;
								while true do
									if (((8 - 5) == v4602) or (1614 == 796)) then
										v4604 = v83[1 + 1];
										v81[v4604] = v81[v4604](v81[v4604 + (2 - 1)]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4602 = 11 - 7;
									end
									if (v4602 == (2 - 1)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[6 - 3]];
										v75 = v75 + (1 - 0);
										v4602 = 2;
									end
									if ((1387 < 2230) and (v4602 == (1732 - (17 + 1711)))) then
										v62[v83[8 - 5]] = v81[v83[115 - (14 + 99)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4604 = v83[2];
										v4602 = 9 - 4;
									end
									if ((3029 == 3029) and ((310 - (287 + 23)) == v4602)) then
										v4603 = nil;
										v4604 = nil;
										v4604 = v83[4 - 2];
										v81[v4604](v13(v81, v4604 + (2 - 1), v83[437 - (54 + 380)]));
										v4602 = 2 - 1;
									end
									if (v4602 == (1638 - (486 + 1150))) then
										v83 = v71[v75];
										v81[v83[2]] = v83[819 - (356 + 460)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4602 = 3;
									end
									if (v4602 == (9 - 2)) then
										v81[v83[3 - 1]] = {};
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[2 + 1];
										v4602 = 8;
									end
									if (8 == v4602) then
										v75 = v75 + (1454 - (1281 + 172));
										v83 = v71[v75];
										v81[v83[2]] = v83[588 - (158 + 427)];
										break;
									end
									if ((4 + 1) == v4602) then
										v4603 = v81[v83[11 - 8]];
										v81[v4604 + 1 + 0] = v4603;
										v81[v4604] = v4603[v83[880 - (103 + 773)]];
										v75 = v75 + 1 + 0;
										v4602 = 1500 - (739 + 755);
									end
									if (v4602 == 6) then
										v83 = v71[v75];
										v81[v83[345 - (39 + 304)]] = v83[508 - (129 + 376)];
										v75 = v75 + (1541 - (282 + 1258));
										v83 = v71[v75];
										v4602 = 1294 - (204 + 1083);
									end
								end
							end
						elseif ((v84 > (1035 - (471 + 235))) or (3304 <= 1475)) then
							local v4605;
							local v4606;
							local v4607;
							v4607 = v83[5 - 3];
							v4606 = v81[v83[1090 - (38 + 1049)]];
							v81[v4607 + (1626 - (1437 + 188))] = v4606;
							v81[v4607] = v4606[v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[3 + 0];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[46 - (11 + 32)];
							v75 = v75 + (256 - (81 + 174));
							v83 = v71[v75];
							v81[v83[5 - 3]] = v62[v83[13 - 10]];
							v75 = v75 + (765 - (513 + 251));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[3]][v83[1 + 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1127 - (1075 + 49)]][v83[770 - (373 + 393)]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]][v81[v83[892 - (875 + 13)]]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[12 - 9];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v4606 = v83[1 + 2];
							v4605 = v81[v4606];
							for v6169 = v4606 + (3 - 2), v83[4] do
								v4605 = v4605 .. v81[v6169];
							end
							v81[v83[2 + 0]] = v4605;
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v81[v83[335 - (273 + 60)]] = v83[11 - 8];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v4607 = v83[2];
							v81[v4607](v13(v81, v4607 + (3 - 2), v83[3]));
						else
							for v6170 = v83[2 - 0], v83[558 - (361 + 194)] do
								v81[v6170] = nil;
							end
						end
					elseif (v84 <= 343) then
						if ((v84 <= (289 + 47)) or (3550 <= 3099)) then
							if (v84 <= (1355 - 1022)) then
								if ((4798 == 4798) and (v84 <= (195 + 136))) then
									local v1268 = 0 - 0;
									local v1269;
									local v1270;
									while true do
										if (v1268 == (4 + 6)) then
											v81[v83[7 - 5]] = v81[v83[3]];
											v75 = v75 + (848 - (257 + 590));
											v83 = v71[v75];
											v1270 = v83[2];
											v1268 = 11;
										end
										if ((37 < 2345) and (v1268 == (7 - 5))) then
											v81[v83[1957 - (856 + 1099)]] = v83[1929 - (1556 + 370)];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v1270 = v83[3 - 1];
											v1268 = 175 - (24 + 148);
										end
										if ((1 == v1268) or (4758 <= 1015)) then
											v81[v1270 + 1 + 0] = v1269;
											v81[v1270] = v1269[v83[4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v1268 = 2 + 0;
										end
										if (v1268 == (6 - 2)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[7 - 4]][v83[12 - 8]];
											v75 = v75 + (1 - 0);
											v1268 = 16 - 11;
										end
										if (v1268 == 9) then
											v1270 = v83[5 - 3];
											v81[v1270] = v81[v1270](v13(v81, v1270 + 1 + 0, v83[3]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1268 = 4 + 6;
										end
										if (v1268 == (31 - 24)) then
											v1269 = v81[v83[1 + 2]];
											v81[v1270 + 1 + 0] = v1269;
											v81[v1270] = v1269[v83[9 - 5]];
											v75 = v75 + (2 - 1);
											v1268 = 1 + 7;
										end
										if (v1268 == (41 - 30)) then
											v1269 = v81[v83[7 - 4]];
											v81[v1270 + (1 - 0)] = v1269;
											v81[v1270] = v1269[v83[4]];
											v75 = v75 + 1;
											v1268 = 10 + 2;
										end
										if (v1268 == (0 - 0)) then
											v1269 = nil;
											v1270 = nil;
											v1270 = v83[2];
											v1269 = v81[v83[1 + 2]];
											v1268 = 1;
										end
										if ((v1268 == (23 - 10)) or (4388 == 1613)) then
											v83 = v71[v75];
											v75 = v83[2 + 1];
											break;
										end
										if (v1268 == (7 + 5)) then
											v83 = v71[v75];
											v1270 = v83[1721 - (976 + 743)];
											v81[v1270](v81[v1270 + (1 - 0)]);
											v75 = v75 + (1515 - (1273 + 241));
											v1268 = 31 - 18;
										end
										if (v1268 == (17 - 11)) then
											v81[v83[267 - (135 + 130)]] = v81[v83[4 - 1]][v83[4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1270 = v83[2 + 0];
											v1268 = 7;
										end
										if (v1268 == 3) then
											v81[v1270] = v81[v1270](v13(v81, v1270 + (2 - 1), v83[10 - 7]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1743 - (1289 + 452)]] = v81[v83[1 + 2]][v83[4]];
											v1268 = 333 - (90 + 239);
										end
										if ((342 < 4590) and (v1268 == (937 - (117 + 812)))) then
											v83 = v71[v75];
											v81[v83[1001 - (146 + 853)]] = v83[1968 - (986 + 979)];
											v75 = v75 + (659 - (555 + 103));
											v83 = v71[v75];
											v1268 = 13 - 4;
										end
										if ((v1268 == 5) or (472 > 1573)) then
											v83 = v71[v75];
											v81[v83[739 - (329 + 408)]] = v81[v83[1 + 2]][v83[1714 - (838 + 872)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v1268 = 529 - (400 + 123);
										end
									end
								elseif (v84 > 332) then
									local v4632 = v83[1 + 1];
									local v4633 = v81[v83[1959 - (547 + 1409)]];
									v81[v4632 + (81 - (73 + 7))] = v4633;
									v81[v4632] = v4633[v83[1 + 3]];
								else
									local v4637;
									local v4638;
									v4638 = v83[2];
									v4637 = v81[v83[3 + 0]];
									v81[v4638 + 1] = v4637;
									v81[v4638] = v4637[v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[3 + 1]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[1991 - (98 + 1891)]] = v81[v83[42 - (16 + 23)]][v83[1736 - (1184 + 548)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1532 - (270 + 1260)]] = v83[2 + 1] ~= (735 - (60 + 675));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v4638 = v83[1204 - (984 + 218)];
									v81[v4638](v13(v81, v4638 + (383 - (45 + 337)), v83[331 - (74 + 254)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1352 - (1190 + 159)];
								end
							elseif (v84 <= (251 + 83)) then
								local v1271;
								local v1272;
								v1272 = v83[1 + 1];
								v1271 = v81[v83[3]];
								v81[v1272 + 1 + 0] = v1271;
								v81[v1272] = v1271[v83[9 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1420 - (192 + 1226)]] = v83[739 - (511 + 225)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1272 = v83[1397 - (1200 + 195)];
								v81[v1272] = v81[v1272](v13(v81, v1272 + (1579 - (329 + 1249)), v83[780 - (631 + 146)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v81[v83[1 + 2]][v83[1037 - (510 + 523)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1272 = v83[9 - 7];
								v1271 = v81[v83[2 + 1]];
								v81[v1272 + (2 - 1)] = v1271;
								v81[v1272] = v1271[v83[4]];
								v75 = v75 + (1472 - (996 + 475));
								v83 = v71[v75];
								v1272 = v83[1 + 1];
								v81[v1272](v81[v1272 + (1 - 0)]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3 + 0] ~= (0 + 0);
								v75 = v75 + (1943 - (1132 + 810));
								v83 = v71[v75];
								v62[v83[4 - 1]] = v81[v83[7 - 5]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3];
							elseif ((v84 == (215 + 120)) or (4387 <= 266)) then
								local v4654 = 1961 - (941 + 1020);
								local v4655;
								while true do
									if (v4654 == 1) then
										v81[v83[529 - (313 + 214)]] = v83[547 - (363 + 181)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[1 + 2]];
										v4654 = 1451 - (91 + 1358);
									end
									if ((1 + 5) == v4654) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v75 = v83[5 - 2];
										break;
									end
									if (v4654 == (3 + 1)) then
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[5 - 2]] + v81[v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4654 = 14 - 9;
									end
									if (v4654 == 5) then
										v81[v83[1 + 1]][v83[2 + 1]] = v81[v83[3 + 1]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[9 - 6]] * v83[872 - (311 + 557)];
										v4654 = 169 - (117 + 46);
									end
									if (v4654 == (2 + 1)) then
										v83 = v71[v75];
										v4655 = v83[506 - (268 + 236)];
										v81[v4655] = v81[v4655](v13(v81, v4655 + 1 + 0, v83[3]));
										v75 = v75 + (181 - (92 + 88));
										v4654 = 5 - 1;
									end
									if ((v4654 == (1086 - (745 + 339))) or (349 > 2841)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + 1 + 0;
										v4654 = 3 + 0;
									end
									if (v4654 == 0) then
										v4655 = nil;
										v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4654 = 739 - (582 + 156);
									end
								end
							else
								local v4656;
								local v4657, v4658;
								local v4659;
								local v4660;
								v81[v83[1772 - (268 + 1502)]] = v62[v83[1449 - (219 + 1227)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v62[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v4660 = v83[6 - 4];
								v4659 = v81[v83[5 - 2]];
								v81[v4660 + (1977 - (1855 + 121))] = v4659;
								v81[v4660] = v4659[v83[19 - 15]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[788 - (452 + 334)]] = v83[3 - 0];
								v75 = v75 + (1394 - (698 + 695));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[9 - 6] ~= (0 - 0);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v4660 = v83[2 - 0];
								v4657, v4658 = v74(v81[v4660](v13(v81, v4660 + (3 - 2), v83[3 + 0])));
								v76 = (v4658 + v4660) - (1730 - (529 + 1200));
								v4656 = 0;
								for v6218 = v4660, v76 do
									v4656 = v4656 + 1 + 0;
									v81[v6218] = v4657[v4656];
								end
								v75 = v75 + (279 - (199 + 79));
								v83 = v71[v75];
								v4660 = v83[2];
								v81[v4660] = v81[v4660](v13(v81, v4660 + 1 + 0, v76));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[3]];
								v75 = v75 + (585 - (120 + 464));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4660 = v83[756 - (33 + 721)];
								v81[v4660](v81[v4660 + (1364 - (1061 + 302))]);
								v75 = v75 + 1;
								v83 = v71[v75];
								do
									return;
								end
							end
						elseif (v84 <= (2068 - (719 + 1010))) then
							if (v84 <= 337) then
								local v1291;
								local v1292;
								v81[v83[2]] = v81[v83[11 - 8]][v83[943 - (446 + 493)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[1147 - (602 + 542)]][v83[3 + 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v1292 = v83[363 - (276 + 85)];
								v1291 = v81[v83[1383 - (816 + 564)]];
								v81[v1292 + (2 - 1)] = v1291;
								v81[v1292] = v1291[v83[918 - (854 + 60)]];
								v75 = v75 + (696 - (227 + 468));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[532 - (54 + 475)];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v1292 = v83[34 - (21 + 11)];
								v81[v1292] = v81[v1292](v13(v81, v1292 + 1 + 0, v83[1598 - (1351 + 244)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[7 - 5]] = v81[v83[3]];
								v75 = v75 + (425 - (407 + 17));
								v83 = v71[v75];
								v81[v83[2]] = v83[1 + 2];
							elseif ((2536 >= 598) and (v84 > (181 + 157))) then
								v81[v83[951 - (174 + 775)]][v83[1763 - (601 + 1159)]] = v81[v83[1152 - (388 + 760)]];
							else
								local v4682;
								local v4683;
								v81[v83[1 + 1]] = v62[v83[1953 - (900 + 1050)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4683 = v83[1 + 1];
								v4682 = v81[v83[3 + 0]];
								v81[v4683 + 1 + 0] = v4682;
								v81[v4683] = v4682[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[3 + 0];
								v75 = v75 + (283 - (80 + 202));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3 - 0]][v83[15 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[666 - (308 + 356)]] = v83[3 + 0];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v4683 = v83[2 + 0];
								v81[v4683](v13(v81, v4683 + (1 - 0), v83[1057 - (1021 + 33)]));
								v75 = v75 + (1052 - (46 + 1005));
								v83 = v71[v75];
								do
									return;
								end
							end
						elseif (v84 <= (280 + 61)) then
							if (v84 == (769 - 429)) then
								local v4699 = 0 + 0;
								local v4700;
								local v4701;
								local v4702;
								local v4703;
								while true do
									if (v4699 == 6) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v75 = v83[1 + 2];
										break;
									end
									if (v4699 == 4) then
										v4701 = 0 - 0;
										for v9694 = v4703, v76 do
											local v9695 = 0 - 0;
											while true do
												if (v9695 == 0) then
													v4701 = v4701 + (1 - 0);
													v81[v9694] = v4700[v4701];
													break;
												end
											end
										end
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4699 = 3 + 2;
									end
									if (v4699 == (0 - 0)) then
										v4700 = nil;
										v4701 = nil;
										v4700, v4702 = nil;
										v4703 = nil;
										v4699 = 1;
									end
									if (v4699 == (1 + 2)) then
										v83 = v71[v75];
										v4703 = v83[2];
										v4700, v4702 = v74(v81[v4703](v81[v4703 + (1057 - (131 + 925))]));
										v76 = (v4702 + v4703) - (1289 - (347 + 941));
										v4699 = 1625 - (893 + 728);
									end
									if (v4699 == (2 + 0)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[3 - 0]];
										v75 = v75 + (1 - 0);
										v4699 = 2 + 1;
									end
									if (v4699 == (19 - 14)) then
										v4703 = v83[2 + 0];
										v4700 = {v81[v4703](v13(v81, v4703 + (1913 - (1598 + 314)), v76))};
										v4701 = 0 + 0;
										for v9696 = v4703, v83[11 - 7] do
											local v9697 = 0;
											while true do
												if (v9697 == (1614 - (274 + 1340))) then
													v4701 = v4701 + 1 + 0;
													v81[v9696] = v4700[v4701];
													break;
												end
											end
										end
										v4699 = 2 + 4;
									end
									if (v4699 == (1415 - (557 + 857))) then
										v81[v83[5 - 3]] = v62[v83[9 - 6]];
										v75 = v75 + (1113 - (581 + 531));
										v83 = v71[v75];
										v81[v83[6 - 4]] = v61[v83[1338 - (1314 + 21)]];
										v4699 = 2;
									end
								end
							else
								v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (1190 - (487 + 702));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[4 - 1]][v81[v83[11 - 7]]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[3]];
								v75 = v75 + (539 - (86 + 452));
								v83 = v71[v75];
								if v81[v83[2 + 0]] then
									v75 = v75 + 1 + 0;
								else
									v75 = v83[7 - 4];
								end
							end
						elseif (v84 > (1414 - (123 + 949))) then
							local v4712 = 0;
							local v4713;
							local v4714;
							while true do
								if (v4712 == (914 - (836 + 77))) then
									v83 = v71[v75];
									v81[v83[652 - (354 + 296)]] = v62[v83[3]];
									v75 = v75 + (93 - (5 + 87));
									v83 = v71[v75];
									v4714 = v83[2 + 0];
									v4712 = 2;
								end
								if (v4712 == (3 + 3)) then
									v83 = v71[v75];
									v81[v83[2]] = v83[3 + 0];
									break;
								end
								if (v4712 == (10 - 5)) then
									v4714 = v83[2 + 0];
									v4713 = v81[v83[685 - (267 + 415)]];
									v81[v4714 + (2 - 1)] = v4713;
									v81[v4714] = v4713[v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v4712 = 12 - 6;
								end
								if ((411 <= 3402) and (v4712 == (2 + 0))) then
									v4713 = v81[v83[3]];
									v81[v4714 + 1] = v4713;
									v81[v4714] = v4713[v83[1 + 3]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v4712 = 1895 - (1799 + 93);
								end
								if ((2 + 2) == v4712) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[22 - (6 + 13)]];
									v75 = v75 + (1060 - (383 + 676));
									v83 = v71[v75];
									v4712 = 345 - (119 + 221);
								end
								if (v4712 == 3) then
									v81[v83[1 + 1]] = v83[484 - (345 + 136)];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v4714 = v83[5 - 3];
									v81[v4714](v13(v81, v4714 + (1 - 0), v83[8 - 5]));
									v4712 = 4;
								end
								if (v4712 == (476 - (345 + 131))) then
									v4713 = nil;
									v4714 = nil;
									v4714 = v83[2];
									v81[v4714] = v81[v4714](v13(v81, v4714 + (1302 - (916 + 385)), v83[295 - (6 + 286)]));
									v75 = v75 + (2 - 1);
									v4712 = 1;
								end
							end
						else
							local v4715 = 0 + 0;
							local v4716;
							local v4717;
							while true do
								if (v4715 == (1 + 0)) then
									v75 = v75 + (292 - (151 + 140));
									v83 = v71[v75];
									v4717 = v83[2 - 0];
									v4715 = 956 - (32 + 922);
								end
								if (((850 - (322 + 520)) == v4715) or (4218 < 769)) then
									v81[v4717](v13(v81, v4717 + 1 + 0, v83[2 + 1]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v4715 = 9 + 0;
								end
								if (v4715 == (224 - (187 + 34))) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[2 + 1];
									v4715 = 300 - (194 + 102);
								end
								if (v4715 == (557 - (49 + 503))) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1351 - (12 + 1337)]] = v81[v83[6 - 3]][v83[4]];
									v4715 = 6 + 0;
								end
								if (v4715 == (1069 - (38 + 1027))) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[124 - (11 + 110)]];
									v4715 = 820 - (199 + 616);
								end
								if ((3 + 3) == v4715) then
									v75 = v75 + (480 - (396 + 83));
									v83 = v71[v75];
									v81[v83[2]] = v83[6 - 3];
									v4715 = 7;
								end
								if ((2399 > 352) and (v4715 == (1 + 1))) then
									v4716 = v81[v83[1788 - (774 + 1011)]];
									v81[v4717 + 1] = v4716;
									v81[v4717] = v4716[v83[11 - 7]];
									v4715 = 3;
								end
								if (v4715 == (13 - 6)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v4717 = v83[391 - (94 + 295)];
									v4715 = 1 + 7;
								end
								if (v4715 == 0) then
									v4716 = nil;
									v4717 = nil;
									v81[v83[1 + 1]] = v62[v83[5 - 2]];
									v4715 = 2 - 1;
								end
								if ((v4715 == (4 + 5)) or (4739 <= 1572)) then
									do
										return;
									end
									break;
								end
							end
						end
					elseif ((v84 <= (264 + 85)) or (823 >= 3261)) then
						if (v84 <= (560 - 214)) then
							if (v84 <= (934 - 590)) then
								local v1308 = 0 + 0;
								local v1309;
								local v1310;
								local v1311;
								local v1312;
								local v1313;
								while true do
									if ((v1308 == (0 + 0)) or (1529 > 2517)) then
										v1309 = nil;
										v1310 = nil;
										v1309, v1311 = nil;
										v1312 = nil;
										v1313 = nil;
										v81[v83[3 - 1]] = v62[v83[13 - (6 + 4)]];
										v1308 = 1;
									end
									if (v1308 == (14 - 9)) then
										v75 = v83[856 - (629 + 224)];
										break;
									end
									if (v1308 == 2) then
										v1312 = v81[v83[3]];
										v81[v1313 + (2 - 1)] = v1312;
										v81[v1313] = v1312[v83[1526 - (466 + 1056)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1313 = v83[767 - (485 + 280)];
										v1308 = 94 - (51 + 40);
									end
									if (v1308 == (794 - (610 + 183))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[1 + 3]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1313 = v83[774 - (572 + 200)];
										v1308 = 2;
									end
									if ((3336 == 3336) and (v1308 == (1978 - (1598 + 377)))) then
										v1309, v1311 = v74(v81[v1313](v81[v1313 + 1]));
										v76 = (v1311 + v1313) - 1;
										v1310 = 0;
										for v6614 = v1313, v76 do
											local v6615 = 0 - 0;
											while true do
												if (v6615 == (0 + 0)) then
													v1310 = v1310 + 1;
													v81[v6614] = v1309[v1310];
													break;
												end
											end
										end
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1308 = 1282 - (881 + 397);
									end
									if (v1308 == (10 - 6)) then
										v1313 = v83[1215 - (892 + 321)];
										v1309 = {v81[v1313](v13(v81, v1313 + 1 + 0, v76))};
										v1310 = 0;
										for v6616 = v1313, v83[1425 - (606 + 815)] do
											local v6617 = 0;
											while true do
												if (v6617 == (0 - 0)) then
													v1310 = v1310 + 1;
													v81[v6616] = v1309[v1310];
													break;
												end
											end
										end
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1308 = 4 + 1;
									end
								end
							elseif (v84 == (1517 - (1055 + 117))) then
								local v4718;
								local v4719;
								v81[v83[690 - (266 + 422)]] = v81[v83[11 - 8]][v83[1895 - (1098 + 793)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1561 - (12 + 1547)]] = v81[v83[3]][v83[1362 - (149 + 1209)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4719 = v83[1016 - (6 + 1008)];
								v4718 = v81[v83[1349 - (603 + 743)]];
								v81[v4719 + (241 - (152 + 88))] = v4718;
								v81[v4719] = v4718[v83[321 - (207 + 110)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[7 - 4]];
								v75 = v75 + (1834 - (1401 + 432));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v81[v83[1040 - (838 + 199)]][v83[4]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[434 - (320 + 110)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[3] ~= (0 - 0);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4719 = v83[2];
								v81[v4719](v13(v81, v4719 + (138 - (123 + 14)), v83[3 + 0]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[104 - (62 + 40)]] = v62[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[1100 - (823 + 274)]][v83[4]];
								v75 = v75 + (965 - (134 + 830));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[7 - 4]][v83[13 - 9]];
								v75 = v75 + (1582 - (1430 + 151));
								v83 = v71[v75];
								v4719 = v83[2];
								v4718 = v81[v83[1361 - (104 + 1254)]];
								v81[v4719 + (425 - (161 + 263))] = v4718;
								v81[v4719] = v4718[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v62[v83[1399 - (317 + 1079)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[3]][v83[319 - (76 + 239)]];
								v75 = v75 + (374 - (349 + 24));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v81[v83[6 - 3]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3] ~= (1634 - (1428 + 206));
								v75 = v75 + 1;
								v83 = v71[v75];
								v4719 = v83[1507 - (1207 + 298)];
								v81[v4719](v13(v81, v4719 + (349 - (224 + 124)), v83[35 - (7 + 25)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1055 - (886 + 166)]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[322 - (142 + 176)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4719 = v83[940 - (584 + 354)];
								v4718 = v81[v83[491 - (384 + 104)]];
								v81[v4719 + 1] = v4718;
								v81[v4719] = v4718[v83[11 - 7]];
								v75 = v75 + (36 - (13 + 22));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v62[v83[2 + 1]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[3]][v83[10 - 6]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[2 + 1]][v83[1 + 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[255 - (106 + 146)] ~= (0 - 0);
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v4719 = v83[2 + 0];
								v81[v4719](v13(v81, v4719 + (3 - 2), v83[1021 - (75 + 943)]));
								v75 = v75 + (1064 - (972 + 91));
								v83 = v71[v75];
								v81[v83[6 - 4]] = v62[v83[7 - 4]];
								v75 = v75 + (1347 - (918 + 428));
								v83 = v71[v75];
								v81[v83[1599 - (1099 + 498)]] = v81[v83[1688 - (997 + 688)]][v83[1426 - (1406 + 16)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[921 - (715 + 204)]] = v81[v83[3 + 0]][v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v4719 = v83[665 - (275 + 388)];
								v4718 = v81[v83[3 - 0]];
								v81[v4719 + 1 + 0] = v4718;
								v81[v4719] = v4718[v83[2 + 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[9 - 6]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[2 + 1]][v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[568 - (5 + 560)]][v83[4]];
								v75 = v75 + (407 - (77 + 329));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3] ~= 0;
								v75 = v75 + 1;
								v83 = v71[v75];
								v4719 = v83[1 + 1];
								v81[v4719](v13(v81, v4719 + 1, v83[1954 - (397 + 1554)]));
								v75 = v75 + (1258 - (219 + 1038));
								v83 = v71[v75];
								v81[v83[2]] = v83[3 + 0];
							else
								local v4776 = 0;
								while true do
									if (v4776 == 0) then
										v62[v83[2 + 1]] = v81[v83[3 - 1]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4776 = 1;
									end
									if ((2728 > 1077) and (v4776 == (3 - 1))) then
										v81[v83[1 + 1]] = v81[v83[755 - (404 + 348)]][v83[152 - (99 + 49)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4776 = 1972 - (1223 + 746);
									end
									if ((v4776 == (7 - 2)) or (2376 > 3268)) then
										v75 = v83[3 + 0];
										break;
									end
									if ((4214 <= 4587) and (v4776 == (1365 - (1247 + 114)))) then
										v81[v83[6 - 4]] = v83[3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4776 = 12 - 7;
									end
									if ((3199 <= 4777) and (v4776 == (8 - 5))) then
										v81[v83[2]] = v81[v83[3 - 0]][v83[1943 - (291 + 1648)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4776 = 10 - 6;
									end
									if (v4776 == (1 + 0)) then
										v81[v83[6 - 4]] = v62[v83[3 + 0]];
										v75 = v75 + (1699 - (1584 + 114));
										v83 = v71[v75];
										v4776 = 6 - 4;
									end
								end
							end
						elseif (v84 <= 347) then
							local v1314 = 1765 - (957 + 808);
							local v1315;
							local v1316;
							while true do
								if (v1314 == (3 - 2)) then
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[1073 - (435 + 636)]] = v81[v83[2 + 1]][v83[789 - (342 + 443)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[4 + 0]];
									v1314 = 2 + 0;
								end
								if (v1314 == 6) then
									v81[v83[534 - (321 + 211)]] = v81[v83[11 - 8]][v83[4 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 - 0]] = v83[9 - 6];
									break;
								end
								if (v1314 == (1244 - (506 + 736))) then
									v75 = v75 + (1342 - (428 + 913));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1854 - (834 + 1017)]][v83[4]];
									v75 = v75 + (1572 - (1493 + 78));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v61[v83[3]];
									v1314 = 3;
								end
								if ((v1314 == 3) or (879 > 1699)) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[5 - 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1316 = v83[188 - (177 + 9)];
									v1314 = 1257 - (236 + 1017);
								end
								if ((4882 >= 2889) and (v1314 == (0 + 0))) then
									v1315 = nil;
									v1316 = nil;
									v81[v83[1981 - (1237 + 742)]] = v81[v83[4 - 1]][v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[3 + 1]];
									v1314 = 2 - 1;
								end
								if ((v1314 == (10 - 6)) or (4433 <= 1891)) then
									v1315 = v81[v83[1567 - (566 + 998)]];
									v81[v1316 + 1 + 0] = v1315;
									v81[v1316] = v1315[v83[1632 - (11 + 1617)]];
									v75 = v75 + (1866 - (1156 + 709));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[9 - 6];
									v1314 = 10 - 5;
								end
								if (((3 + 2) == v1314) or (4216 == 1431)) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v1316 = v83[2 - 0];
									v81[v1316] = v81[v1316](v13(v81, v1316 + (690 - (131 + 558)), v83[3 - 0]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1314 = 6;
								end
							end
						elseif ((3260 < 3430) and (v84 > 348)) then
							local v4777 = v83[2];
							local v4778, v4779 = v74(v81[v4777](v13(v81, v4777 + (3 - 2), v83[4 - 1])));
							v76 = (v4779 + v4777) - (1 + 0);
							local v4780 = 0 + 0;
							for v6271 = v4777, v76 do
								local v6272 = 0 + 0;
								while true do
									if ((v6272 == (1645 - (1417 + 228))) or (4233 < 304)) then
										v4780 = v4780 + (3 - 2);
										v81[v6271] = v4778[v4780];
										break;
									end
								end
							end
						else
							local v4781;
							local v4782;
							local v4783;
							v81[v83[2]] = v81[v83[3]] + v83[4];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[3]] - v83[398 - (134 + 260)];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v4783 = v83[2];
							v81[v4783] = v81[v4783](v81[v4783 + 1 + 0]);
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[3];
							v75 = v75 + (135 - (49 + 85));
							v83 = v71[v75];
							v4782 = v83[2 + 1];
							v4781 = v81[v4782];
							for v6273 = v4782 + 1 + 0, v83[9 - 5] do
								v4781 = v4781 .. v81[v6273];
							end
							v81[v83[2]] = v4781;
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[1380 - (922 + 455)];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v4783 = v83[1 + 1];
							v81[v4783](v13(v81, v4783 + 1, v83[64 - (31 + 30)]));
							v75 = v75 + 1;
							v83 = v71[v75];
							do
								return;
							end
						end
					elseif (v84 <= (277 + 75)) then
						if (v84 <= (830 - 480)) then
							local v1317;
							v81[v83[2 + 0]] = v81[v83[2 + 1]][v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[4 - 1]];
							v75 = v75 + (23 - (5 + 17));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]][v83[8 - 4]];
							v75 = v75 + (71 - (65 + 5));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[6 - 3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[3];
							v75 = v75 + (842 - (685 + 156));
							v83 = v71[v75];
							v81[v83[2]] = v83[9 - 6];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1317 = v83[6 - 4];
							v81[v1317] = v81[v1317](v13(v81, v1317 + 1, v83[735 - (620 + 112)]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[7 - 5]] = v81[v83[252 - (89 + 160)]] * v81[v83[9 - 5]];
							v75 = v75 + (1608 - (975 + 632));
							v83 = v71[v75];
							v81[v83[3 - 1]][v83[3 + 0]] = v81[v83[6 - 2]];
							v75 = v75 + (511 - (358 + 152));
							v83 = v71[v75];
							v75 = v83[3];
						elseif (v84 == (727 - 376)) then
							local v4796 = 1111 - (727 + 384);
							while true do
								if (v4796 == (11 - 8)) then
									v81[v83[5 - 3]] = v81[v83[3]][v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v4796 = 4 + 0;
								end
								if ((1734 < 2777) and (v4796 == (1226 - (804 + 421)))) then
									v81[v83[9 - 7]] = v81[v83[9 - 6]][v83[13 - 9]];
									v75 = v75 + (1074 - (1029 + 44));
									v83 = v71[v75];
									v4796 = 2 + 0;
								end
								if (v4796 == (0 + 0)) then
									v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
									v75 = v75 + (518 - (139 + 378));
									v83 = v71[v75];
									v4796 = 1;
								end
								if ((254 - (181 + 71)) == v4796) then
									v81[v83[2 + 0]] = v81[v83[10 - 7]][v81[v83[7 - 3]]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v4796 = 3;
								end
								if (v4796 == (303 - (243 + 56))) then
									v81[v83[145 - (56 + 87)]] = v83[6 - 3];
									break;
								end
							end
						else
							local v4797;
							v81[v83[2]] = v81[v83[1 + 2]][v83[851 - (523 + 324)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[9 - 6]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[6 - 3]][v83[4 + 0]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + (891 - (9 + 881));
							v83 = v71[v75];
							v81[v83[2]] = v83[1488 - (1429 + 56)];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[337 - (295 + 39)];
							v75 = v75 + (359 - (223 + 135));
							v83 = v71[v75];
							v4797 = v83[3 - 1];
							v81[v4797] = v81[v4797](v13(v81, v4797 + 1, v83[5 - 2]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1941 - (1472 + 467)]] = v81[v83[1 + 2]] * v81[v83[2 + 2]];
							v75 = v75 + (123 - (103 + 19));
							v83 = v71[v75];
							v81[v83[1835 - (1172 + 661)]][v83[1 + 2]] = v81[v83[1 + 3]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v75 = v83[1075 - (373 + 699)];
						end
					elseif ((3817 > 529) and (v84 <= (1903 - (331 + 1218)))) then
						if ((1840 > 380) and (v84 == (589 - 236))) then
							local v4814 = v83[2 - 0];
							local v4815 = v81[v4814];
							local v4816 = v83[2 + 1];
							for v6274 = 1, v4816 do
								v4815[v6274] = v81[v4814 + v6274];
							end
						else
							local v4817;
							local v4818;
							v4818 = v83[1 + 1];
							v81[v4818](v13(v81, v4818 + 1, v83[927 - (169 + 755)]));
							v75 = v75 + (98 - (23 + 74));
							v83 = v71[v75];
							v81[v83[1964 - (935 + 1027)]][v83[1 + 2]] = v83[4 + 0];
							v75 = v75 + (1870 - (287 + 1582));
							v83 = v71[v75];
							v81[v83[5 - 3]][v83[6 - 3]] = v81[v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v62[v83[546 - (198 + 345)]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[988 - (135 + 850)]][v83[4]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[861 - (150 + 708)];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[6 - 4]] = v83[1 + 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + (35 - (28 + 6));
							v83 = v71[v75];
							v4818 = v83[529 - (380 + 147)];
							v81[v4818] = v81[v4818](v13(v81, v4818 + 1 + 0, v83[11 - 8]));
							v75 = v75 + (908 - (875 + 32));
							v83 = v71[v75];
							v81[v83[9 - 7]][v83[2 + 1]] = v81[v83[883 - (611 + 268)]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v62[v83[3]];
							v75 = v75 + (575 - (196 + 378));
							v83 = v71[v75];
							v81[v83[7 - 5]] = v81[v83[11 - 8]][v83[565 - (549 + 12)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[3];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[3];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3 + 0];
							v75 = v75 + (1860 - (1370 + 489));
							v83 = v71[v75];
							v4818 = v83[1 + 1];
							v81[v4818] = v81[v4818](v13(v81, v4818 + (3 - 2), v83[3 + 0]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[3]] = v81[v83[1 + 3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1268 - (1059 + 207)]] = v62[v83[2 + 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[1486 - (392 + 1091)]][v83[2 + 2]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[6 - 4]] = v83[2 + 1];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[10 - 7];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1416 - (791 + 623)]] = v83[8 - 5];
							v75 = v75 + (1891 - (1704 + 186));
							v83 = v71[v75];
							v4818 = v83[2 + 0];
							v81[v4818] = v81[v4818](v13(v81, v4818 + 1, v83[629 - (406 + 220)]));
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[1797 - (779 + 1016)]][v83[2 + 1]] = v81[v83[3 + 1]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v62[v83[8 - 5]];
							v75 = v75 + (391 - (79 + 311));
							v83 = v71[v75];
							v81[v83[116 - (90 + 24)]] = v81[v83[3]][v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[1187 - (298 + 886)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[1 + 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[5 - 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v4818 = v83[2 - 0];
							v81[v4818] = v81[v4818](v13(v81, v4818 + 1 + 0, v83[3]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1479 - (956 + 521)]][v83[5 - 2]] = v81[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 - 0]] = v62[v83[6 - 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[4 - 1]][v83[9 - 5]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[1 + 2]][v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]][v83[2 + 1]] = v81[v83[10 - 6]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[1 + 2]] = v83[1330 - (1010 + 316)];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v62[v83[3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[2 + 2]];
							v75 = v75 + (1220 - (1130 + 89));
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1763 - (1437 + 324)]] = v83[3 + 0];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + 1;
							v83 = v71[v75];
							v4818 = v83[940 - (87 + 851)];
							v81[v4818] = v81[v4818](v13(v81, v4818 + 1 + 0, v83[9 - 6]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[5 - 3]][v83[965 - (105 + 857)]] = v81[v83[929 - (859 + 66)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[5 - 3]][v83[4 - 1]] = v83[1 + 3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[2 + 1]] = v83[11 - 7];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[11 - 8] ~= (0 - 0);
							v75 = v75 + 1;
							v83 = v71[v75];
							v62[v83[6 - 3]] = v81[v83[1 + 1]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[669 - (203 + 462)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v4818 = v83[269 - (250 + 17)];
							v4817 = v81[v83[13 - 10]];
							v81[v4818 + (1 - 0)] = v4817;
							v81[v4818] = v4817[v83[4 + 0]];
						end
					elseif (v84 == 355) then
						local v4886 = 0 - 0;
						local v4887;
						local v4888;
						while true do
							if (v4886 == (1 + 1)) then
								v4888 = v83[2];
								v81[v4888] = v81[v4888](v81[v4888 + (1271 - (506 + 764))]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4886 = 3 + 0;
							end
							if (v4886 == (0 + 0)) then
								v4887 = nil;
								v4888 = nil;
								v4888 = v83[1 + 1];
								v4887 = v81[v83[8 - 5]];
								v4886 = 258 - (144 + 113);
							end
							if (v4886 == (262 - (159 + 99))) then
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[697 - (601 + 94)]] = v81[v83[3]];
								v75 = v75 + (1 - 0);
								v4886 = 5;
							end
							if ((v4886 == (1 - 0)) or (4780 <= 351)) then
								v81[v4888 + 1] = v4887;
								v81[v4888] = v4887[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4886 = 4 - 2;
							end
							if ((3007 < 3269) and (v4886 == (2 + 1))) then
								v4888 = v83[597 - (110 + 485)];
								v4887 = v81[v83[1142 - (316 + 823)]];
								v81[v4888 + 1 + 0] = v4887;
								v81[v4888] = v4887[v83[1584 - (122 + 1458)]];
								v4886 = 4;
							end
							if (v4886 == 6) then
								v83 = v71[v75];
								if ((2969 > 1057) and v81[v83[2 + 0]]) then
									v75 = v75 + 1;
								else
									v75 = v83[3];
								end
								break;
							end
							if (v4886 == (7 - 2)) then
								v83 = v71[v75];
								v4888 = v83[818 - (666 + 150)];
								v81[v4888] = v81[v4888](v13(v81, v4888 + 1, v83[3]));
								v75 = v75 + 1;
								v4886 = 2 + 4;
							end
						end
					else
						local v4889 = 0;
						local v4890;
						local v4891;
						while true do
							if (v4889 == 0) then
								v4890 = nil;
								v4891 = nil;
								v4891 = v83[1 + 1];
								v81[v4891] = v81[v4891](v13(v81, v4891 + 1 + 0, v83[6 - 3]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v4889 = 1 + 0;
							end
							if ((v4889 == (2 + 0)) or (1155 == 4940)) then
								v4891 = v83[454 - (424 + 28)];
								v4890 = v81[v83[605 - (407 + 195)]];
								v81[v4891 + 1] = v4890;
								v81[v4891] = v4890[v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v4889 = 3;
							end
							if (v4889 == (9 - 6)) then
								v81[v83[2]] = v83[2 + 1];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4891 = v83[4 - 2];
								v81[v4891] = v81[v4891](v13(v81, v4891 + (1 - 0), v83[3 + 0]));
								v75 = v75 + (1 - 0);
								v4889 = 11 - 7;
							end
							if (v4889 == (5 + 0)) then
								v81[v4891 + (3 - 2)] = v4890;
								v81[v4891] = v4890[v83[9 - 5]];
								break;
							end
							if (v4889 == (3 + 1)) then
								v83 = v71[v75];
								v81[v83[6 - 4]] = v81[v83[11 - 8]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4891 = v83[2 + 0];
								v4890 = v81[v83[1195 - (274 + 918)]];
								v4889 = 1 + 4;
							end
							if (v4889 == 1) then
								v62[v83[14 - 11]] = v81[v83[2 + 0]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[3 + 0]];
								v75 = v75 + (1814 - (1030 + 783));
								v83 = v71[v75];
								v4889 = 2;
							end
						end
					end
				elseif ((2002 > 1362) and (v84 <= (155 + 227))) then
					if (v84 <= (578 - 209)) then
						if (v84 <= (9 + 353)) then
							if ((645 > 243) and (v84 <= (122 + 237))) then
								if (v84 <= (1060 - (167 + 536))) then
									local v1333 = 0 + 0;
									local v1334;
									local v1335;
									local v1336;
									local v1337;
									while true do
										if ((v1333 == (0 - 0)) or (3088 <= 579)) then
											v1334 = nil;
											v1335 = nil;
											v1334, v1336 = nil;
											v1337 = nil;
											v1333 = 1 + 0;
										end
										if ((2 + 0) == v1333) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v62[v83[1458 - (1304 + 151)]];
											v75 = v75 + 1;
											v1333 = 3 + 0;
										end
										if ((v1333 == (2 + 3)) or (3859 <= 2521)) then
											v1337 = v83[1 + 1];
											v1334 = {v81[v1337](v13(v81, v1337 + 1 + 0, v76))};
											v1335 = 0 + 0;
											for v6618 = v1337, v83[512 - (471 + 37)] do
												v1335 = v1335 + (1027 - (557 + 469));
												v81[v6618] = v1334[v1335];
											end
											v1333 = 4 + 2;
										end
										if (v1333 == 3) then
											v83 = v71[v75];
											v1337 = v83[4 - 2];
											v1334, v1336 = v74(v81[v1337](v81[v1337 + (1 - 0)]));
											v76 = (v1336 + v1337) - (1378 - (513 + 864));
											v1333 = 4;
										end
										if (v1333 == 1) then
											v81[v83[5 - 3]] = v62[v83[3]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[3 - 1]] = v61[v83[402 - (187 + 212)]];
											v1333 = 2;
										end
										if ((2475 > 456) and (v1333 == 6)) then
											v75 = v75 + (79 - (35 + 43));
											v83 = v71[v75];
											v75 = v83[3];
											break;
										end
										if (v1333 == (1118 - (209 + 905))) then
											v1335 = 0 + 0;
											for v6621 = v1337, v76 do
												v1335 = v1335 + (737 - (555 + 181));
												v81[v6621] = v1334[v1335];
											end
											v75 = v75 + 1;
											v83 = v71[v75];
											v1333 = 7 - 2;
										end
									end
								elseif (v84 > (1343 - (953 + 32))) then
									local v4892 = 0 - 0;
									local v4893;
									local v4894;
									while true do
										if ((v4892 == (3 - 0)) or (127 >= 3180)) then
											v4894 = v83[2];
											v4893 = v81[v83[5 - 2]];
											v81[v4894 + (1 - 0)] = v4893;
											v81[v4894] = v4893[v83[4]];
											v4892 = 507 - (412 + 91);
										end
										if ((v4892 == (273 - (53 + 219))) or (565 == 4880)) then
											v75 = v75 + (1650 - (145 + 1504));
											v83 = v71[v75];
											v81[v83[229 - (101 + 126)]] = v83[2 + 1] ~= (0 + 0);
											v75 = v75 + (627 - (153 + 473));
											v4892 = 2;
										end
										if (v4892 == (2 + 0)) then
											v83 = v71[v75];
											v62[v83[3 + 0]] = v81[v83[2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v4892 = 3 + 0;
										end
										if (v4892 == (0 - 0)) then
											v4893 = nil;
											v4894 = nil;
											v4894 = v83[971 - (752 + 217)];
											v81[v4894](v13(v81, v4894 + (1 - 0), v83[8 - 5]));
											v4892 = 1 + 0;
										end
										if ((4682 > 398) and (v4892 == (9 - 5))) then
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[1346 - (103 + 1240)];
											break;
										end
									end
								else
									v81[v83[2 + 0]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1213 - (16 + 1195)]] = v61[v83[12 - 9]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1614 - (1541 + 71)]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v81[v83[12 - 9]][v83[1648 - (1359 + 285)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3];
								end
							elseif ((289 <= 4617) and (v84 <= (2247 - (1178 + 709)))) then
								local v1338 = 0 - 0;
								local v1339;
								local v1340;
								local v1341;
								while true do
									if (v1338 == 8) then
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[1433 - (1052 + 378)]][v83[1694 - (1170 + 520)]];
										v75 = v75 + (718 - (689 + 28));
										v83 = v71[v75];
										v81[v83[1635 - (534 + 1099)]] = v62[v83[1847 - (686 + 1158)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[845 - (93 + 749)]][v83[1 + 3]];
										v1338 = 105 - (81 + 15);
									end
									if ((v1338 == 9) or (4053 < 3656)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[8 - 5]] / v83[9 - 5];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[3]] / v83[16 - 12];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1338 = 1378 - (1363 + 5);
									end
									if ((2875 <= 4894) and (v1338 == (3 + 0))) then
										v81[v83[2]] = v62[v83[386 - (233 + 150)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[9 - 7]] = v81[v83[12 - 9]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1192 - (762 + 427)]] / v83[7 - 3];
										v75 = v75 + (1268 - (273 + 994));
										v1338 = 4 + 0;
									end
									if (((1702 - (1434 + 255)) == v1338) or (1501 >= 3047)) then
										v83 = v71[v75];
										v1341 = v83[970 - (361 + 607)];
										v81[v1341] = v81[v1341](v81[v1341 + 1]);
										v75 = v75 + (36 - (30 + 5));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[1 + 2]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1338 = 14;
									end
									if (v1338 == (644 - (602 + 41))) then
										v81[v1341 + 1] = v1340;
										v81[v1341] = v1340[v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v83[6 - 3];
										v75 = v75 + (640 - (483 + 156));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[1849 - (1633 + 213)];
										v1338 = 4 - 2;
									end
									if (v1338 == (4 + 14)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1341 = v83[2];
										v81[v1341](v13(v81, v1341 + 1, v83[3]));
										v75 = v75 + (606 - (115 + 490));
										v83 = v71[v75];
										do
											return;
										end
										break;
									end
									if (v1338 == (1116 - (706 + 396))) then
										v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[4]];
										v75 = v75 + (897 - (301 + 595));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[13 - 10]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[1625 - (610 + 1013)]] = v81[v83[13 - 10]][v83[9 - 5]];
										v75 = v75 + (3 - 2);
										v1338 = 15;
									end
									if (v1338 == (2 + 0)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[7 - 5]] = v62[v83[1406 - (150 + 1253)]];
										v75 = v75 + (1120 - (74 + 1045));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
										v75 = v75 + (526 - (435 + 90));
										v83 = v71[v75];
										v1338 = 3;
									end
									if ((1405 - (259 + 1140)) == v1338) then
										v83 = v71[v75];
										v81[v83[1115 - (670 + 443)]] = v62[v83[5 - 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[9 - 7]] = v81[v83[3 + 0]][v83[69 - (38 + 27)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[1 + 2]] / v83[1 + 3];
										v1338 = 17 - 10;
									end
									if (v1338 == (847 - (341 + 494))) then
										v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[1 + 3]];
										v75 = v75 + (1616 - (1276 + 339));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[2 + 1]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[10 - 7]][v83[3 + 1]];
										v75 = v75 + (3 - 2);
										v1338 = 1 + 12;
									end
									if (v1338 == 4) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]] / v83[1088 - (76 + 1008)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1341 = v83[2];
										v81[v1341] = v81[v1341](v81[v1341 + 1]);
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1338 = 4 + 1;
									end
									if (v1338 == (1858 - (1431 + 410))) then
										v83 = v71[v75];
										v1340 = v83[1 + 2];
										v1339 = v81[v1340];
										for v6624 = v1340 + 1, v83[1 + 3] do
											v1339 = v1339 .. v81[v6624];
										end
										v81[v83[4 - 2]] = v1339;
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[80 - (46 + 32)]] = v83[3 - 0];
										v1338 = 5 + 13;
									end
									if (((1 + 6) == v1338) or (1605 <= 1133)) then
										v75 = v75 + (167 - (92 + 74));
										v83 = v71[v75];
										v1341 = v83[2];
										v81[v1341] = v81[v1341](v81[v1341 + (1 - 0)]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[936 - (237 + 696)]];
										v75 = v75 + 1 + 0;
										v1338 = 7 + 1;
									end
									if (v1338 == (60 - 44)) then
										v81[v83[3 - 1]] = v81[v83[3 + 0]] * v83[4 - 0];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[8 - 6]] = v81[v83[1 + 2]] - v81[v83[1884 - (1225 + 655)]];
										v75 = v75 + (951 - (184 + 766));
										v83 = v71[v75];
										v81[v83[1811 - (199 + 1610)]] = v83[1 + 2];
										v75 = v75 + 1 + 0;
										v1338 = 3 + 14;
									end
									if ((v1338 == (35 - 20)) or (3827 < 3156)) then
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[4 - 1]] / v83[5 - 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1341 = v83[2 - 0];
										v81[v1341] = v81[v1341](v81[v1341 + (1 - 0)]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1338 = 16;
									end
									if (v1338 == (21 - 10)) then
										v75 = v75 + (1558 - (1278 + 279));
										v83 = v71[v75];
										v81[v83[410 - (148 + 260)]] = v83[2 + 1];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[3 - 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1338 = 8 + 4;
									end
									if (v1338 == (24 - 14)) then
										v1341 = v83[2];
										v81[v1341] = v81[v1341](v81[v1341 + (2 - 1)]);
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[952 - (606 + 344)]] = v81[v83[3 + 0]] * v83[10 - 6];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]] - v81[v83[812 - (715 + 93)]];
										v1338 = 11;
									end
									if (v1338 == 0) then
										v1339 = nil;
										v1340 = nil;
										v1341 = nil;
										v81[v83[790 - (744 + 44)]] = v62[v83[1194 - (665 + 526)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1341 = v83[1003 - (253 + 748)];
										v1340 = v81[v83[3]];
										v1338 = 1;
									end
									if (v1338 == 5) then
										v81[v83[2 + 0]] = v83[1030 - (914 + 113)];
										v75 = v75 + (1758 - (1188 + 569));
										v83 = v71[v75];
										v81[v83[1374 - (822 + 550)]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[3]][v83[6 - 2]];
										v75 = v75 + 1;
										v1338 = 2 + 4;
									end
								end
							elseif (v84 > (1217 - (273 + 583))) then
								v81[v83[1 + 1]] = v62[v83[1 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = not v81[v83[3]];
								v75 = v75 + (474 - (368 + 105));
								v83 = v71[v75];
								v62[v83[3 + 0]] = v81[v83[382 - (332 + 48)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v62[v83[4 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								if v81[v83[2]] then
									v75 = v75 + 1;
								else
									v75 = v83[2 + 1];
								end
							else
								local v4914 = 0;
								local v4915;
								local v4916;
								local v4917;
								local v4918;
								while true do
									if (v4914 == (5 + 1)) then
										v75 = v75 + (1249 - (967 + 281));
										v83 = v71[v75];
										v75 = v83[3];
										break;
									end
									if ((v4914 == (0 - 0)) or (45 >= 168)) then
										v4915 = nil;
										v4916 = nil;
										v4915, v4917 = nil;
										v4918 = nil;
										v4914 = 1 + 0;
									end
									if (v4914 == (4 - 3)) then
										v81[v83[2]] = v62[v83[5 - 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[1019 - (103 + 913)]];
										v4914 = 9 - 7;
									end
									if (v4914 == (5 - 2)) then
										v83 = v71[v75];
										v4918 = v83[2 - 0];
										v4915, v4917 = v74(v81[v4918](v81[v4918 + 1 + 0]));
										v76 = (v4917 + v4918) - (785 - (23 + 761));
										v4914 = 4;
									end
									if (v4914 == (8 - 4)) then
										v4916 = 1771 - (179 + 1592);
										for v9700 = v4918, v76 do
											local v9701 = 0;
											while true do
												if ((2005 < 2279) and (v9701 == (0 + 0))) then
													v4916 = v4916 + 1 + 0;
													v81[v9700] = v4915[v4916];
													break;
												end
											end
										end
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4914 = 5;
									end
									if (v4914 == 2) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[3]];
										v75 = v75 + (157 - (48 + 108));
										v4914 = 3 + 0;
									end
									if ((1995 - (1371 + 619)) == v4914) then
										v4918 = v83[157 - (143 + 12)];
										v4915 = {v81[v4918](v13(v81, v4918 + 1, v76))};
										v4916 = 0 - 0;
										for v9702 = v4918, v83[11 - 7] do
											v4916 = v4916 + (577 - (274 + 302));
											v81[v9702] = v4915[v4916];
										end
										v4914 = 14 - 8;
									end
								end
							end
						elseif ((2959 < 4829) and (v84 <= (323 + 42))) then
							if (v84 <= (1831 - (1060 + 408))) then
								local v1342;
								local v1343;
								v81[v83[2 - 0]] = v81[v83[1704 - (180 + 1521)]][v83[14 - 10]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1360 - (521 + 837)]] = v83[1132 - (889 + 240)];
								v75 = v75 + (146 - (4 + 141));
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[1665 - (1588 + 74)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3 + 0];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1343 = v83[4 - 2];
								v81[v1343] = v81[v1343](v13(v81, v1343 + 1, v83[1982 - (1612 + 367)]));
								v75 = v75 + (1426 - (538 + 887));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[1528 - (1121 + 404)]] + v81[v83[352 - (325 + 23)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[3 - 1]][v83[6 - 3]] = v81[v83[4]];
								v75 = v75 + (287 - (145 + 141));
								v83 = v71[v75];
								v1343 = v83[2];
								v81[v1343] = v81[v1343](v13(v81, v1343 + (634 - (52 + 581)), v83[1153 - (1118 + 32)]));
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v1343 = v83[1187 - (647 + 538)];
								v1342 = v81[v83[6 - 3]];
								v81[v1343 + 1] = v1342;
								v81[v1343] = v1342[v83[1375 - (695 + 676)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1343 = v83[4 - 2];
								v81[v1343](v81[v1343 + 1]);
							elseif (v84 > (1163 - 799)) then
								local v4919;
								v81[v83[2 + 0]] = v62[v83[3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[1 + 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[2 + 1];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4919 = v83[2 - 0];
								v81[v4919] = v81[v4919](v81[v4919 + 1 + 0]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]][v83[1298 - (542 + 753)]] = v81[v83[2 + 2]];
								v75 = v75 + (1970 - (1008 + 961));
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[8 - 5]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[3 + 0]] = v83[4];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v61[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v62[v83[4 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[37 - (18 + 15)]];
							else
								local v4938 = 0;
								local v4939;
								local v4940;
								while true do
									if (v4938 == (44 - 29)) then
										v81[v83[2 + 0]] = v81[v83[1881 - (1811 + 67)]] * v81[v83[4 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]][v83[1 + 2]] = v81[v83[450 - (218 + 228)]];
										v75 = v75 + (1568 - (471 + 1096));
										v83 = v71[v75];
										v4940 = v83[1263 - (640 + 621)];
										v81[v4940] = v81[v4940](v13(v81, v4940 + 1, v83[3 - 0]));
										v4938 = 15 + 1;
									end
									if ((v4938 == (9 + 4)) or (2982 <= 1989)) then
										v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[11 - 8];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[6 - 4]] = v83[3];
										v75 = v75 + (2 - 1);
										v4938 = 479 - (92 + 373);
									end
									if (v4938 == 7) then
										v4939 = v81[v83[13 - 10]];
										v81[v4940 + 1 + 0] = v4939;
										v81[v4940] = v4939[v83[972 - (868 + 100)]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[2]] = v83[787 - (133 + 651)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4938 = 4 + 4;
									end
									if ((v4938 == (0 + 0)) or (2838 < 1227)) then
										v4939 = nil;
										v4940 = nil;
										v4940 = v83[1328 - (329 + 997)];
										v4939 = v81[v83[3]];
										v81[v4940 + (1 - 0)] = v4939;
										v81[v4940] = v4939[v83[572 - (471 + 97)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4938 = 3 - 2;
									end
									if (v4938 == (2 + 7)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[33 - (24 + 7)]] = v62[v83[1140 - (204 + 933)]];
										v75 = v75 + (322 - (164 + 157));
										v83 = v71[v75];
										v4938 = 10;
									end
									if (v4938 == (1720 - (1169 + 547))) then
										v83 = v71[v75];
										v4940 = v83[2];
										v81[v4940] = v81[v4940](v13(v81, v4940 + (1 - 0), v83[3]));
										v75 = v75 + (910 - (619 + 290));
										v83 = v71[v75];
										v62[v83[6 - 3]] = v81[v83[2 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4938 = 5 + 0;
									end
									if (v4938 == (22 - 11)) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[187 - (107 + 76)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[9 - 5]];
										v75 = v75 + (887 - (865 + 21));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[3 + 0]][v83[4 + 0]];
										v4938 = 12;
									end
									if ((3734 > 3094) and (v4938 == (2 + 0))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[84 - (74 + 8)]] = v81[v83[3]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v83[2 + 1];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4938 = 11 - 8;
									end
									if (v4938 == (54 - 37)) then
										v4940 = v83[4 - 2];
										v81[v4940](v81[v4940 + 1 + 0]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v75 = v83[7 - 4];
										break;
									end
									if (v4938 == (1290 - (552 + 722))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4940 = v83[1086 - (884 + 200)];
										v4939 = v81[v83[3 + 0]];
										v81[v4940 + 1 + 0] = v4939;
										v81[v4940] = v4939[v83[4]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v4938 = 17;
									end
									if ((v4938 == (1149 - (629 + 506))) or (3703 < 3074)) then
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[3];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4940 = v83[1 + 1];
										v81[v4940] = v81[v4940](v13(v81, v4940 + 1 + 0, v83[3]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4938 = 2 + 13;
									end
									if ((v4938 == (422 - (348 + 71))) or (1641 > 4105)) then
										v81[v83[5 - 3]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1839 - (242 + 1594)]][v83[11 - 7]];
										v75 = v75 + (79 - (60 + 18));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[30 - (20 + 6)]];
										v75 = v75 + (1228 - (1060 + 167));
										v4938 = 3 + 1;
									end
									if ((2533 > 1325) and (v4938 == 10)) then
										v81[v83[1 + 1]] = {};
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + (999 - (46 + 952));
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[3]][v83[7 - 3]];
										v75 = v75 + 1;
										v4938 = 4 + 7;
									end
									if ((2746 >= 1439) and (12 == v4938)) then
										v75 = v75 + (1288 - (690 + 597));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[2 + 1]][v83[2 + 2]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v62[v83[3 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4938 = 13;
									end
									if (v4938 == 1) then
										v81[v83[524 - (402 + 120)]] = v83[3];
										v75 = v75 + (1967 - (1058 + 908));
										v83 = v71[v75];
										v4940 = v83[5 - 3];
										v81[v4940] = v81[v4940](v13(v81, v4940 + (2 - 1), v83[5 - 2]));
										v75 = v75 + (1958 - (1344 + 613));
										v83 = v71[v75];
										v81[v83[716 - (576 + 138)]] = v62[v83[1 + 2]];
										v4938 = 2 - 0;
									end
									if (v4938 == (240 - (104 + 128))) then
										v4940 = v83[1 + 1];
										v81[v4940] = v81[v4940](v13(v81, v4940 + (1 - 0), v83[1627 - (1424 + 200)]));
										v75 = v75 + (396 - (334 + 61));
										v83 = v71[v75];
										v81[v83[9 - 7]] = v81[v83[1829 - (1668 + 158)]][v83[860 - (148 + 708)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1810 - (1739 + 68)]][v83[4 + 0]];
										v4938 = 11 - 2;
									end
									if (v4938 == (1498 - (501 + 992))) then
										v62[v83[9 - 6]] = v81[v83[2 - 0]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[4 - 2]] = v62[v83[275 - (85 + 187)]];
										v75 = v75 + (40 - (15 + 24));
										v83 = v71[v75];
										v4940 = v83[2 + 0];
										v4939 = v81[v83[4 - 1]];
										v4938 = 6;
									end
									if (v4938 == (3 + 3)) then
										v81[v4940 + (42 - (7 + 34))] = v4939;
										v81[v4940] = v4939[v83[1 + 3]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[729 - (185 + 541)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4940 = v83[2 + 0];
										v4938 = 7;
									end
								end
							end
						elseif (v84 <= (2139 - (1547 + 225))) then
							if ((v84 > (664 - 298)) or (3080 < 2071)) then
								local v4941 = 0;
								local v4942;
								local v4943;
								local v4944;
								while true do
									if (v4941 == (15 - 7)) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[9 - 6]][v83[1726 - (797 + 925)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1063 - (93 + 968)]] = v81[v83[1 + 2]][v83[4 + 0]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[518 - (209 + 306)]][v83[873 - (21 + 848)]];
										v75 = v75 + (868 - (362 + 505));
										v4941 = 13 - 4;
									end
									if (v4941 == (6 + 0)) then
										v83 = v71[v75];
										v81[v83[3 - 1]] = v62[v83[27 - (6 + 18)]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[892 - (860 + 29)]][v83[4 + 0]];
										v75 = v75 + (1357 - (60 + 1296));
										v83 = v71[v75];
										v81[v83[15 - (7 + 6)]] = v62[v83[1 + 2]];
										v75 = v75 + (1341 - (501 + 839));
										v4941 = 6 + 1;
									end
									if ((v4941 == (644 - (580 + 64))) or (4148 < 304)) then
										v4942 = nil;
										v4943 = nil;
										v4944 = nil;
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4944 = v83[1 + 1];
										v4943 = v81[v83[7 - 4]];
										v81[v4944 + 1 + 0] = v4943;
										v4941 = 1 - 0;
									end
									if ((806 <= 1998) and (v4941 == (16 - 6))) then
										v75 = v75 + (1525 - (37 + 1487));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[13 - 10]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3 + 0]][v83[8 - 4]];
										v4941 = 9 + 2;
									end
									if (v4941 == (1318 - (885 + 421))) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[11 - 8]][v83[1834 - (252 + 1578)]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v4944 = v83[3 - 1];
										v4941 = 49 - 36;
									end
									if (v4941 == (8 - 3)) then
										v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[16 - 12]];
										v75 = v75 + (941 - (53 + 887));
										v83 = v71[v75];
										v4944 = v83[1 + 1];
										v81[v4944] = v81[v4944](v81[v4944 + 1]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[4 - 2]] = v83[797 - (339 + 455)];
										v75 = v75 + (1661 - (1458 + 202));
										v4941 = 87 - (63 + 18);
									end
									if ((15 == v4941) or (3347 <= 987)) then
										for v9705 = v4943 + 1, v83[4 + 0] do
											v4942 = v4942 .. v81[v9705];
										end
										v81[v83[1 + 1]] = v4942;
										v75 = v75 + (1932 - (393 + 1538));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[1207 - (852 + 352)];
										v75 = v75 + (189 - (137 + 51));
										v83 = v71[v75];
										v4944 = v83[8 - 6];
										v81[v4944](v13(v81, v4944 + (1062 - (854 + 207)), v83[1311 - (350 + 958)]));
										v4941 = 21 - 5;
									end
									if ((2708 == 2708) and ((1 + 3) == v4941)) then
										v81[v83[2 + 0]] = v81[v83[271 - (15 + 253)]][v83[1054 - (232 + 818)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[535 - (129 + 404)]] = v81[v83[2 + 1]][v83[9 - 5]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[74 - (20 + 52)]] = v81[v83[5 - 2]][v83[3 + 1]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4941 = 1078 - (163 + 910);
									end
									if ((212 < 1276) and (v4941 == (20 - 9))) then
										v75 = v75 + (1551 - (1149 + 401));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[4]];
										v75 = v75 + (845 - (473 + 371));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[10 - 6]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[293 - (252 + 38)]][v83[33 - (17 + 12)]];
										v4941 = 1311 - (939 + 360);
									end
									if (v4941 == 13) then
										v81[v4944] = v81[v4944](v81[v4944 + 1 + 0]);
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4943 = v83[5 - 2];
										v4942 = v81[v4943];
										for v9706 = v4943 + (1501 - (13 + 1487)), v83[2 + 2] do
											v4942 = v4942 .. v81[v9706];
										end
										v81[v83[1904 - (778 + 1124)]] = v4942;
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4941 = 14;
									end
									if (v4941 == (25 - 11)) then
										v4944 = v83[2];
										v81[v4944] = v81[v4944](v81[v4944 + 1 + 0]);
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[3 - 0];
										v75 = v75 + (942 - (53 + 888));
										v83 = v71[v75];
										v4943 = v83[1784 - (651 + 1130)];
										v4942 = v81[v4943];
										v4941 = 20 - 5;
									end
									if (v4941 == 16) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										do
											return;
										end
										break;
									end
									if (v4941 == (1 + 2)) then
										v81[v83[5 - 3]] = v62[v83[3]];
										v75 = v75 + (1619 - (1058 + 560));
										v83 = v71[v75];
										v81[v83[375 - (264 + 109)]] = v81[v83[2 + 1]][v83[8 - 4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[4 - 1]][v83[956 - (864 + 88)]];
										v75 = v75 + (1080 - (662 + 417));
										v83 = v71[v75];
										v4941 = 1449 - (898 + 547);
									end
									if (v4941 == (6 + 3)) then
										v83 = v71[v75];
										v4944 = v83[2];
										v81[v4944] = v81[v4944](v81[v4944 + 1]);
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v83[5 - 2];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1155 - (482 + 671)]] = v62[v83[591 - (158 + 430)]];
										v4941 = 10;
									end
									if ((1 + 0) == v4941) then
										v81[v4944] = v4943[v83[4]];
										v75 = v75 + (1756 - (764 + 991));
										v83 = v71[v75];
										v81[v83[2]] = v83[2 + 1];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[1655 - (1489 + 163)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4941 = 2 + 0;
									end
									if ((v4941 == (3 - 1)) or (1168 >= 1961)) then
										v81[v83[3 - 1]] = v62[v83[3]];
										v75 = v75 + (153 - (137 + 15));
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[27 - (11 + 13)]];
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[705 - (668 + 35)]] = v81[v83[2 + 1]][v83[1 + 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4941 = 1575 - (736 + 836);
									end
									if (v4941 == (18 - 11)) then
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[539 - (185 + 351)]][v83[224 - (21 + 199)]];
										v75 = v75 + (19 - (17 + 1));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3]][v83[1072 - (1060 + 8)]];
										v75 = v75 + (1855 - (762 + 1092));
										v83 = v71[v75];
										v81[v83[4 - 2]] = v81[v83[870 - (504 + 363)]][v83[1407 - (604 + 799)]];
										v75 = v75 + 1;
										v4941 = 8;
									end
								end
							else
								local v4945 = 0 - 0;
								local v4946;
								local v4947;
								while true do
									if (v4945 == (6 + 4)) then
										v81[v83[2]] = v62[v83[569 - (361 + 205)]];
										break;
									end
									if (v4945 == 0) then
										v4946 = nil;
										v4947 = nil;
										v4947 = v83[2 + 0];
										v81[v4947](v81[v4947 + 1 + 0]);
										v4945 = 1742 - (714 + 1027);
									end
									if (v4945 == (1 + 1)) then
										v83 = v71[v75];
										v4947 = v83[2];
										v4946 = v81[v83[7 - 4]];
										v81[v4947 + (3 - 2)] = v4946;
										v4945 = 2 + 1;
									end
									if ((4115 >= 1491) and (v4945 == 6)) then
										v81[v4947] = v4946[v83[5 - 1]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[12 - 9];
										v4945 = 7;
									end
									if (v4945 == (3 + 6)) then
										v81[v4947 + 1] = v4946;
										v81[v4947] = v4946[v83[3 + 1]];
										v75 = v75 + (350 - (103 + 246));
										v83 = v71[v75];
										v4945 = 37 - 27;
									end
									if (v4945 == 8) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v4947 = v83[2 + 0];
										v4946 = v81[v83[8 - 5]];
										v4945 = 5 + 4;
									end
									if (v4945 == 4) then
										v75 = v75 + (4 - 3);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[1365 - (1015 + 347)]];
										v75 = v75 + (1880 - (409 + 1470));
										v4945 = 1485 - (898 + 582);
									end
									if ((3758 < 4927) and ((35 - (18 + 10)) == v4945)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4947 = v83[6 - 4];
										v81[v4947] = v81[v4947](v13(v81, v4947 + 1 + 0, v83[3]));
										v4945 = 8;
									end
									if ((3052 > 1237) and (v4945 == (537 - (406 + 126)))) then
										v83 = v71[v75];
										v4947 = v83[9 - 7];
										v4946 = v81[v83[3]];
										v81[v4947 + (1593 - (851 + 741))] = v4946;
										v4945 = 608 - (462 + 140);
									end
									if ((801 - (136 + 664)) == v4945) then
										v75 = v75 + (1299 - (763 + 535));
										v83 = v71[v75];
										v81[v83[6 - 4]] = v62[v83[3]];
										v75 = v75 + 1;
										v4945 = 2;
									end
									if (v4945 == (5 - 2)) then
										v81[v4947] = v4946[v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[1 + 2];
										v4945 = 4;
									end
								end
							end
						elseif (v84 > 368) then
							local v4948 = 0 - 0;
							local v4949;
							local v4950;
							local v4951;
							while true do
								if (v4948 == (592 - (487 + 105))) then
									v4949 = nil;
									v4950 = nil;
									v4951 = nil;
									v4951 = v83[2];
									v4948 = 2 - 1;
								end
								if (v4948 == (31 - 22)) then
									v81[v4951] = v4950[v83[10 - 6]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[6 - 3];
									break;
								end
								if ((337 <= 536) and (v4948 == (1 - 0))) then
									v81[v4951] = v81[v4951](v13(v81, v4951 + (516 - (171 + 344)), v83[3 + 0]));
									v75 = v75 + (450 - (188 + 261));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
									v4948 = 4 - 2;
								end
								if (v4948 == 2) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[223 - (24 + 197)]] = v83[12 - 9];
									v75 = v75 + 1 + 0;
									v4948 = 2 + 1;
								end
								if (v4948 == 8) then
									v83 = v71[v75];
									v4951 = v83[2];
									v4950 = v81[v83[8 - 5]];
									v81[v4951 + (2 - 1)] = v4950;
									v4948 = 11 - 2;
								end
								if (5 == v4948) then
									v81[v83[1124 - (768 + 354)]] = v83[3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v4950 = v83[1 + 2];
									v4948 = 4 + 2;
								end
								if (v4948 == 3) then
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[223 - (34 + 186)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v4948 = 4;
								end
								if (v4948 == (17 - 11)) then
									v4949 = v81[v4950];
									for v9707 = v4950 + 1, v83[4] do
										v4949 = v4949 .. v81[v9707];
									end
									v81[v83[1 + 1]] = v4949;
									v75 = v75 + 1 + 0;
									v4948 = 7;
								end
								if (v4948 == (16 - 9)) then
									v83 = v71[v75];
									v4951 = v83[2 + 0];
									v81[v4951] = v81[v4951](v13(v81, v4951 + (232 - (53 + 178)), v83[5 - 2]));
									v75 = v75 + (4 - 3);
									v4948 = 38 - 30;
								end
								if ((4330 == 4330) and (v4948 == (4 - 0))) then
									v4951 = v83[2 + 0];
									v81[v4951] = v81[v4951]();
									v75 = v75 + (460 - (343 + 116));
									v83 = v71[v75];
									v4948 = 1 + 4;
								end
							end
						else
							local v4952 = 0 - 0;
							local v4953;
							local v4954;
							while true do
								if ((9 - 3) == v4952) then
									v83 = v71[v75];
									v81[v83[1990 - (1830 + 158)]] = v83[782 - (460 + 319)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[8 - 6]] = v83[3];
									v4952 = 7;
								end
								if ((37 <= 3324) and (v4952 == (1263 - (1071 + 190)))) then
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + (1746 - (1739 + 6));
									v83 = v71[v75];
									v4952 = 5 - 2;
								end
								if ((649 - (55 + 591)) == v4952) then
									v4954 = v83[2];
									v81[v4954](v13(v81, v4954 + 1, v83[1505 - (1500 + 2)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[7 - 4];
									v4952 = 4 + 0;
								end
								if ((3098 <= 3847) and (v4952 == (23 - 16))) then
									v75 = v75 + (238 - (68 + 169));
									v83 = v71[v75];
									v81[v83[2]] = v83[4 - 1] ~= (0 - 0);
									break;
								end
								if (v4952 == (2 + 2)) then
									v75 = v75 + (720 - (381 + 338));
									v83 = v71[v75];
									v62[v83[4 - 1]] = v81[v83[5 - 3]];
									v75 = v75 + (1795 - (1025 + 769));
									v83 = v71[v75];
									v4952 = 1220 - (789 + 426);
								end
								if ((v4952 == (1024 - (895 + 128))) or (3465 > 4156)) then
									v83 = v71[v75];
									v4954 = v83[2];
									v4953 = v81[v83[3]];
									v81[v4954 + 1 + 0] = v4953;
									v81[v4954] = v4953[v83[103 - (37 + 62)]];
									v4952 = 2 + 0;
								end
								if ((1912 > 85) and (v4952 == (0 - 0))) then
									v4953 = nil;
									v4954 = nil;
									v4954 = v83[6 - 4];
									v81[v4954](v13(v81, v4954 + 1, v83[3]));
									v75 = v75 + (67 - (24 + 42));
									v4952 = 1 - 0;
								end
								if (v4952 == 5) then
									v4954 = v83[4 - 2];
									v4953 = v81[v83[3]];
									v81[v4954 + (1442 - (1310 + 131))] = v4953;
									v81[v4954] = v4953[v83[1208 - (1195 + 9)]];
									v75 = v75 + 1 + 0;
									v4952 = 87 - (22 + 59);
								end
							end
						end
					elseif (v84 <= (171 + 204)) then
						if (v84 <= (134 + 238)) then
							if ((v84 <= (1913 - (1488 + 55))) or (3960 <= 2693)) then
								local v1362 = 0 + 0;
								local v1363;
								local v1364;
								local v1365;
								while true do
									if (v1362 == (16 - 8)) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[3 + 0]][v83[477 - (204 + 269)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1154 - (963 + 188)]][v83[2 + 2]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1643 - (1560 + 80)]][v83[4]];
										v75 = v75 + (4 - 3);
										v1362 = 9;
									end
									if ((3 + 3) == v1362) then
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + (505 - (444 + 60));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[2 + 1]][v83[10 - 6]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[876 - (674 + 200)]] = v62[v83[1821 - (1288 + 530)]];
										v75 = v75 + (1800 - (626 + 1173));
										v1362 = 7;
									end
									if (v1362 == 3) then
										v81[v83[2]] = v81[v83[3]][v83[506 - (83 + 419)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[1 + 3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[4 - 1]][v81[v83[8 - 4]]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1362 = 6 - 2;
									end
									if (v1362 == (3 + 8)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[782 - (347 + 432)]][v83[5 - 1]];
										v75 = v75 + (413 - (335 + 77));
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v81[v83[885 - (211 + 670)]]];
										v1362 = 25 - 13;
									end
									if (v1362 == (46 - 32)) then
										v1364 = v83[3 + 0];
										v1363 = v81[v1364];
										for v6626 = v1364 + 1 + 0, v83[1671 - (350 + 1317)] do
											v1363 = v1363 .. v81[v6626];
										end
										v81[v83[8 - 6]] = v1363;
										v75 = v75 + 1;
										v83 = v71[v75];
										v1365 = v83[2];
										v81[v1365] = v81[v1365](v81[v1365 + 1]);
										v75 = v75 + 1 + 0;
										v1362 = 1613 - (828 + 770);
									end
									if (v1362 == (9 - 7)) then
										v81[v83[2]] = v62[v83[7 - 4]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1392 - (1265 + 125)]] = v81[v83[1 + 2]][v83[1 + 3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v62[v83[3 + 0]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1362 = 1 + 2;
									end
									if (v1362 == 12) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1989 - (250 + 1737)]] = v81[v83[3]][v83[19 - 15]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[7 - 4]][v83[4 + 0]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1795 - (711 + 1082)]] = v81[v83[3]][v83[393 - (155 + 234)]];
										v1362 = 2 + 11;
									end
									if (v1362 == (536 - (222 + 298))) then
										v83 = v71[v75];
										v81[v83[1646 - (612 + 1032)]] = v83[4 - 1];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1365 = v83[2];
										v81[v1365](v13(v81, v1365 + 1, v83[9 - 6]));
										break;
									end
									if (v1362 == (3 + 2)) then
										v81[v83[5 - 3]] = v81[v83[3]][v83[442 - (76 + 362)]];
										v75 = v75 + (1461 - (1053 + 407));
										v83 = v71[v75];
										v1365 = v83[2 + 0];
										v81[v1365] = v81[v1365](v81[v1365 + 1 + 0]);
										v75 = v75 + (687 - (355 + 331));
										v83 = v71[v75];
										v81[v83[675 - (287 + 386)]] = v83[3 + 0];
										v75 = v75 + 1 + 0;
										v1362 = 1556 - (1382 + 168);
									end
									if ((v1362 == (41 - 26)) or (2309 > 3073)) then
										v83 = v71[v75];
										v81[v83[1 + 1]] = v83[390 - (370 + 17)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1364 = v83[3];
										v1363 = v81[v1364];
										for v6627 = v1364 + (891 - (175 + 715)), v83[4] do
											v1363 = v1363 .. v81[v6627];
										end
										v81[v83[2 + 0]] = v1363;
										v75 = v75 + 1;
										v1362 = 54 - 38;
									end
									if ((1900 == 1900) and (v1362 == 0)) then
										v1363 = nil;
										v1364 = nil;
										v1365 = nil;
										v1365 = v83[2 - 0];
										v1364 = v81[v83[1 + 2]];
										v81[v1365 + (1 - 0)] = v1364;
										v81[v1365] = v1364[v83[2 + 2]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1362 = 1835 - (1262 + 572);
									end
									if (((19 - 9) == v1362) or (91 == 435)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[157 - (24 + 131)]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[1287 - (795 + 489)]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 - 0]] = v62[v83[3]];
										v1362 = 1206 - (989 + 206);
									end
									if (v1362 == (33 - 20)) then
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[988 - (449 + 537)]] = v81[v83[1810 - (632 + 1175)]][v83[9 - 5]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1365 = v83[2 + 0];
										v81[v1365] = v81[v1365](v81[v1365 + (1563 - (626 + 936))]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v1362 = 14;
									end
									if (v1362 == (7 + 0)) then
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[1525 - (855 + 667)]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[899 - (269 + 628)]] = v81[v83[3]][v83[1 + 3]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[5 - 2]][v81[v83[4 + 0]]];
										v75 = v75 + 1;
										v1362 = 8;
									end
									if (v1362 == (1 + 8)) then
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[13 - 10]][v83[1 + 3]];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v1365 = v83[2 + 0];
										v81[v1365] = v81[v1365](v81[v1365 + (1 - 0)]);
										v75 = v75 + (1344 - (102 + 1241));
										v83 = v71[v75];
										v81[v83[1096 - (118 + 976)]] = v83[6 - 3];
										v1362 = 10 + 0;
									end
									if (v1362 == (1 + 0)) then
										v81[v83[824 - (331 + 491)]] = v83[422 - (260 + 159)];
										v75 = v75 + (1132 - (930 + 201));
										v83 = v71[v75];
										v81[v83[2]] = v83[8 - 5];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[1 + 1]] = v62[v83[4 - 1]];
										v75 = v75 + (788 - (604 + 183));
										v83 = v71[v75];
										v1362 = 2;
									end
									if (v1362 == (4 - 0)) then
										v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[1 + 3]];
										v75 = v75 + (1729 - (1466 + 262));
										v83 = v71[v75];
										v81[v83[7 - 5]] = v81[v83[88 - (41 + 44)]][v83[84 - (77 + 3)]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
										v75 = v75 + (666 - (84 + 581));
										v83 = v71[v75];
										v1362 = 3 + 2;
									end
								end
							elseif (v84 > (971 - 600)) then
								local v4955;
								local v4956;
								v4956 = v83[2 + 0];
								v4955 = v81[v83[4 - 1]];
								v81[v4956 + (574 - (441 + 132))] = v4955;
								v81[v4956] = v4955[v83[1090 - (424 + 662)]];
								v75 = v75 + (1600 - (386 + 1213));
								v83 = v71[v75];
								v4956 = v83[7 - 5];
								v81[v4956] = v81[v4956](v81[v4956 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v62[v83[1 + 2]] = v81[v83[2]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2 - 0]] = v62[v83[366 - (29 + 334)]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v4956 = v83[2];
								v4955 = v81[v83[11 - 8]];
								v81[v4956 + (1823 - (1552 + 270))] = v4955;
								v81[v4956] = v4955[v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v4956 = v83[2];
								v81[v4956](v81[v4956 + (1 - 0)]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[37 - (30 + 4)];
							else
								local v4973 = 0 - 0;
								local v4974;
								while true do
									if (v4973 == (0 - 0)) then
										v4974 = nil;
										v81[v83[478 - (103 + 373)]] = v62[v83[3]];
										v75 = v75 + (1890 - (1215 + 674));
										v83 = v71[v75];
										v81[v83[1153 - (185 + 966)]] = v81[v83[1516 - (1156 + 357)]][v83[1 + 3]];
										v4973 = 950 - (190 + 759);
									end
									if ((v4973 == (92 - (51 + 38))) or (673 >= 3289)) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v62[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[82 - (8 + 71)]];
										v4973 = 10 - 6;
									end
									if (v4973 == (19 - 15)) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[1179 - (285 + 891)]][v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v4973 = 5;
									end
									if (v4973 == (2 + 4)) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]][v83[3 + 0]] = v81[v83[9 - 5]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v4973 = 10 - 3;
									end
									if (v4973 == (939 - (342 + 596))) then
										v75 = v75 + (1604 - (1278 + 325));
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[4 - 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4973 = 1 + 1;
									end
									if ((274 - (194 + 78)) == v4973) then
										v81[v83[1 + 1]] = v81[v83[3]][v83[10 - 6]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v81[v83[3]][v83[1 + 3]];
										v75 = v75 + (1151 - (1094 + 56));
										v4973 = 1240 - (547 + 690);
									end
									if (v4973 == (6 + 1)) then
										v75 = v83[3];
										break;
									end
									if (v4973 == (870 - (69 + 796))) then
										v81[v83[1 + 1]] = v81[v83[42 - (28 + 11)]][v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v4974 = v83[3 - 1];
										v81[v4974] = v81[v4974](v13(v81, v4974 + (3 - 2), v83[775 - (720 + 52)]));
										v4973 = 2 + 4;
									end
								end
							end
						elseif ((v84 <= 373) or (34 == 4083)) then
							local v1366;
							local v1367;
							v1367 = v83[2 + 0];
							v81[v1367](v81[v1367 + (2 - 1)]);
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[7 - 5]] = v62[v83[2 + 1]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1367 = v83[1 + 1];
							v1366 = v81[v83[3]];
							v81[v1367 + (1 - 0)] = v1366;
							v81[v1367] = v1366[v83[1998 - (41 + 1953)]];
							v75 = v75 + (628 - (581 + 46));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v62[v83[1022 - (971 + 48)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[3 + 0]][v83[1236 - (607 + 625)]];
							v75 = v75 + (596 - (325 + 270));
							v83 = v71[v75];
							v1367 = v83[1930 - (1785 + 143)];
							v81[v1367] = v81[v1367](v81[v1367 + (3 - 2)]);
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[3]];
							v75 = v75 + (897 - (738 + 158));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[5 - 2]][v83[1944 - (489 + 1451)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[5 - 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[3]];
						elseif (v84 > (217 + 157)) then
							local v4975;
							local v4976;
							local v4975, v4977;
							local v4978;
							v81[v83[2]] = v62[v83[1 + 2]];
							v75 = v75 + (196 - (52 + 143));
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[3 - 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[6 - 3]];
							v75 = v75 + (1168 - (109 + 1058));
							v83 = v71[v75];
							v4978 = v83[2 - 0];
							v4975, v4977 = v74(v81[v4978](v81[v4978 + (593 - (374 + 218))]));
							v76 = (v4977 + v4978) - (688 - (266 + 421));
							v4976 = 0;
							for v6495 = v4978, v76 do
								v4976 = v4976 + 1 + 0;
								v81[v6495] = v4975[v4976];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v4978 = v83[2];
							v4975 = {v81[v4978](v13(v81, v4978 + 1, v76))};
							v4976 = 0 + 0;
							for v6498 = v4978, v83[14 - 10] do
								local v6499 = 0 + 0;
								while true do
									if (v6499 == (0 + 0)) then
										v4976 = v4976 + (3 - 2);
										v81[v6498] = v4975[v4976];
										break;
									end
								end
							end
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v75 = v83[3 - 0];
						else
							local v4987;
							local v4988;
							v4988 = v83[2 + 0];
							v4987 = v81[v83[9 - 6]];
							v81[v4988 + (1999 - (1007 + 991))] = v4987;
							v81[v4988] = v4987[v83[4]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[1388 - (183 + 1203)]] = v83[3 + 0];
							v75 = v75 + 1;
							v83 = v71[v75];
							v4988 = v83[2 - 0];
							v81[v4988] = v81[v4988](v13(v81, v4988 + (2 - 1), v83[3 + 0]));
							v75 = v75 + (348 - (120 + 227));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[3 + 0]][v83[1 + 3]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v4988 = v83[2];
							v4987 = v81[v83[9 - 6]];
							v81[v4988 + 1] = v4987;
							v81[v4988] = v4987[v83[5 - 1]];
						end
					elseif (v84 <= (269 + 109)) then
						if (v84 <= 376) then
							local v1386 = 0;
							local v1387;
							local v1388;
							local v1389;
							local v1390;
							local v1391;
							while true do
								if (v1386 == (1552 - (935 + 615))) then
									v1391 = v83[390 - (109 + 279)];
									v1390 = v81[v83[943 - (311 + 629)]];
									v81[v1391 + (946 - (917 + 28))] = v1390;
									v81[v1391] = v1390[v83[1859 - (622 + 1233)]];
									v1386 = 3;
								end
								if ((v1386 == (2 + 2)) or (3635 < 1511)) then
									v76 = (v1389 + v1391) - (1 + 0);
									v1388 = 0 - 0;
									for v6628 = v1391, v76 do
										v1388 = v1388 + 1;
										v81[v6628] = v1387[v1388];
									end
									v75 = v75 + 1;
									v1386 = 5;
								end
								if (v1386 == (1777 - (1073 + 703))) then
									v1391 = nil;
									v81[v83[893 - (785 + 106)]] = v61[v83[2 + 1]];
									v75 = v75 + (1869 - (1578 + 290));
									v83 = v71[v75];
									v1386 = 5 - 3;
								end
								if (v1386 == (0 - 0)) then
									v1387 = nil;
									v1388 = nil;
									v1387, v1389 = nil;
									v1390 = nil;
									v1386 = 3 - 2;
								end
								if (v1386 == (3 + 2)) then
									v83 = v71[v75];
									v1391 = v83[2];
									v1387 = {v81[v1391](v13(v81, v1391 + 1 + 0, v76))};
									v1388 = 0 - 0;
									v1386 = 5 + 1;
								end
								if (v1386 == (3 + 3)) then
									for v6631 = v1391, v83[4] do
										v1388 = v1388 + (4 - 3);
										v81[v6631] = v1387[v1388];
									end
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v75 = v83[322 - (42 + 277)];
									break;
								end
								if (v1386 == (8 - 5)) then
									v75 = v75 + (1128 - (1113 + 14));
									v83 = v71[v75];
									v1391 = v83[2];
									v1387, v1389 = v74(v81[v1391](v81[v1391 + 1 + 0]));
									v1386 = 16 - 12;
								end
							end
						elseif (v84 == 377) then
							v81[v83[849 - (833 + 14)]] = v61[v83[2 + 1]];
						else
							local v5005;
							local v5006;
							v5006 = v83[2];
							v81[v5006](v13(v81, v5006 + (1326 - (832 + 493)), v83[5 - 2]));
							v75 = v75 + (955 - (508 + 446));
							v83 = v71[v75];
							v5006 = v83[2];
							v5005 = v81[v83[13 - 10]];
							v81[v5006 + 1] = v5005;
							v81[v5006] = v5005[v83[3 + 1]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[1 + 2];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v5006 = v83[5 - 3];
							v81[v5006](v13(v81, v5006 + 1, v83[8 - 5]));
							v75 = v75 + (1355 - (227 + 1127));
							v83 = v71[v75];
							v5006 = v83[9 - 7];
							v5005 = v81[v83[2 + 1]];
							v81[v5006 + (684 - (629 + 54))] = v5005;
							v81[v5006] = v5005[v83[1683 - (149 + 1530)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[3];
						end
					elseif (v84 <= 380) then
						if ((2575 >= 915) and (v84 > (1787 - (1012 + 396)))) then
							local v5022 = 0 + 0;
							local v5023;
							while true do
								if (v5022 == 7) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[4]];
									v5022 = 34 - 26;
								end
								if (v5022 == (7 - 4)) then
									v83 = v71[v75];
									v81[v83[1602 - (587 + 1013)]] = v81[v83[26 - (11 + 12)]][v83[1996 - (1909 + 83)]];
									v75 = v75 + (736 - (394 + 341));
									v5022 = 1664 - (217 + 1443);
								end
								if ((v5022 == (3 - 1)) or (1636 < 503)) then
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[6 - 3]][v83[1 + 3]];
									v75 = v75 + 1;
									v5022 = 4 - 1;
								end
								if (v5022 == 9) then
									v75 = v75 + (482 - (217 + 264));
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[7 - 4]];
									break;
								end
								if (((895 - (318 + 577)) == v5022) or (639 >= 775)) then
									v5023 = nil;
									v81[v83[8 - 6]] = v81[v83[3]][v83[11 - 7]];
									v75 = v75 + 1;
									v5022 = 1045 - (156 + 888);
								end
								if (v5022 == (10 - 6)) then
									v83 = v71[v75];
									v5023 = v83[2 + 0];
									v81[v5023] = v81[v5023](v13(v81, v5023 + (1 - 0), v83[1682 - (99 + 1580)]));
									v5022 = 5;
								end
								if ((4560 == 4560) and ((9 - 3) == v5022)) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[1389 - (1282 + 104)]];
									v5022 = 619 - (92 + 520);
								end
								if ((1352 - (1259 + 92)) == v5022) then
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[11 - 8]][v83[4]];
									v75 = v75 + 1;
									v5022 = 2 + 0;
								end
								if (v5022 == 5) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[5 - 3]] = v81[v83[1399 - (1298 + 98)]];
									v5022 = 1 + 5;
								end
								if (v5022 == 8) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v81[v83[1 + 2]];
									v5022 = 1 + 8;
								end
							end
						else
							local v5024 = 0 + 0;
							local v5025;
							local v5026;
							while true do
								if ((v5024 == 0) or (4457 <= 4345)) then
									v5025 = nil;
									v5026 = nil;
									v5026 = v83[7 - 5];
									v81[v5026](v81[v5026 + 1 + 0]);
									v5024 = 1 + 0;
								end
								if (v5024 == (1 + 4)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v62[v83[3]];
									v75 = v75 + 1 + 0;
									v5024 = 6;
								end
								if ((2062 < 2939) and (v5024 == 7)) then
									v81[v83[2]] = v83[11 - 8];
									v75 = v75 + (458 - (206 + 251));
									v83 = v71[v75];
									v81[v83[2]] = v62[v83[173 - (162 + 8)]];
									v5024 = 8;
								end
								if ((v5024 == (145 - (26 + 117))) or (1090 == 2747)) then
									v83 = v71[v75];
									v5026 = v83[2];
									v5025 = v81[v83[2 + 1]];
									v81[v5026 + (3 - 2)] = v5025;
									v5024 = 6 - 3;
								end
								if ((4325 > 2716) and (v5024 == (997 - (591 + 405)))) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v5024 = 2;
								end
								if ((1812 == 1812) and (v5024 == 6)) then
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[288 - (279 + 5)]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v5024 = 3 + 4;
								end
								if (v5024 == (2 + 1)) then
									v81[v5026] = v5025[v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3 + 0];
									v5024 = 1304 - (960 + 340);
								end
								if ((v5024 == 4) or (3429 == 2651)) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v5026 = v83[1 + 1];
									v81[v5026] = v81[v5026](v13(v81, v5026 + (1 - 0), v83[2 + 1]));
									v5024 = 1 + 4;
								end
								if (v5024 == (19 - 11)) then
									v75 = v75 + (62 - (24 + 37));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[4 - 1]][v83[9 - 5]];
									break;
								end
							end
						end
					elseif ((v84 > (1142 - (363 + 398))) or (4428 <= 332)) then
						local v5027;
						local v5028;
						v81[v83[3 - 1]] = v83[3];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[738 - (328 + 408)]] = v83[4 - 1];
						v75 = v75 + (1637 - (1462 + 174));
						v83 = v71[v75];
						v5028 = v83[4 - 2];
						v81[v5028] = v81[v5028](v13(v81, v5028 + (387 - (295 + 91)), v83[3]));
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[8 - 5]] + v81[v83[1 + 3]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[1618 - (423 + 1193)]][v83[3 + 0]] = v81[v83[1384 - (806 + 574)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v5028 = v83[1724 - (16 + 1706)];
						v81[v5028] = v81[v5028](v13(v81, v5028 + 1, v83[3 + 0]));
						v75 = v75 + (1244 - (1032 + 211));
						v83 = v71[v75];
						v5028 = v83[2];
						v5027 = v81[v83[1649 - (312 + 1334)]];
						v81[v5028 + (1 - 0)] = v5027;
						v81[v5028] = v5027[v83[706 - (644 + 58)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v5028 = v83[1425 - (966 + 457)];
						v81[v5028](v81[v5028 + (1344 - (120 + 1223))]);
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v62[v83[3]];
					else
						v81[v83[2]] = v81[v83[2 + 1]][v83[404 - (249 + 151)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 - 0]] = v81[v83[3]][v83[4 + 0]];
						v75 = v75 + (4 - 3);
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[1 + 2]][v83[1 + 3]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2 - 0]] = v81[v83[9 - 6]][v83[1488 - (1237 + 247)]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1169 - (400 + 767)]] = v62[v83[1316 - (908 + 405)]];
						v75 = v75 + (1966 - (1526 + 439));
						v83 = v71[v75];
						v81[v83[6 - 4]] = v62[v83[3]];
						v75 = v75 + (112 - (29 + 82));
						v83 = v71[v75];
						v81[v83[1764 - (902 + 860)]] = v81[v83[777 - (658 + 116)]][v83[3 + 1]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 + 0]] = v83[1 + 2];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[3 - 1]] = v83[1080 - (1057 + 20)];
						v75 = v75 + (1166 - (966 + 199));
						v83 = v71[v75];
						v81[v83[5 - 3]] = v83[3 + 0];
					end
				elseif (v84 <= (1447 - 1052)) then
					if ((v84 <= (230 + 158)) or (4432 <= 1825)) then
						if ((4840 >= 4530) and (v84 <= (250 + 135))) then
							if (v84 <= (2198 - (1214 + 601))) then
								v81[v83[2]] = v81[v83[237 - (20 + 214)]] * v83[1 + 3];
							elseif (v84 > (77 + 307)) then
								local v5066;
								local v5067;
								v5067 = v83[5 - 3];
								v81[v5067](v13(v81, v5067 + (1516 - (1362 + 153)), v83[1506 - (835 + 668)]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v5067 = v83[1059 - (212 + 845)];
								v5066 = v81[v83[5 - 2]];
								v81[v5067 + 1 + 0] = v5066;
								v81[v5067] = v5066[v83[14 - 10]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v83[25 - (14 + 8)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[11 - 8];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[10 - 7] ~= (0 - 0);
							else
								local v5080 = 1918 - (1705 + 213);
								local v5081;
								while true do
									if (v5080 == (3 - 1)) then
										v81[v83[5 - 3]] = v83[525 - (483 + 39)];
										v75 = v75 + (1653 - (1644 + 8));
										v83 = v71[v75];
										v81[v83[5 - 3]] = v83[3 + 0];
										v75 = v75 + (94 - (53 + 40));
										v5080 = 2 + 1;
									end
									if (v5080 == (805 - (708 + 91))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v75 = v83[3 + 0];
										break;
									end
									if ((4906 == 4906) and (v5080 == (3 + 1))) then
										v81[v83[4 - 2]][v83[9 - 6]] = v81[v83[8 - 4]];
										v75 = v75 + (1233 - (1226 + 6));
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[1188 - (755 + 430)] ~= (0 - 0);
										v75 = v75 + (2 - 1);
										v5080 = 101 - (75 + 21);
									end
									if ((2151 < 2533) and (v5080 == (1 - 0))) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[3];
										v75 = v75 + (1435 - (138 + 1296));
										v83 = v71[v75];
										v5080 = 3 - 1;
									end
									if ((2007 > 1006) and (v5080 == (7 - 4))) then
										v83 = v71[v75];
										v5081 = v83[2 - 0];
										v81[v5081] = v81[v5081](v13(v81, v5081 + 1 + 0, v83[1 + 2]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v5080 = 10 - 6;
									end
									if ((v5080 == (0 - 0)) or (345 == 4338)) then
										v5081 = nil;
										v81[v83[2]] = v62[v83[3]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[5 - 3]] = v81[v83[3]][v83[1950 - (1117 + 829)]];
										v5080 = 1;
									end
									if (v5080 == 5) then
										v83 = v71[v75];
										v62[v83[1 + 2]] = v81[v83[1 + 1]];
										v75 = v75 + (1815 - (1194 + 620));
										v83 = v71[v75];
										v81[v83[2]] = v83[111 - (74 + 34)];
										v5080 = 243 - (140 + 97);
									end
								end
							end
						elseif ((v84 <= 386) or (2416 == 1369)) then
							local v1393;
							local v1394;
							local v1395;
							v81[v83[1 + 1]] = v62[v83[533 - (353 + 177)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1395 = v83[2];
							v1394 = v81[v83[2 + 1]];
							v81[v1395 + (1893 - (783 + 1109))] = v1394;
							v81[v1395] = v1394[v83[13 - 9]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v81[v83[2]] = v83[293 - (76 + 214)];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[329 - (217 + 110)]] = v62[v83[383 - (259 + 121)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[1838 - (1361 + 474)]][v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3 + 0];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1394 = v83[4 - 1];
							v1393 = v81[v1394];
							for v1495 = v1394 + (3 - 2), v83[4] do
								v1393 = v1393 .. v81[v1495];
							end
							v81[v83[458 - (270 + 186)]] = v1393;
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[3];
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v1395 = v83[2];
							v81[v1395](v13(v81, v1395 + (581 - (114 + 466)), v83[3 + 0]));
						elseif (v84 > (1217 - (700 + 130))) then
							v81[v83[1 + 1]] = #v81[v83[13 - 10]];
						else
							local v5083 = 0 - 0;
							local v5084;
							local v5085;
							while true do
								if (v5083 == 4) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[1132 - (667 + 463)]] = v81[v83[1391 - (213 + 1175)]];
									v75 = v75 + (3 - 2);
									v5083 = 10 - 5;
								end
								if ((249 < 2187) and (v5083 == (302 - (153 + 148)))) then
									v83 = v71[v75];
									v5085 = v83[2];
									v5084 = v81[v83[3]];
									v81[v5085 + 1] = v5084;
									v5083 = 4 - 2;
								end
								if (v5083 == (1 + 4)) then
									v83 = v71[v75];
									if v81[v83[2]] then
										v75 = v75 + 1;
									else
										v75 = v83[49 - (21 + 25)];
									end
									break;
								end
								if ((0 - 0) == v5083) then
									v5084 = nil;
									v5085 = nil;
									v81[v83[1946 - (418 + 1526)]] = v81[v83[11 - 8]][v83[1403 - (1330 + 69)]];
									v75 = v75 + 1 + 0;
									v5083 = 1;
								end
								if (v5083 == 3) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v5085 = v83[2];
									v81[v5085] = v81[v5085](v13(v81, v5085 + 1, v83[935 - (833 + 99)]));
									v5083 = 4;
								end
								if ((1 + 1) == v5083) then
									v81[v5085] = v5084[v83[3 + 1]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[3 + 0];
									v5083 = 3;
								end
							end
						end
					elseif (v84 <= (789 - (286 + 112))) then
						if (v84 <= (140 + 249)) then
							local v1417;
							v81[v83[2]] = v81[v83[1 + 2]][v83[417 - (189 + 224)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[365 - (33 + 329)]][v83[1117 - (581 + 532)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v81[v83[3 + 0]][v83[4]];
							v75 = v75 + (1908 - (540 + 1367));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]][v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1417 = v83[4 - 2];
							v81[v1417] = v81[v1417](v13(v81, v1417 + (1385 - (1245 + 139)), v83[6 - 3]));
							v75 = v75 + (1970 - (602 + 1367));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[1173 - (887 + 283)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v81[v83[457 - (301 + 153)]][v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 - 0]] = v81[v83[1 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]];
						elseif (v84 > (35 + 355)) then
							local v5086 = 0;
							local v5087;
							while true do
								if ((744 - (581 + 160)) == v5086) then
									v83 = v71[v75];
									v5087 = v83[6 - 4];
									v81[v5087] = v81[v5087](v13(v81, v5087 + 1, v83[12 - 9]));
									v5086 = 4;
								end
								if (v5086 == (0 + 0)) then
									v5087 = nil;
									v81[v83[2 - 0]] = v81[v83[1329 - (221 + 1105)]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v5086 = 985 - (745 + 239);
								end
								if (v5086 == (1 - 0)) then
									v83 = v71[v75];
									v81[v83[1 + 1]] = v62[v83[142 - (137 + 2)]];
									v75 = v75 + 1;
									v5086 = 7 - 5;
								end
								if (v5086 == (2 - 0)) then
									v83 = v71[v75];
									v81[v83[1 + 1]] = v81[v83[7 - 4]];
									v75 = v75 + (516 - (107 + 408));
									v5086 = 3;
								end
								if (v5086 == (4 + 1)) then
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									if ((2368 == 2368) and v81[v83[2]]) then
										v75 = v75 + 1;
									else
										v75 = v83[3];
									end
									break;
								end
								if (v5086 == 4) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[8 - 6]] = v81[v83[1 + 2]];
									v5086 = 8 - 3;
								end
							end
						else
							local v5088 = 0 - 0;
							local v5089;
							local v5090;
							while true do
								if (v5088 == 9) then
									v83 = v71[v75];
									v5090 = v83[1 + 1];
									v81[v5090] = v81[v5090](v13(v81, v5090 + (999 - (785 + 213)), v83[2 + 1]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]][v83[3 - 0]] = v83[4 - 0];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v5088 = 10 + 0;
								end
								if ((447 - (52 + 393)) == v5088) then
									v83 = v71[v75];
									v5090 = v83[2 + 0];
									v81[v5090] = v81[v5090](v13(v81, v5090 + (1381 - (811 + 569)), v83[3]));
									v75 = v75 + (944 - (143 + 800));
									v83 = v71[v75];
									v81[v83[1027 - (543 + 482)]][v83[1025 - (428 + 594)]] = v81[v83[903 - (113 + 786)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v5088 = 10 - 7;
								end
								if (v5088 == (2 - 1)) then
									v81[v83[2]] = v83[2 + 1];
									v75 = v75 + (936 - (100 + 835));
									v83 = v71[v75];
									v81[v83[2]] = v83[1436 - (340 + 1093)];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[442 - (372 + 67)];
									v75 = v75 + 1 + 0;
									v5088 = 2 + 0;
								end
								if ((v5088 == (5 + 3)) or (4991 < 2811)) then
									v5090 = v83[2 + 0];
									v5089 = v81[v83[843 - (49 + 791)]];
									v81[v5090 + (2 - 1)] = v5089;
									v81[v5090] = v5089[v83[4]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
									v75 = v75 + 1;
									v5088 = 1565 - (965 + 591);
								end
								if ((4957 >= 323) and (v5088 == (18 - 8))) then
									v81[v83[2]] = v62[v83[3]];
									v75 = v75 + (1237 - (776 + 460));
									v83 = v71[v75];
									v5090 = v83[628 - (549 + 77)];
									v5089 = v81[v83[753 - (478 + 272)]];
									v81[v5090 + 1] = v5089;
									v81[v5090] = v5089[v83[9 - 5]];
									v75 = v75 + (4 - 3);
									v5088 = 9 + 2;
								end
								if ((2174 > 1158) and (v5088 == (29 - 17))) then
									v81[v83[2]] = v81[v83[6 - 3]][v83[530 - (482 + 44)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v5090 = v83[2];
									v5089 = v81[v83[885 - (107 + 775)]];
									v81[v5090 + 1] = v5089;
									v81[v5090] = v5089[v83[4]];
									v75 = v75 + (569 - (521 + 47));
									v5088 = 45 - 32;
								end
								if ((16 - 10) == v5088) then
									v83 = v71[v75];
									v81[v83[607 - (489 + 116)]][v83[3]] = v83[3 + 1];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v62[v83[5 - 2]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[2 + 1]][v83[4 + 0]];
									v5088 = 2000 - (1534 + 459);
								end
								if (v5088 == (1 + 6)) then
									v75 = v75 + (1679 - (1441 + 237));
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[3 + 0]][v83[4]];
									v75 = v75 + (825 - (810 + 14));
									v83 = v71[v75];
									v81[v83[610 - (444 + 164)]] = v81[v83[3]][v83[9 - 5]];
									v75 = v75 + (748 - (686 + 61));
									v83 = v71[v75];
									v5088 = 1615 - (1092 + 515);
								end
								if ((2201 > 1949) and (v5088 == (10 - 5))) then
									v75 = v75 + (1661 - (1524 + 136));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v5090 = v83[5 - 3];
									v81[v5090] = v81[v5090](v13(v81, v5090 + 1, v83[2 + 1]));
									v75 = v75 + (1 - 0);
									v5088 = 6;
								end
								if (v5088 == (4 - 1)) then
									v81[v83[945 - (473 + 470)]] = v62[v83[3]];
									v75 = v75 + (1617 - (93 + 1523));
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[512 - (14 + 494)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[2 + 1]][v83[10 - 6]];
									v75 = v75 + 1;
									v5088 = 3 + 1;
								end
								if (v5088 == 0) then
									v5089 = nil;
									v5090 = nil;
									v81[v83[2]] = v62[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v5088 = 1 + 0;
								end
								if (v5088 == (1 + 3)) then
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[6 - 3]][v83[4]];
									v75 = v75 + (484 - (385 + 98));
									v83 = v71[v75];
									v5090 = v83[2];
									v5089 = v81[v83[7 - 4]];
									v81[v5090 + (2 - 1)] = v5089;
									v81[v5090] = v5089[v83[1444 - (945 + 495)]];
									v5088 = 5;
								end
								if (v5088 == (9 + 2)) then
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1065 - (835 + 227)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v5090 = v83[2 + 0];
									v81[v5090] = v81[v5090](v13(v81, v5090 + (4 - 3), v83[3]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v5088 = 12;
								end
								if ((v5088 == (13 + 1)) or (1375 >= 4448)) then
									if (v81[v83[2 + 0]] or (2545 == 4986)) then
										v75 = v75 + (1 - 0);
									else
										v75 = v83[1780 - (404 + 1373)];
									end
									break;
								end
								if (v5088 == 13) then
									v83 = v71[v75];
									v5090 = v83[2];
									v81[v5090](v81[v5090 + (45 - (38 + 6))]);
									v75 = v75 + (1351 - (1213 + 137));
									v83 = v71[v75];
									v81[v83[4 - 2]] = v62[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v5088 = 10 + 4;
								end
							end
						end
					elseif ((v84 <= (209 + 184)) or (2514 > 3194)) then
						if ((v84 == (542 - 150)) or (4090 <= 3229)) then
							v81[v83[3 - 1]][v83[1585 - (1566 + 16)]] = v83[1196 - (635 + 557)];
						else
							local v5093;
							local v5094;
							v5094 = v83[2];
							v5093 = v81[v83[3]];
							v81[v5094 + (4 - 3)] = v5093;
							v81[v5094] = v5093[v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v5094 = v83[2 + 0];
							v81[v5094] = v81[v5094](v81[v5094 + 1]);
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v5094 = v83[7 - 5];
							v5093 = v81[v83[1587 - (1521 + 63)]];
							v81[v5094 + 1 + 0] = v5093;
							v81[v5094] = v5093[v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[747 - (729 + 16)]] = v81[v83[4 - 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v5094 = v83[915 - (550 + 363)];
							v81[v5094] = v81[v5094](v13(v81, v5094 + (2 - 1), v83[1918 - (865 + 1050)]));
							v75 = v75 + 1;
							v83 = v71[v75];
							if not v81[v83[1451 - (1014 + 435)]] then
								v75 = v75 + 1;
							else
								v75 = v83[3];
							end
						end
					elseif (v84 == (833 - 439)) then
						local v5108 = v83[1 + 1];
						do
							return v81[v5108](v13(v81, v5108 + (458 - (5 + 452)), v83[3]));
						end
					else
						local v5109;
						local v5110;
						v81[v83[2 + 0]] = v62[v83[384 - (233 + 148)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v5110 = v83[1 + 1];
						v5109 = v81[v83[3]];
						v81[v5110 + 1] = v5109;
						v81[v5110] = v5109[v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[4 - 2]] = v83[806 - (11 + 792)];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v62[v83[1897 - (1202 + 692)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[10 - 7]][v83[844 - (90 + 750)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[613 - (589 + 22)]] = v83[1 + 2];
						v75 = v75 + (1701 - (85 + 1615));
						v83 = v71[v75];
						v5110 = v83[691 - (538 + 151)];
						v81[v5110](v13(v81, v5110 + 1, v83[3]));
						v75 = v75 + 1;
						v83 = v71[v75];
						do
							return;
						end
					end
				elseif (v84 <= (116 + 285)) then
					if ((3026 == 3026) and (v84 <= (653 - 255))) then
						if (v84 <= (305 + 91)) then
							local v1434 = 0 - 0;
							local v1435;
							local v1436;
							local v1437;
							while true do
								if ((3477 <= 4917) and (v1434 == (21 - 16))) then
									v81[v83[1690 - (1281 + 407)]] = v81[v83[3]][v83[4]];
									v75 = v75 + (1138 - (338 + 799));
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[693 - (177 + 513)]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1434 = 10 - 4;
								end
								if (v1434 == (0 - 0)) then
									v1435 = nil;
									v1436 = nil;
									v1437 = nil;
									v1437 = v83[1 + 1];
									v1436 = v81[v83[10 - 7]];
									v81[v1437 + (1971 - (1839 + 131))] = v1436;
									v1434 = 792 - (420 + 371);
								end
								if (v1434 == (1643 - (339 + 1302))) then
									v81[v83[2 + 0]] = v83[3];
									v75 = v75 + (233 - (196 + 36));
									v83 = v71[v75];
									v81[v83[1220 - (655 + 563)]] = v62[v83[268 - (259 + 6)]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v1434 = 225 - (205 + 17);
								end
								if (v1434 == (1013 - (897 + 109))) then
									v81[v83[4 - 2]] = v1435;
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2]] = v83[1 + 2];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v1434 = 1205 - (899 + 298);
								end
								if ((v1434 == 1) or (2791 == 3634)) then
									v81[v1437] = v1436[v83[3 + 1]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[10 - 7];
									v75 = v75 + (645 - (204 + 440));
									v83 = v71[v75];
									v1434 = 1 + 1;
								end
								if ((v1434 == (4 + 2)) or (3582 <= 2106)) then
									v81[v83[938 - (97 + 839)]] = v83[950 - (301 + 646)];
									v75 = v75 + (1814 - (466 + 1347));
									v83 = v71[v75];
									v1436 = v83[1854 - (909 + 942)];
									v1435 = v81[v1436];
									for v6635 = v1436 + 1 + 0, v83[15 - 11] do
										v1435 = v1435 .. v81[v6635];
									end
									v1434 = 2 + 5;
								end
								if (v1434 == (1803 - (259 + 1540))) then
									v81[v83[2 + 0]] = v81[v83[3]][v81[v83[4 + 0]]];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v81[v83[164 - (52 + 110)]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1434 = 10 - 5;
								end
								if ((2155 <= 3527) and (v1434 == (9 - 6))) then
									v81[v83[2 - 0]] = v81[v83[1486 - (1242 + 241)]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[3 - 1]] = v81[v83[1 + 2]][v83[4]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v1434 = 221 - (22 + 195);
								end
								if ((v1434 == (1491 - (235 + 1248))) or (207 > 3385)) then
									v1437 = v83[2 + 0];
									v81[v1437](v13(v81, v1437 + (391 - (334 + 56)), v83[3]));
									break;
								end
							end
						elseif (v84 > (1143 - 746)) then
							local v5127 = 0 - 0;
							local v5128;
							local v5129;
							while true do
								if ((4379 >= 1628) and (v5127 == 0)) then
									v5128 = nil;
									v5129 = nil;
									v81[v83[2]] = v62[v83[4 - 1]];
									v5127 = 1;
								end
								if (v5127 == (11 - 4)) then
									v81[v83[2]] = v83[6 - 3];
									break;
								end
								if (v5127 == (3 + 1)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v5129 = v83[2];
									v5127 = 559 - (223 + 331);
								end
								if (v5127 == 2) then
									v5128 = v81[v83[6 - 3]];
									v81[v5129 + 1] = v5128;
									v81[v5129] = v5128[v83[163 - (140 + 19)]];
									v5127 = 8 - 5;
								end
								if ((v5127 == (1069 - (844 + 219))) or (4085 < 1510)) then
									v81[v83[1785 - (1230 + 553)]] = v81[v83[8 - 5]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v5127 = 1922 - (1658 + 257);
								end
								if ((3557 >= 1912) and (v5127 == 3)) then
									v75 = v75 + (351 - (325 + 25));
									v83 = v71[v75];
									v81[v83[778 - (141 + 635)]] = v83[1066 - (152 + 911)];
									v5127 = 4;
								end
								if (v5127 == (1 - 0)) then
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v5129 = v83[355 - (31 + 322)];
									v5127 = 2;
								end
								if ((v5127 == 5) or (1597 > 4836)) then
									v81[v5129] = v81[v5129](v13(v81, v5129 + 1, v83[1135 - (811 + 321)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v5127 = 1 + 5;
								end
							end
						else
							local v5130;
							local v5131;
							local v5130, v5132;
							local v5133;
							v81[v83[1 + 1]] = v62[v83[2 + 1]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = not v81[v83[3 - 0]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v62[v83[3]] = v81[v83[1712 - (1709 + 1)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v62[v83[2 + 1]];
							v75 = v75 + (947 - (134 + 812));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v61[v83[3]];
							v75 = v75 + (1782 - (1565 + 216));
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[2 + 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v5133 = v83[1498 - (325 + 1171)];
							v5130, v5132 = v74(v81[v5133](v81[v5133 + (1 - 0)]));
							v76 = (v5132 + v5133) - 1;
							v5131 = 0;
							for v6552 = v5133, v76 do
								v5131 = v5131 + 1 + 0;
								v81[v6552] = v5130[v5131];
							end
							v75 = v75 + (1408 - (1179 + 228));
							v83 = v71[v75];
							v5133 = v83[2 + 0];
							v5130 = {v81[v5133](v13(v81, v5133 + 1 + 0, v76))};
							v5131 = 551 - (502 + 49);
							for v6555 = v5133, v83[4] do
								v5131 = v5131 + (1495 - (824 + 670));
								v81[v6555] = v5130[v5131];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v75 = v83[1 + 2];
						end
					elseif ((2652 > 229) and (v84 <= 399)) then
						local v1438;
						local v1439;
						v1439 = v83[2 + 0];
						v81[v1439](v13(v81, v1439 + 1, v83[3]));
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v1439 = v83[743 - (661 + 80)];
						v1438 = v81[v83[8 - 5]];
						v81[v1439 + (2 - 1)] = v1438;
						v81[v1439] = v1438[v83[1542 - (464 + 1074)]];
						v75 = v75 + (1486 - (1044 + 441));
						v83 = v71[v75];
						v81[v83[1314 - (425 + 887)]] = v83[3];
						v75 = v75 + 1;
						v83 = v71[v75];
						v1439 = v83[2 + 0];
						v81[v1439](v13(v81, v1439 + (3 - 2), v83[473 - (130 + 340)]));
						v75 = v75 + 1;
						v83 = v71[v75];
						v1439 = v83[3 - 1];
						v1438 = v81[v83[1174 - (27 + 1144)]];
						v81[v1439 + 1 + 0] = v1438;
						v81[v1439] = v1438[v83[11 - 7]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[4 - 2]] = v83[3];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 - 0]] = v83[3 + 0];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[4 - 2]] = v83[6 - 3] ~= (0 - 0);
					elseif (v84 > (1617 - (1195 + 22))) then
						local v5146 = 0 + 0;
						local v5147;
						while true do
							if ((1343 - (364 + 979)) == v5146) then
								v5147 = nil;
								v81[v83[4 - 2]] = v81[v83[883 - (447 + 433)]][v83[8 - 4]];
								v75 = v75 + 1;
								v5146 = 1;
							end
							if ((v5146 == (240 - (84 + 152))) or (1273 >= 2434)) then
								v83 = v71[v75];
								v5147 = v83[2];
								v81[v5147] = v81[v5147](v13(v81, v5147 + 1, v83[3]));
								v5146 = 1288 - (399 + 884);
							end
							if (v5146 == (8 - 3)) then
								v75 = v75 + (872 - (336 + 535));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]];
								v5146 = 970 - (619 + 345);
							end
							if (((1009 - (345 + 663)) == v5146) or (3530 > 4914)) then
								v83 = v71[v75];
								v81[v83[2 - 0]] = v83[1 + 2];
								v75 = v75 + 1;
								v5146 = 2;
							end
							if (v5146 == (204 - (197 + 1))) then
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[738 - (122 + 613)];
								break;
							end
							if (v5146 == (5 - 3)) then
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3] ~= (1141 - (757 + 384));
								v75 = v75 + (2 - 1);
								v5146 = 535 - (447 + 85);
							end
							if ((3292 > 2219) and (v5146 == (8 - 5))) then
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[4 - 1];
								v75 = v75 + (2 - 1);
								v5146 = 5 - 1;
							end
						end
					else
						local v5148;
						v81[v83[1 + 1]] = v81[v83[4 - 1]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2]] = v81[v83[1 + 2]];
						v75 = v75 + (1044 - (239 + 804));
						v83 = v71[v75];
						v5148 = v83[6 - 4];
						do
							return v81[v5148](v13(v81, v5148 + 1 + 0, v83[2 + 1]));
						end
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v5148 = v83[2];
						do
							return v13(v81, v5148, v76);
						end
						v75 = v75 + (16 - (7 + 8));
						v83 = v71[v75];
						v75 = v83[6 - 3];
					end
				elseif (v84 <= (313 + 91)) then
					if (v84 <= (1157 - (468 + 287))) then
						local v1456;
						local v1457, v1458;
						local v1459;
						local v1460;
						v81[v83[759 - (92 + 665)]] = v62[v83[3 + 0]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[7 - 5]] = v62[v83[10 - 7]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v1460 = v83[1 + 1];
						v1459 = v81[v83[4 - 1]];
						v81[v1460 + 1 + 0] = v1459;
						v81[v1460] = v1459[v83[15 - 11]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[313 - (53 + 258)]] = v83[3];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v1460 = v83[1 + 1];
						v1457, v1458 = v74(v81[v1460](v13(v81, v1460 + 1 + 0, v83[11 - 8])));
						v76 = (v1458 + v1460) - 1;
						v1456 = 0 - 0;
						for v1496 = v1460, v76 do
							local v1497 = 1406 - (532 + 874);
							while true do
								if (v1497 == 0) then
									v1456 = v1456 + (4 - 3);
									v81[v1496] = v1457[v1456];
									break;
								end
							end
						end
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v1460 = v83[2 - 0];
						v81[v1460] = v81[v1460](v13(v81, v1460 + 1, v76));
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2 - 0]]();
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						do
							return;
						end
					elseif (v84 > 403) then
						local v5157 = 0 - 0;
						local v5158;
						local v5159;
						local v5160;
						while true do
							if (v5157 == (6 + 0)) then
								for v9710 = 1488 - (229 + 1258), v5158 do
									v5159[v9710] = v81[v5160 + v9710];
								end
								break;
							end
							if ((379 - (140 + 234)) == v5157) then
								v83 = v71[v75];
								v5160 = v83[1902 - (614 + 1286)];
								v5159 = v81[v5160];
								v5158 = v83[2 + 1];
								v5157 = 4 + 2;
							end
							if (v5157 == (2 - 0)) then
								v83 = v71[v75];
								v81[v83[2]] = v83[7 - 4];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v5157 = 3;
							end
							if ((v5157 == (1085 - (148 + 934))) or (679 == 3069)) then
								v81[v83[2]] = v83[1 + 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v83[1 + 2];
								v5157 = 7 - 3;
							end
							if (v5157 == (3 + 1)) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[641 - (322 + 317)]] = v83[1 + 2];
								v75 = v75 + (1 - 0);
								v5157 = 1819 - (1658 + 156);
							end
							if (v5157 == (0 + 0)) then
								v5158 = nil;
								v5159 = nil;
								v5160 = nil;
								v81[v83[2 - 0]] = v83[6 - 3];
								v5157 = 1 + 0;
							end
							if ((466 == 466) and ((1 + 0) == v5157)) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1798 - (1667 + 129)]] = v83[5 - 2];
								v75 = v75 + 1 + 0;
								v5157 = 2;
							end
						end
					elseif (v81[v83[1 + 1]] ~= v83[679 - (405 + 270)]) then
						v75 = v75 + (1362 - (944 + 417));
					else
						v75 = v83[3 - 0];
					end
				elseif (v84 <= (314 + 92)) then
					if ((3682 > 2783) and (v84 == (1209 - 804))) then
						v81[v83[1910 - (1074 + 834)]] = v81[v83[8 - 5]] - v81[v83[4]];
					else
						local v5162 = 0;
						local v5163;
						local v5164;
						while true do
							if (v5162 == (1 + 1)) then
								v75 = v75 + (601 - (60 + 540));
								v83 = v71[v75];
								v81[v83[2]] = v61[v83[1600 - (1591 + 6)]];
								v5162 = 3 + 0;
							end
							if (v5162 == 5) then
								v81[v5164] = v81[v5164](v13(v81, v5164 + (919 - (657 + 261)), v83[394 - (248 + 143)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v5162 = 11 - 5;
							end
							if (v5162 == (5 - 1)) then
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v5164 = v83[1 + 1];
								v5162 = 5;
							end
							if (v5162 == 3) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[326 - (210 + 113)]][v83[2 + 2]];
								v5162 = 893 - (110 + 779);
							end
							if (v5162 == (238 - (141 + 96))) then
								v5163 = v81[v83[3]];
								v81[v5164 + (193 - (30 + 162))] = v5163;
								v81[v5164] = v5163[v83[4]];
								v5162 = 652 - (431 + 219);
							end
							if (v5162 == 6) then
								if v81[v83[2 - 0]] then
									v75 = v75 + (1 - 0);
								else
									v75 = v83[3];
								end
								break;
							end
							if (v5162 == (0 - 0)) then
								v5163 = nil;
								v5164 = nil;
								v5164 = v83[2];
								v5162 = 1 - 0;
							end
						end
					end
				elseif (v84 > 407) then
					local v5165;
					local v5166;
					v81[v83[495 - (20 + 473)]] = v62[v83[9 - 6]];
					v75 = v75 + 1;
					v83 = v71[v75];
					v5166 = v83[5 - 3];
					v5165 = v81[v83[3]];
					v81[v5166 + 1 + 0] = v5165;
					v81[v5166] = v5165[v83[492 - (319 + 169)]];
					v75 = v75 + (117 - (26 + 90));
					v83 = v71[v75];
					v81[v83[2]] = v83[3];
					v75 = v75 + 1;
					v83 = v71[v75];
					v81[v83[783 - (155 + 626)]] = v62[v83[1754 - (1167 + 584)]];
					v75 = v75 + (1416 - (744 + 671));
					v83 = v71[v75];
					v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
					v75 = v75 + 1 + 0;
					v83 = v71[v75];
					v81[v83[9 - 7]] = v83[685 - (111 + 571)];
					v75 = v75 + 1 + 0;
					v83 = v71[v75];
					v5166 = v83[6 - 4];
					v81[v5166](v13(v81, v5166 + 1 + 0, v83[7 - 4]));
					v75 = v75 + (4 - 3);
					v83 = v71[v75];
					do
						return;
					end
				else
					local v5184 = 0;
					local v5185;
					while true do
						if ((2386 <= 4406) and (v5184 == (1975 - (317 + 1658)))) then
							v5185 = nil;
							v5185 = v83[2];
							v81[v5185](v81[v5185 + (838 - (505 + 332))]);
							v5184 = 678 - (54 + 623);
						end
						if (v5184 == 9) then
							v75 = v75 + (1179 - (787 + 391));
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[3]][v83[18 - 14]];
							break;
						end
						if ((1652 >= 542) and (v5184 == (3 + 3))) then
							v75 = v75 + (305 - (47 + 257));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v62[v83[163 - (15 + 145)]];
							v5184 = 7 + 0;
						end
						if ((v5184 == (141 - (90 + 48))) or (27 >= 4993)) then
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[4 - 2]] = v81[v83[8 - 5]][v83[4 + 0]];
							v5184 = 4;
						end
						if (v5184 == (8 - 4)) then
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[356 - (333 + 20)]][v83[4 - 0]];
							v5184 = 3 + 2;
						end
						if ((364 <= 3865) and (v5184 == (1 + 1))) then
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[6 - 4]] = v81[v83[1772 - (1338 + 431)]][v83[4 - 0]];
							v5184 = 1140 - (475 + 662);
						end
						if (v5184 == 1) then
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[3 - 1]] = v62[v83[12 - 9]];
							v5184 = 2;
						end
						if (v5184 == (1936 - (768 + 1163))) then
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1602 - (1098 + 501)]][v83[4]];
							v5184 = 1943 - (1272 + 665);
						end
						if (v5184 == (1631 - (1278 + 345))) then
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1767 - (666 + 1098)]][v83[510 - (501 + 5)]];
							v5184 = 3 + 6;
						end
						if ((3257 > 2186) and (v5184 == (18 - 11))) then
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[10 - 7]][v83[2 + 2]];
							v5184 = 17 - 9;
						end
					end
				end
				v75 = v75 + 1 + 0;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);